androidx.window.layout.ExtensionInterfaceCompat
androidx.window.layout.SidecarCompat
androidx.window.R$attr
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.window.R$id
androidx.core.app.RemoteActionCompat
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.window.embedding.SplitRule$Api30Impl
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.window.embedding.EmbeddingRule
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.window.layout.SidecarWindowBackend
kotlinx.coroutines.android.AndroidExceptionPreHandler
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.window.layout.WindowInfoTracker$Companion
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.window.core.ExperimentalWindowApi
androidx.window.layout.DisplayCompatHelperApi28
androidx.window.embedding.EmptyEmbeddingComponent
androidx.savedstate.Recreator
androidx.window.layout.FoldingFeature$State
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.window.layout.FoldingFeature$State$Companion
io.flutter.plugin.platform.SingleViewPresentation
android.support.v4.graphics.drawable.IconCompatParcelizer
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
io.flutter.plugins.imagepicker.ImagePickerFileProvider
androidx.window.layout.SidecarCompat$DistinctElementCallback
androidx.window.embedding.EmbeddingCompat$Companion
androidx.activity.ComponentActivity$3
androidx.window.embedding.EmbeddingBackend
androidx.window.embedding.SplitInfo
androidx.window.layout.HardwareFoldingFeature$Type$Companion
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
androidx.window.embedding.EmbeddingAdapter
androidx.window.java.R
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
androidx.window.layout.WindowMetricsCalculator
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
androidx.lifecycle.DefaultLifecycleObserver
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.window.embedding.SplitPlaceholderRule
androidx.annotation.Keep
androidx.window.embedding.ActivityFilter
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
androidx.window.layout.WindowMetricsCalculatorDecorator
androidx.window.embedding.SplitController$Companion
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.window.layout.SidecarAdapter$Companion
androidx.window.embedding.SplitRule$LayoutDir
androidx.window.core.Version$Companion
android.support.v4.app.RemoteActionCompatParcelizer
androidx.window.embedding.SplitRuleParser
androidx.window.layout.DisplayCompatHelperApi17
androidx.window.R
org.tensorflow.lite.gpu.GpuDelegate
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.window.layout.HardwareFoldingFeature
androidx.lifecycle.LiveData$LifecycleBoundObserver
io.flutter.embedding.engine.FlutterJNI
androidx.core.graphics.drawable.IconCompat
androidx.window.embedding.EmbeddingInterfaceCompat
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.window.layout.WindowInfoTrackerImpl
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
androidx.versionedparcelable.CustomVersionedParcelable
androidx.window.layout.SidecarCompat$Companion
androidx.window.layout.ActivityCompatHelperApi24
androidx.savedstate.SavedStateRegistry$1
androidx.window.embedding.SplitController
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
androidx.window.layout.WindowInfoTracker
com.piddocke.rashinator.MainActivity
androidx.window.embedding.SplitPairRule
androidx.core.app.RemoteActionCompatParcelizer
androidx.fragment.app.Fragment$2
androidx.window.layout.EmptyDecorator
androidx.window.layout.HardwareFoldingFeature$Type
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.window.embedding.ActivityStack
io.flutter.view.FlutterCallbackInformation
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.window.layout.WindowInfoTrackerDecorator
androidx.activity.ComponentActivity$2
androidx.window.layout.DisplayFeature
androidx.window.layout.ActivityCompatHelperApi30
androidx.window.R$styleable
org.tensorflow.lite.annotations.UsedByReflection
androidx.lifecycle.Lifecycling$1
io.flutter.embedding.android.FlutterSplashView$SavedState
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.window.layout.FoldingFeature$Orientation
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.window.core.Version
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.window.layout.HardwareFoldingFeature$Companion
androidx.window.layout.WindowMetrics
androidx.window.embedding.ActivityRule
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
androidx.window.layout.FoldingFeature
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.versionedparcelable.ParcelImpl
androidx.activity.ImmLeaksCleaner
io.flutter.view.AccessibilityViewEmbedder
androidx.window.layout.FoldingFeature$OcclusionType$Companion
androidx.window.layout.WindowInfoTrackerImpl$Companion
androidx.window.layout.WindowLayoutInfo
androidx.lifecycle.FullLifecycleObserverAdapter
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.window.layout.WindowBackend
androidx.window.layout.ExtensionWindowLayoutInfoBackend
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
io.flutter.plugins.GeneratedPluginRegistrant
androidx.window.layout.SidecarWindowBackend$Companion
androidx.window.embedding.EmbeddingTranslatingCallback
androidx.window.core.Version$bigInteger$2
androidx.window.layout.SidecarAdapter
androidx.window.embedding.ExtensionEmbeddingBackend
androidx.window.embedding.SplitRule
androidx.window.layout.FoldingFeature$OcclusionType
org.tensorflow.lite.InterpreterFactoryImpl
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.window.embedding.EmbeddingCompat
androidx.window.embedding.MatcherUtils
androidx.window.core.Bounds
androidx.core.app.CoreComponentFactory
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.window.embedding.SplitPairFilter
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.window.R$attr: int placeholderActivityName
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityPluginBinding
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.util.List $delimitersList
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
kotlinx.coroutines.EventLoop: kotlinx.coroutines.internal.ArrayQueue unconfinedQueue
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onUserLeaveHintListeners
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: int viewId
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
androidx.versionedparcelable.VersionedParcelParcel: int mCurrentField
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode HYBRID_ONLY
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANIM
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousLabel
io.flutter.embedding.android.FlutterActivity$1: io.flutter.embedding.android.FlutterActivity this$0
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: kotlinx.coroutines.internal.LockFreeLinkedListNode $node
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mStart
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String increasedValue
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type PHYSICAL_DISPLAY_PLATFORM_VIEW
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getModuleMethod
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: android.app.Activity thisActivity
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowRootView
androidx.window.embedding.SplitPairRule: boolean clearTop
io.flutter.view.AccessibilityBridge: android.view.View rootAccessibilityView
kotlinx.coroutines.EventLoop: boolean shared
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel this$0
sq.flutter.tflite.TflitePlugin$RunPix2PixOnFrame: java.lang.String outputType
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: io.flutter.plugin.common.MethodChannel$Result methodResult
kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: java.lang.String encodedName
androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IEND
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName$Key Key
org.tensorflow.lite.TensorImpl: org.tensorflow.lite.Tensor$QuantizationParams quantizationParamsCopy
io.flutter.view.AccessibilityBridge$1: io.flutter.view.AccessibilityBridge this$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterView val$flutterView
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListHead queue
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached
kotlin.jvm.internal.PackageReference: java.lang.String moduleName
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $VALUES
io.flutter.plugin.platform.VirtualDisplayController: int densityDpi
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.android.FlutterView this$0
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: android.view.KeyEvent keyEvent
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: kotlinx.coroutines.channels.AbstractChannel this$0
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.atomic.AtomicIntegerFieldUpdater inFlightTasks$FU
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String isolateSnapshotData
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_ACTIVE
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PRIVATE
sq.flutter.tflite.TflitePlugin$RunSegmentationOnFrame: long startTime
androidx.window.R$styleable: int SplitPairRule_splitRatio
org.tensorflow.lite.TensorFlowLite: java.util.logging.Logger logger
org.tensorflow.lite.NativeInterpreterWrapper: long inferenceDurationNanoseconds
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
io.flutter.Log: int INFO
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
kotlinx.coroutines.CompletedExceptionally: int _handled
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: io.flutter.embedding.engine.systemchannels.LocalizationChannel this$0
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: java.util.concurrent.ExecutorService executorService
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND
androidx.window.R$attr: int clearTop
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object $expect$inlined
io.flutter.embedding.android.FlutterView$5: io.flutter.embedding.android.FlutterView this$0
kotlinx.coroutines.channels.ArrayChannel: java.util.concurrent.locks.ReentrantLock lock
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$minMax
androidx.core.view.WindowInsetsControllerCompat$Impl30: android.view.WindowInsetsController mInsetsController
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener this$0
io.flutter.plugin.platform.PlatformViewsController$1: io.flutter.plugin.platform.PlatformViewsController this$0
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: java.lang.String encodedName
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type
androidx.collection.MapCollections$MapIterator: int mEnd
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number downTime
io.flutter.plugin.editing.TextInputPlugin: android.util.SparseArray autofillConfiguration
androidx.exifinterface.media.ExifInterface: boolean mModified
androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge accessibilityBridge
androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_1
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set newIntentListeners
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mBatchTextEditingDeltas
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.Future initResultFuture
sq.flutter.tflite.TflitePlugin$RunPix2PixOnImage: long startTime
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
kotlin.collections.EmptyList: kotlin.collections.EmptyList INSTANCE
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.ConcurrentLinkedQueue queue
kotlinx.coroutines.DispatcherExecutor: kotlinx.coroutines.CoroutineDispatcher dispatcher
androidx.window.R$styleable: int ActivityRule_alwaysExpand
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
sq.flutter.tflite.TflitePlugin: java.lang.String[] partNames
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory notifications
io.flutter.embedding.android.FlutterView: java.util.Set flutterEngineAttachmentListeners
androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes
androidx.core.view.WindowInsetsControllerCompat$Impl20: android.view.Window mWindow
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger binaryMessenger
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int viewId
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMax
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: android.app.Activity activity
io.flutter.plugin.editing.TextEditingDelta: int newSelectionEnd
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingRight
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence sequence
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent
kotlin.Result: kotlin.Result$Companion Companion
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.JSONMethodCodec INSTANCE
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CancelHandler cancelHandler
kotlinx.coroutines.JobImpl: boolean handlesException
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode parent
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mTextWhenBeginBatchEdit
androidx.exifinterface.media.ExifInterface$ExifTag: int number
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode
androidx.lifecycle.ReflectiveGenericLifecycleObserver: androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LifecycleOwner mOwner
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT
io.flutter.view.AccessibilityBridge: int previousRouteId
kotlinx.coroutines.scheduling.CoroutineScheduler: int corePoolSize
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.ImageResizer imageResizer
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String dataDirPath
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action COPY
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] restorationData
androidx.exifinterface.media.ExifInterface$Rational: long numerator
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS
kotlin.ranges.IntRange: kotlin.ranges.IntRange EMPTY
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
io.flutter.plugin.editing.TextEditingDelta: int deltaStart
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext
kotlinx.coroutines.CompletedContinuation: kotlin.jvm.functions.Function1 onCancellation
io.flutter.embedding.engine.systemchannels.SystemChannel: io.flutter.plugin.common.BasicMessageChannel channel
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.jvm.functions.Function1 safeCast
sq.flutter.tflite.TflitePlugin$RunYOLO: int blockSize
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
kotlinx.coroutines.CommonPool: int requestedParallelism
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadPreviousConfig
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol ENQUEUE_FAILED
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
org.tensorflow.lite.NativeInterpreterWrapper: java.util.Map outputsIndexes
io.flutter.embedding.android.FlutterView$4: io.flutter.embedding.android.FlutterView this$0
org.tensorflow.lite.InterpreterApi$Options: org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime runtime
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
io.flutter.plugin.platform.PlatformViewWrapper: io.flutter.view.TextureRegistry$OnTrimMemoryListener trimMemoryListener
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object result
io.flutter.plugin.editing.ListenableEditingState: android.view.inputmethod.BaseInputConnection mDummyConnection
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager accessibilityManager
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger messenger
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
org.tensorflow.lite.nnapi.NnApiDelegate$Options: int executionPreference
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] EMPTY_STRING_ARRAY
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_1
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
kotlinx.coroutines.CoroutineName: java.lang.String name
sq.flutter.tflite.TflitePlugin$RunModelOnBinary: float THRESHOLD
sq.flutter.tflite.TflitePlugin$RunPix2PixOnBinary: java.lang.String outputType
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Companion Companion
io.flutter.view.AccessibilityBridge$SemanticsNode: int currentValueLength
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS
io.flutter.embedding.android.KeyEmbedderResponder$1: int[] $SwitchMap$io$flutter$embedding$android$KeyData$Type
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String engineCachesPath
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionBase
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String domainNetworkPolicy
sq.flutter.tflite.TflitePlugin$RunPix2PixOnBinary: java.nio.ByteBuffer input
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object $element
kotlinx.coroutines.CompletedContinuation: java.lang.Object result
kotlinx.coroutines.Active: kotlinx.coroutines.Active INSTANCE
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange nextItem
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean mayHaveLocalTasks
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.ListenableEditingState mEditable
io.flutter.embedding.engine.renderer.FlutterRenderer$1: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext context
org.tensorflow.lite.NativeInterpreterWrapper: java.nio.ByteBuffer modelByteBuffer
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Unconfined
org.tensorflow.lite.NativeInterpreterWrapper: long errorHandle
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
io.flutter.view.AccessibilityBridge: int FIRST_RESOURCE_ID
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set userLeaveHintListeners
org.tensorflow.lite.RuntimeFlavor: org.tensorflow.lite.RuntimeFlavor SYSTEM
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager mImm
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder
androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0
io.flutter.plugin.platform.PlatformViewWrapper: int left
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState state
kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int physicalTouchSlop
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED
androidx.window.R$attr: int primaryActivityName
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
io.flutter.plugin.editing.TextEditingDelta: int deltaEnd
androidx.exifinterface.media.ExifInterface: int mOffsetToExifData
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel
kotlinx.coroutines.DispatchedCoroutine: int _decision
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
androidx.core.view.WindowInsetsControllerCompat$Impl20: android.view.View mView
io.flutter.embedding.android.FlutterActivity: android.window.OnBackInvokedCallback onBackInvokedCallback
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat mIcon
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionBase
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingBottom
kotlinx.coroutines.ThreadLocalEventLoop: java.lang.ThreadLocal ref
kotlin.Unit: kotlin.Unit INSTANCE
io.flutter.plugin.editing.ListenableEditingState$1: io.flutter.plugin.editing.ListenableEditingState this$0
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory taskQueueFactory
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_HYBRID_FALLBACK
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int flags
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType FOLD
org.tensorflow.lite.NativeInterpreterWrapper: org.tensorflow.lite.TensorImpl[] outputTensors
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle mLifecycle
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource timeSource
kotlinx.coroutines.internal.MainDispatchersKt: boolean SUPPORT_MISSING
sq.flutter.tflite.TflitePlugin: int inputSize
io.flutter.plugins.imagepicker.ImagePickerDelegate$3: io.flutter.plugins.imagepicker.ImagePickerDelegate this$0
org.tensorflow.lite.nnapi.NnApiDelegate: org.tensorflow.lite.nnapi.NnApiDelegate$PrivateInterface impl
io.flutter.plugin.editing.ListenableEditingState: int mComposingEndWhenBeginBatchEdit
kotlin.jvm.internal.ClassReference: java.util.HashMap classFqNames
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String uniqueIdentifier
io.flutter.view.AccessibilityBridge: java.util.List flutterNavigationStack
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.android.FlutterImageView$SurfaceKind kind
sq.flutter.tflite.TflitePlugin$RunPix2PixOnImage: float IMAGE_MEAN
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType INT16
io.flutter.embedding.android.KeyboardManager: java.util.HashSet redispatchedEvents
io.flutter.plugin.editing.TextEditingDelta: int newComposingEnd
io.flutter.plugin.editing.ListenableEditingState: int mComposingStartWhenBeginBatchEdit
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterView flutterView
kotlin.jvm.internal.CallableReference: boolean isTopLevel
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String baseContinuationImplClassName
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.ConcurrentLinkedQueue queue
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Map globalRegistrarMap
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int left
io.flutter.embedding.android.KeyData$Type: long value
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor sInstance
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getDescriptorMethod
androidx.collection.SimpleArrayMap: int mBaseCacheSize
org.tensorflow.lite.nnapi.NnApiDelegate$Options: java.lang.String modelToken
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int direction
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 findOne
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel$Reply callback
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE
androidx.window.R$id: int locale
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInHitTestOrder
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.view.TextureRegistry$SurfaceTextureEntry textureEntry
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType BOOL
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: int replyId
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String nativeLibraryDir
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader this$0
org.tensorflow.lite.nnapi.NnApiDelegate: boolean initialized
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.ImagePickerDelegate$FileUriResolver fileUriResolver
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.embedding.android.KeyChannelResponder: io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String stackTraceRecoveryClassName
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler this$0
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0
kotlinx.coroutines.internal.Removed: kotlinx.coroutines.internal.LockFreeLinkedListNode ref
sq.flutter.tflite.TflitePlugin$RunSegmentationOnImage: java.nio.ByteBuffer output
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: long id
androidx.window.core.Version: int major
androidx.window.layout.FoldingFeature$State: java.lang.String description
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU
kotlin.internal.PlatformImplementations$ReflectThrowable: kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE
androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading
kotlinx.coroutines.CompletedContinuation: java.lang.Object idempotentResume
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List labelAttributes
io.flutter.embedding.android.FlutterView: android.database.ContentObserver systemSettingsObserver
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalBlockingQueue
org.tensorflow.lite.NativeInterpreterWrapper: long interpreterHandle
kotlinx.coroutines.CancellableContinuationImpl: int _decision
io.flutter.embedding.android.FlutterTextureView: android.view.TextureView$SurfaceTextureListener surfaceTextureListener
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set viewDestroyListeners
kotlinx.coroutines.flow.internal.SafeCollector: int collectContextSize
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
io.flutter.plugin.platform.PlatformViewsController: java.lang.Class[] VIEW_TYPES_REQUIRE_VIRTUAL_DISPLAY
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel this$0
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap vdControllers
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget
kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE
io.flutter.plugin.platform.PlatformOverlayView: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityDelegate
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFirstFrameRendered
androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceEndMethod
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType SPELLOUT
androidx.window.embedding.ActivityRule: java.util.Set filters
io.flutter.view.VsyncWaiter$DisplayListener: io.flutter.view.VsyncWaiter this$0
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
androidx.window.R$styleable: int ActivityFilter_activityName
androidx.exifinterface.media.ExifInterface: byte[] WEBP_VP8_SIGNATURE
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object result
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMin
kotlinx.coroutines.android.HandlerContext: java.lang.String name
androidx.core.view.WindowInsetsControllerCompat: androidx.core.view.WindowInsetsControllerCompat$Impl mImpl
kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
androidx.core.content.res.ResourcesCompat: java.lang.ThreadLocal sTempTypedValue
io.flutter.plugins.pathprovider.PathProviderPlugin: android.content.Context context
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANMF
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View$OnFocusChangeListener val$userFocusListener
androidx.exifinterface.media.ExifInterface: boolean mAreThumbnailStripsConsecutive
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] $VALUES
io.flutter.plugin.platform.VirtualDisplayController: int bufferHeight
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
androidx.window.layout.SidecarCompat: java.lang.String TAG
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.android.MotionEventTracker motionEventTracker
io.flutter.plugin.editing.ListenableEditingState: int mChangeNotificationDepth
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: kotlinx.coroutines.channels.Receive receive
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_GPS_TAGS
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object[] elements
androidx.exifinterface.media.ExifInterface: byte[] HEIF_TYPE_FTYP
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext collectContext
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.reflect.Constructor $constructor$inlined
org.tensorflow.lite.TensorFlowLite: java.lang.Throwable LOAD_LIBRARY_EXCEPTION
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_EXIF
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface renderSurface
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterUiDisplayed
io.flutter.plugin.editing.TextEditingDelta: int newComposingStart
io.flutter.embedding.engine.FlutterShellArgs: java.util.Set args
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0
androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent
kotlin.jvm.internal.ClassReference: java.util.Map simpleNames
io.flutter.embedding.engine.FlutterEngine: java.util.Set engineLifecycleListeners
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView flutterImageView
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
io.flutter.plugins.imagepicker.ImagePickerPlugin: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
io.flutter.embedding.engine.loader.FlutterApplicationInfo: boolean automaticallyRegisterPlugins
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET
kotlinx.coroutines.CompletedExceptionally: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _handled$FU
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List customAccessibilityActions
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.ChildHandleNode child
org.tensorflow.lite.InterpreterImpl$Options: java.lang.Boolean allowBufferHandleOutput
io.flutter.plugin.platform.PlatformViewWrapper$3: io.flutter.plugin.platform.PlatformViewWrapper this$0
sq.flutter.tflite.TflitePlugin$RunSegmentationOnBinary: java.lang.String outputType
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetLeft
io.flutter.view.AccessibilityBridge$3: io.flutter.view.AccessibilityBridge this$0
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap contextToEmbeddedView
sq.flutter.tflite.TflitePlugin$RunSegmentationOnFrame: java.nio.ByteBuffer input
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sServedViewField
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String schedulerName
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getChildId
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetRight
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler
io.flutter.embedding.android.KeyData: io.flutter.embedding.android.KeyData$Type type
io.flutter.embedding.android.KeyData: long physicalKey
kotlinx.coroutines.InvokeOnCancelling: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU
sq.flutter.tflite.TflitePlugin$RunPoseNet: int localMaximumRadius
kotlinx.coroutines.scheduling.TasksKt: long WORK_STEALING_TIME_RESOLUTION_NS
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: androidx.window.java.layout.WindowInfoTrackerCallbackAdapter adapter
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion: kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion INSTANCE
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: float devicePixelRatio
io.flutter.embedding.engine.dart.DartMessenger: java.util.WeakHashMap createdTaskQueues
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String aotSharedLibraryName
androidx.arch.core.internal.FastSafeIterableMap: java.util.HashMap mHashMap
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDelegate
androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterSecondary
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method addSuppressed
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String tooltip
sq.flutter.tflite.TflitePlugin$RunModelOnImage: sq.flutter.tflite.TflitePlugin this$0
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] $VALUES
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache notOnJava9
sq.flutter.tflite.TflitePlugin$RunPoseNet: int nmsRadius
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context context
androidx.core.view.WindowInsetsControllerCompat$Impl30: android.view.Window mWindow
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.view.inputmethod.InputMethodManager inputMethodManager
androidx.exifinterface.media.ExifInterface: int mOrfMakerNoteOffset
androidx.window.R$id: int androidx_window_activity_scope
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
io.flutter.embedding.android.MotionEventTracker: java.util.PriorityQueue unusedEvents
androidx.collection.MapCollections$ArrayIterator: int mIndex
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel channel
kotlinx.coroutines.CancelledContinuation: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _resumed$FU
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler mMainHandler
io.flutter.embedding.android.AndroidTouchProcessor: java.util.Map ongoingPans
androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
io.flutter.plugin.editing.SpellCheckPlugin: android.view.textservice.TextServicesManager mTextServicesManager
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.Continuation completion
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SELECTED
io.flutter.plugins.pathprovider.PathProviderPlugin$1: int[] $SwitchMap$io$flutter$plugins$pathprovider$Messages$StorageDirectory
androidx.exifinterface.media.ExifInterface$ExifAttribute: long bytesOffset
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: kotlinx.coroutines.internal.LockFreeLinkedListNode $node
io.flutter.plugin.platform.PlatformViewWrapper: android.graphics.SurfaceTexture tx
io.flutter.plugin.common.FlutterException: java.lang.Object details
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable val$self
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine flutterEngine
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION
androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface this$0
androidx.arch.core.internal.SafeIterableMap: java.util.WeakHashMap mIterators
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMin
io.flutter.embedding.engine.dart.DartExecutor: android.content.res.AssetManager assetManager
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: java.lang.String encodedName
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN
io.flutter.plugin.editing.SpellCheckPlugin: io.flutter.plugin.common.MethodChannel$Result pendingResult
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: float[] numDetections
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS
io.flutter.embedding.android.DrawableSplashScreen$1: io.flutter.embedding.android.DrawableSplashScreen this$0
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.lang.String viewType
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action INCREASE
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1: io.flutter.embedding.engine.systemchannels.SpellCheckChannel this$0
io.flutter.Log: int WARN
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long id
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_ENABLED
kotlinx.coroutines.scheduling.TasksKt: long IDLE_WORKER_KEEP_ALIVE_NS
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
androidx.window.R$attr: int splitRatio
sq.flutter.tflite.TflitePlugin$RunModelOnImage: float THRESHOLD
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType FLOAT32
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isWaitingForActivityReattachment
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sHField
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
kotlinx.coroutines.CompletedContinuation: java.lang.Throwable cancelCause
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper this$0
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
io.flutter.embedding.engine.dart.DartMessenger$Reply: java.util.concurrent.atomic.AtomicBoolean done
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST
androidx.window.R$styleable: int ActivityFilter_activityAction
kotlinx.coroutines.scheduling.Task: long submissionTime
io.flutter.view.VsyncWaiter$1: io.flutter.view.VsyncWaiter this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetTop
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec createArgsCodec
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String isolateServiceId
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
io.flutter.plugin.common.JSONMessageCodec: io.flutter.plugin.common.JSONMessageCodec INSTANCE
androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0
sq.flutter.tflite.TflitePlugin$RunPoseNet: int outputStride
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String logTag
io.flutter.view.AccessibilityBridge$SemanticsNode: float bottom
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: kotlinx.coroutines.channels.AbstractChannel this$0
kotlinx.coroutines.DispatchedTask: int resumeMode
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType[] $VALUES
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int mask
sq.flutter.tflite.TflitePlugin$RunPix2PixOnImage: float IMAGE_STD
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED
kotlinx.coroutines.channels.ConflatedChannel: java.util.concurrent.locks.ReentrantLock lock
kotlin.collections.EmptySet: kotlin.collections.EmptySet INSTANCE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onSaveInstanceStateListeners
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityPluginBinding
kotlinx.coroutines.channels.ArrayChannel: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.FileUtils fileUtils
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SpellCheckChannel spellCheckChannel
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
androidx.window.R$attr: int secondaryActivityAction
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry
androidx.core.graphics.drawable.IconCompat: byte[] mData
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object proposedUpdate
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
sq.flutter.tflite.TflitePlugin$RunModelOnBinary: java.nio.ByteBuffer imgData
sq.flutter.tflite.TflitePlugin$RunSegmentationOnImage: java.util.List labelColors
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.View mFlutterView
sq.flutter.tflite.TflitePlugin$RunYOLO: int numClasses
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.UndispatchedMarker: kotlinx.coroutines.UndispatchedMarker INSTANCE
androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache cache
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: java.lang.String encodedName
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.Job job
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.text.DelimitedRangesSequence this$0
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding broadcastReceiverPluginBinding
kotlinx.coroutines.ExecutorCoroutineDispatcher: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key Key
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind background
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever INSTANCE
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedOverlayLayerIds
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NONE
org.tensorflow.lite.DataType: int value
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: java.lang.Character complexCharacter
org.tensorflow.lite.NativeInterpreterWrapper: org.tensorflow.lite.TensorImpl[] inputTensors
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float xPrecision
androidx.window.core.Bounds: int top
org.tensorflow.lite.nnapi.NnApiDelegateImpl: long delegateHandle
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_HALF_OPENED
androidx.exifinterface.media.ExifInterface: int mThumbnailCompression
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int AVAILABLE_PROCESSORS
androidx.core.graphics.drawable.IconCompat: int mType
kotlin.text.DelimitedRangesSequence: int startIndex
kotlinx.coroutines.flow.internal.SafeCollector: kotlinx.coroutines.flow.FlowCollector collector
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action LONG_PRESS
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String hint
androidx.window.R$styleable: int[] ActivityRule
kotlinx.coroutines.internal.ThreadState: kotlin.coroutines.CoroutineContext context
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Key topmostKey
org.tensorflow.lite.gpu.GpuDelegate: long delegateHandle
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: long messageData
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedPlatformViewIds
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed failed
androidx.arch.core.executor.DefaultTaskExecutor$1: java.util.concurrent.atomic.AtomicInteger mThreadId
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol OFFER_FAILED
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS
androidx.exifinterface.media.ExifInterface: boolean DEBUG
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId$Key Key
androidx.window.core.Bounds: int left
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.embedding.engine.dart.DartMessenger messenger
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP
androidx.versionedparcelable.VersionedParcelParcel: int mNextRead
androidx.window.R$id: int ltr
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: java.lang.String encodedName
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PUBLIC
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager this$0
kotlin.ranges.IntProgressionIterator: int step
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
androidx.collection.SimpleArrayMap: int mSize
androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern DATETIME_PRIMARY_FORMAT_PATTERN
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: androidx.lifecycle.Lifecycle lifecycle
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.window.R$attr: int splitLayoutDirection
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameListener
kotlin.jvm.internal.CallableReference: java.lang.String name
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
androidx.window.embedding.SplitRule: int layoutDirection
kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements
kotlinx.coroutines.channels.AbstractChannel$Itr: kotlinx.coroutines.channels.AbstractChannel channel
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: float[][][] outputLocations
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater controlState$FU
kotlinx.coroutines.DebugKt: boolean ASSERTIONS_ENABLED
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mContentDescription
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
androidx.activity.ImmLeaksCleaner: int sReflectedFieldsInitialized
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel channel
androidx.window.embedding.ActivityStack: boolean isEmpty
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingEnd
androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern DATETIME_SECONDARY_FORMAT_PATTERN
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetRight
androidx.core.graphics.drawable.IconCompat: int mInt2
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode image
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List displayFeatures
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized
androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides LEFT
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PROTECTED
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize: int width
io.flutter.plugin.platform.PlatformPlugin$2: io.flutter.plugin.platform.PlatformPlugin this$0
io.flutter.embedding.android.FlutterSplashView: java.lang.String transitioningIsolateId
androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_HEIC
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel
io.flutter.plugin.editing.TextEditingDelta: int newSelectionStart
kotlinx.coroutines.UndispatchedCoroutine: java.lang.Object savedOldValue
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature REDUCE_MOTION
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.channels.AbstractChannel$Itr iterator
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode newNode
androidx.arch.core.executor.DefaultTaskExecutor: java.util.concurrent.ExecutorService mDiskIO
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
kotlinx.coroutines.CoroutineExceptionHandler$Key: kotlinx.coroutines.CoroutineExceptionHandler$Key $$INSTANCE
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate shimRegistrarAggregate
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
io.flutter.embedding.android.KeyChannelResponder: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap
io.flutter.view.AccessibilityBridge: android.database.ContentObserver animationScaleObserver
io.flutter.plugin.editing.InputConnectionAdaptor: int mClient
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor
kotlinx.coroutines.channels.ArrayChannel: int head
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode opaque
org.tensorflow.lite.InterpreterImpl$Options: java.lang.Boolean allowFp16PrecisionForFp32
io.flutter.plugin.localization.LocalizationPlugin$1: io.flutter.plugin.localization.LocalizationPlugin this$0
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] $VALUES
androidx.window.embedding.SplitInfo: float splitRatio
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevLeft
androidx.exifinterface.media.ExifInterface: java.util.HashSet sTagSetForCompatibility
androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: io.flutter.embedding.engine.systemchannels.PlatformChannel this$0
androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern GPS_TIMESTAMP_PATTERN
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sMainThreadExecutor
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: int color
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel channel
androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray viewWrappers
kotlinx.coroutines.scheduling.TasksKt: int MAX_POOL_SIZE
androidx.lifecycle.SingleGeneratedAdapterObserver: androidx.lifecycle.GeneratedAdapter mGeneratedAdapter
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList list
io.flutter.plugin.common.MethodCall: java.lang.String method
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder
io.flutter.view.AccessibilityBridge$StringAttribute: int end
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
sq.flutter.tflite.TflitePlugin: io.flutter.plugin.common.PluginRegistry$Registrar mRegistrar
io.flutter.plugin.common.BasicMessageChannel: java.lang.String name
org.tensorflow.lite.TensorFlowLite: java.util.concurrent.atomic.AtomicBoolean[] haveLogged
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: sq.flutter.tflite.TflitePlugin this$0
androidx.exifinterface.media.ExifInterface: java.util.List ROTATION_ORDER
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED
sq.flutter.tflite.TflitePlugin$RunYOLO: long startTime
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
io.flutter.plugin.common.StringCodec: java.nio.charset.Charset UTF8
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
io.flutter.embedding.android.FlutterView: boolean isFlutterUiDisplayed
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: java.util.Set shimRegistrars
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumerIndex$FU
sq.flutter.tflite.TflitePlugin$RunPix2PixOnFrame: float IMAGE_STD
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
kotlinx.coroutines.internal.ThreadState: int i
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: int label
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: android.view.View mView
androidx.core.app.RemoteActionCompat: boolean mEnabled
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionExtent
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.plugin.platform.PlatformPlugin platformPlugin
androidx.lifecycle.CompositeGeneratedAdaptersObserver: androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1
sq.flutter.tflite.TflitePlugin$RunSegmentationOnBinary: java.nio.ByteBuffer input
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DECREASE
kotlin.text.DelimitedRangesSequence$iterator$1: int nextSearchIndex
androidx.collection.ContainerHelpers: long[] EMPTY_LONGS
org.tensorflow.lite.TensorImpl: int[] shapeSignatureCopy
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI flutterJNI
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext left
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
sq.flutter.tflite.TflitePlugin: boolean $assertionsDisabled
org.tensorflow.lite.gpu.GpuDelegateNative: boolean isInit
io.flutter.embedding.android.FlutterSplashView$3: io.flutter.embedding.android.FlutterSplashView this$0
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.WorkQueue localQueue
androidx.window.layout.SidecarAdapter: java.lang.String TAG
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec codec
sq.flutter.tflite.TflitePlugin$RunSegmentationOnFrame: sq.flutter.tflite.TflitePlugin this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: float top
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method longArrayGetIndex
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection RTL
sq.flutter.tflite.TflitePlugin$RunYOLO: int numResultsPerClass
androidx.exifinterface.media.ExifInterface: java.lang.String mFilename
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry textureRegistry
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Integer previousVisibility
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: boolean isEventHandled
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE_STICKY
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String hint
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.ContentProvider contentProvider
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE
androidx.core.content.res.ResourcesCompat: java.lang.Object sColorStateCacheLock
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int edgeFlags
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isDecimal
io.flutter.embedding.android.FlutterSurfaceView: boolean isAttachedToFlutterRenderer
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedInputFocusedNodeId
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType HINGE
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 INSTANCE
org.tensorflow.lite.InterpreterApi$Options: int numThreads
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map serviceAwarePlugins
io.flutter.view.AccessibilityBridge$AccessibilityFeature: int value
androidx.window.core.Version: androidx.window.core.Version CURRENT
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onRequestPermissionsResultListeners
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
androidx.window.embedding.SplitRule: float splitRatio
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map broadcastReceiverAwarePlugins
sq.flutter.tflite.TflitePlugin: java.util.Map partsIds
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature HIGH_CONTRAST
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.atomic.AtomicBoolean isRunning
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.SchedulerTimeSource schedulerTimeSource
kotlinx.coroutines.channels.Channel$Factory: int CHANNEL_DEFAULT_CAPACITY
io.flutter.embedding.android.KeyboardMap$PressingGoal: io.flutter.embedding.android.KeyboardMap$KeyPair[] keys
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2
org.tensorflow.lite.InterpreterApi$Options: java.util.List delegates
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
sq.flutter.tflite.TflitePlugin: java.util.Vector labels
io.flutter.embedding.android.KeyboardMap$TogglingGoal: long logicalKey
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
io.flutter.embedding.android.KeyData: java.lang.String character
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
io.flutter.embedding.android.KeyboardMap$PressingGoal: int mask
io.flutter.embedding.android.KeyboardManager: io.flutter.embedding.android.KeyboardManager$Responder[] responders
sq.flutter.tflite.TflitePlugin$RunSegmentationOnFrame: java.nio.ByteBuffer output
sq.flutter.tflite.TflitePlugin$RunYOLO: java.util.List anchors
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.plugin.common.BasicMessageChannel channel
androidx.exifinterface.media.ExifInterface: int mOrfThumbnailLength
androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
androidx.window.core.Version: int patch
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect rect
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMessageCodec messageCodec
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$TextDirection textDirection
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
io.flutter.view.AccessibilityBridge$SemanticsNode: int flags
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap$Entry mCurrent
androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getSourceNodeId
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides RIGHT
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 emitFun
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String label
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: java.lang.String locale
androidx.tracing.Trace: long sTraceTagApp
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int viewId
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode surface
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService executorService
io.flutter.plugin.platform.VirtualDisplayController$1$1: io.flutter.plugin.platform.VirtualDisplayController$1 this$1
androidx.window.R$attr: int activityAction
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque
kotlin.ranges.IntProgressionIterator: int next
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState state
org.tensorflow.lite.nnapi.NnApiDelegate: org.tensorflow.lite.nnapi.NnApiDelegate$Options options
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList list
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext lastEmissionContext
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
io.flutter.embedding.android.FlutterImageView: boolean isAttachedToFlutterRenderer
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher$Key$1 INSTANCE
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IMAGE
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method getSuppressed
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.reflect.Constructor $constructor$inlined
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
androidx.window.R$id: int rtl
io.flutter.view.AccessibilityBridge: int accessibilityFeatureFlags
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory downloads
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: android.os.Handler handler
io.flutter.Log: int DEBUG
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect childRect
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText mExtractedText
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
io.flutter.view.AccessibilityBridge$StringAttribute: io.flutter.view.AccessibilityBridge$StringAttributeType type
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides BOTH
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object L$0
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$FrameCallback frameCallback
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
androidx.exifinterface.media.ExifInterface: java.util.Set mAttributesOffsets
kotlinx.coroutines.YieldContext: kotlinx.coroutines.YieldContext$Key Key
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceArray array
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
org.tensorflow.lite.InterpreterApi$Options: java.lang.Boolean allowCancellation
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence deltaText
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: java.lang.String val$errorMessage
io.flutter.plugin.editing.TextInputPlugin: boolean mRestartInputPending
org.tensorflow.lite.TensorImpl: org.tensorflow.lite.DataType dtype
io.flutter.embedding.android.DrawableSplashScreen: io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView splashView
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry textureRegistry
androidx.lifecycle.LifecycleRegistry: boolean mEnforceMainThread
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: java.lang.Object[] inputArray
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.ContinuationInterceptor$Key Key
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointLibrary
kotlinx.coroutines.channels.ArrayChannel: int capacity
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMax
sq.flutter.tflite.TflitePlugin$RunPix2PixOnBinary: sq.flutter.tflite.TflitePlugin this$0
org.tensorflow.lite.Tensor$QuantizationParams: int zeroPoint
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalWidth
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int source
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
kotlinx.coroutines.InvokeOnCancelling: int _invoked
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
io.flutter.plugin.editing.TextInputPlugin: android.graphics.Rect lastClientRect
org.tensorflow.lite.TensorImpl: int[] shapeCopy
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
io.flutter.plugin.platform.PlatformViewWrapper: int prevTop
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LiveData this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$3: io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper this$0
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List increasedValueAttributes
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: kotlinx.coroutines.internal.ThreadContextKt$countAll$1 INSTANCE
sq.flutter.tflite.TflitePlugin$RunPix2PixOnImage: java.lang.String outputType
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory dcim
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: int index
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix matrix
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
kotlin.ranges.IntRange: kotlin.ranges.IntRange$Companion Companion
io.flutter.plugins.imagepicker.ImagePickerDelegate$2$1: io.flutter.plugins.imagepicker.ImagePickerDelegate$2 this$1
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator $this_asSequence$inlined
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType INT64
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUT
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.jvm.functions.Function1 $this_bindCancellationFun
sq.flutter.tflite.TflitePlugin$TfliteTask: sq.flutter.tflite.TflitePlugin this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: int platformViewId
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType INT8
androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int deviceId
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility INTERNAL
kotlinx.coroutines.DebugKt: boolean DEBUG
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler
io.flutter.view.VsyncWaiter$FrameCallback: io.flutter.view.VsyncWaiter this$0
io.flutter.view.AccessibilityBridge: java.util.Map flutterSemanticsTree
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding servicePluginBinding
androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
io.flutter.plugin.platform.PlatformPlugin$2: android.view.View val$decorView
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES
io.flutter.plugins.imagepicker.ImagePickerDelegate$4: io.flutter.plugins.imagepicker.ImagePickerDelegate this$0
io.flutter.plugin.platform.SingleViewPresentation: int viewId
androidx.core.content.ContextCompat: java.lang.Object sSync
kotlinx.coroutines.CommonPool: kotlinx.coroutines.CommonPool INSTANCE
sq.flutter.tflite.TflitePlugin$RunPix2PixOnBinary: java.nio.ByteBuffer output
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemStatusBarContrastEnforced
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext
io.flutter.view.AccessibilityBridge: int FOCUSABLE_FLAGS
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: java.lang.Object val$errorDetails
androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0
androidx.exifinterface.media.ExifInterface$ExifAttribute: int format
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
androidx.collection.SimpleArrayMap: java.lang.Object[] mTwiceBaseCache
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME
sq.flutter.tflite.TflitePlugin$RunYOLO: int numBoxesPerBlock
androidx.exifinterface.media.ExifInterface: byte[] PNG_SIGNATURE
io.flutter.plugin.editing.TextInputPlugin$InputTarget: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type
io.flutter.embedding.engine.renderer.FlutterRenderer: android.view.Surface surface
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT
androidx.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped
androidx.window.core.Version: java.lang.String description
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method nameMethod
io.flutter.FlutterInjector: boolean accessed
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object $receiver$inlined
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: byte[] val$data
org.tensorflow.lite.InterpreterImpl$Options: java.lang.Boolean useXNNPACK
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl registry
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate keyboardDelegate
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager afm
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViews
io.flutter.plugin.editing.TextInputPlugin$1: io.flutter.plugin.editing.TextInputPlugin this$0
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection lastInputConnection
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.lang.String fileProviderName
androidx.collection.SimpleArrayMap: java.lang.Object[] mBaseCache
kotlinx.coroutines.internal.ArrayQueue: int tail
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.Object element
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object countOrElement
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray overlayLayerViews
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
io.flutter.embedding.android.FlutterView$2: io.flutter.embedding.android.FlutterView this$0
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isTerminated$FU
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String mPrefix
io.flutter.plugin.editing.ListenableEditingState: int mBatchEditNestDepth
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory alarms
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: java.lang.String val$errorCode
androidx.exifinterface.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: boolean isSerial
androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_EXIF
androidx.window.R$attr: int finishSecondaryWithPrimary
kotlinx.coroutines.JobSupport: java.lang.Object _state
io.flutter.embedding.android.FlutterTextureView: android.view.Surface renderSurface
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.internal.MainDispatcherLoader INSTANCE
androidx.window.R$attr: int secondaryActivityName
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
kotlin.ranges.IntProgression: kotlin.ranges.IntProgression$Companion Companion
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int maxPoolSize
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] EMPTY
androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections
io.flutter.embedding.android.DrawableSplashScreen: android.widget.ImageView$ScaleType scaleType
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollPosition
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
kotlinx.coroutines.InvokeOnCancelling: kotlin.jvm.functions.Function1 handler
sq.flutter.tflite.TflitePlugin$RunSegmentationOnBinary: sq.flutter.tflite.TflitePlugin this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.view.TextureRegistry$OnFrameConsumedListener frameConsumedListener
androidx.collection.MapCollections$ArrayIterator: int mSize
kotlin.text.DelimitedRangesSequence$iterator$1: int currentStartIndex
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
org.tensorflow.lite.RuntimeFlavor: org.tensorflow.lite.RuntimeFlavor APPLICATION
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousNodeId
io.flutter.embedding.android.KeyboardMap$KeyPair: long logicalKey
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: java.lang.String encodedName
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String flutterAssetsDir
androidx.collection.ArrayMap$1: androidx.collection.ArrayMap this$0
androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.CameraDevice cameraDevice
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element element
sq.flutter.tflite.TflitePlugin$RunPoseNet: java.lang.Object[] input
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory ringtones
kotlinx.coroutines.scheduling.NanoTimeSource: kotlinx.coroutines.scheduling.NanoTimeSource INSTANCE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number eventTime
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
io.flutter.embedding.android.FlutterSplashView: java.lang.String previousCompletedSplashIsolate
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL
io.flutter.plugin.platform.PlatformViewsController: android.content.Context context
androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred
androidx.collection.MapCollections$EntrySet: androidx.collection.MapCollections this$0
androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IHDR
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater blockingTasksInBuffer$FU
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ON_OFF_SWITCH_LABELS
kotlinx.coroutines.channels.AbstractSendChannel: kotlin.jvm.functions.Function1 onUndeliveredElement
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol EMPTY
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont
androidx.core.os.ExecutorCompat$HandlerExecutor: android.os.Handler mHandler
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
kotlinx.coroutines.CoroutineExceptionHandler: kotlinx.coroutines.CoroutineExceptionHandler$Key Key
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding contentProviderPluginBinding
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean obscureText
io.flutter.plugin.platform.PlatformViewWrapper: int top
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int id
io.flutter.embedding.android.FlutterView: androidx.core.util.Consumer windowInfoListener
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onActivityResultListeners
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMethodCodec INSTANCE
io.flutter.embedding.android.KeyEmbedderResponder: io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.reflect.Constructor $constructor$inlined
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode
io.flutter.FlutterInjector$Builder$NamedThreadFactory: io.flutter.FlutterInjector$Builder this$0
org.tensorflow.lite.Interpreter: org.tensorflow.lite.NativeInterpreterWrapperExperimental wrapperExperimental
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$matrix
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int capacity
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte[] mSkipBuffer
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType[] values
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver
io.flutter.embedding.android.FlutterView: java.util.Set flutterUiDisplayListeners
io.flutter.plugin.platform.VirtualDisplayController: java.lang.String TAG
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.ThreadLocalEventLoop INSTANCE
io.flutter.plugins.imagepicker.ImagePickerCache: android.content.SharedPreferences prefs
org.tensorflow.lite.TensorImpl: long nativeHandle
io.flutter.embedding.android.KeyEmbedderResponder: java.util.HashMap togglingGoals
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugin.common.MethodCall methodCall
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int throwableFields
sq.flutter.tflite.TflitePlugin$RunYOLO: float threshold
kotlin.random.FallbackThreadLocalRandom: kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage
androidx.exifinterface.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.jvm.internal.CompletedContinuation INSTANCE
androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableIMEPersonalizedLearning
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterTextureView flutterTextureView
io.flutter.plugin.editing.ListenableEditingState: int mSelectionStartWhenBeginBatchEdit
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] a
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver observer
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.SingleViewPresentation presentation
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousActions
kotlinx.coroutines.scheduling.TasksKt: int BLOCKING_DEFAULT_PARALLELISM
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mReadCache
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECK_STATE_MIXED
kotlinx.coroutines.flow.AbstractFlow$collect$1: kotlinx.coroutines.flow.AbstractFlow this$0
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set requestPermissionsResultListeners
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher$Key Key
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: float[] radiis
io.flutter.view.AccessibilityBridge$StringAttribute: int start
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
androidx.core.content.FileProvider$SimplePathStrategy: java.lang.String mAuthority
sq.flutter.tflite.TflitePlugin$TfliteTask: boolean asynch
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.CharSequence $this_splitToSequence
kotlinx.coroutines.CoroutineId: long id
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableDeltaModel
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: io.flutter.embedding.engine.systemchannels.NavigationChannel this$0
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: java.lang.String name
sq.flutter.tflite.TflitePlugin$RunModelOnImage: long startTime
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mWriteCache
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
androidx.collection.ContainerHelpers: int[] EMPTY_INTS
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean frameworkHasRequestedData
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
kotlinx.coroutines.IncompleteStateBox: kotlinx.coroutines.Incomplete state
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger binaryMessenger
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor executor
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8X
androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollIndex
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean singleConsumer
io.flutter.view.AccessibilityBridge: java.util.Map customAccessibilityActions
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE
androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.concurrent.atomic.AtomicLong nextTextureId
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType INT32
androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatterPrimary
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CoroutineDispatcher dispatcher
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler handler
androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT
io.flutter.plugins.pathprovider.Messages$StorageDirectory: int index
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: java.util.Map message
io.flutter.embedding.android.MotionEventTracker: android.util.LongSparseArray eventById
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalLeft
io.flutter.plugin.platform.VirtualDisplayController$1: android.view.View val$embeddedView
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarColor
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HEADER
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY
io.flutter.plugin.editing.FlutterTextUtils: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer statusBarColor
kotlin.text.DelimitedRangesSequence$iterator$1: int nextState
androidx.collection.SimpleArrayMap: int[] mHashes
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DefaultExecutor INSTANCE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalHeight
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveWrapperFqNames
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: int num
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener
sq.flutter.tflite.TflitePlugin$RunPoseNet: double threshold
kotlin.jvm.internal.PackageReference: java.lang.Class jClass
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.ImagePickerDelegate$PermissionManager permissionManager
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED
kotlinx.coroutines.channels.AbstractSendChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater onCloseHandler$FU
androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
androidx.core.graphics.drawable.IconCompat: java.lang.String mString1
sq.flutter.tflite.TflitePlugin$RunSegmentationOnBinary: java.util.List labelColors
androidx.core.app.ActivityCompat$1: java.lang.String[] val$permissions
sq.flutter.tflite.TflitePlugin: org.tensorflow.lite.Interpreter tfLite
androidx.exifinterface.media.ExifInterface: boolean mXmpIsFromSeparateMarker
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: float[][] outputClasses
io.flutter.FlutterInjector$Builder$NamedThreadFactory: int threadId
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory music
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
io.flutter.embedding.android.FlutterSplashView: android.os.Bundle splashScreenState
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.content.Context flutterAppWindowContext
androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ListenableEditingState mEditable
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.LifecycleRegistry lifecycle
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: boolean isCalled
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType CUTOUT
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.util.concurrent.atomic.AtomicIntegerFieldUpdater workerCtl$FU
kotlinx.coroutines.InvokeOnCancel: kotlin.jvm.functions.Function1 handler
androidx.exifinterface.media.ExifInterface: int mThumbnailLength
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD
kotlinx.coroutines.scheduling.CoroutineScheduler: long idleWorkerKeepAliveNs
androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.nio.ByteBuffer params
io.flutter.embedding.android.KeyboardMap: java.util.HashMap keyCodeToLogical
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType UNKNOWN
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputAction
org.tensorflow.lite.nnapi.NnApiDelegate$Options: java.lang.Boolean allowFp16
io.flutter.plugin.common.StandardMessageCodec: boolean LITTLE_ENDIAN
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.ViewTreeObserver$OnPreDrawListener activePreDrawListener
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int top
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler
sq.flutter.tflite.TflitePlugin: java.lang.String[][] poseChain
androidx.collection.MapCollections: androidx.collection.MapCollections$KeySet mKeySet
sq.flutter.tflite.TflitePlugin$RunSegmentationOnImage: sq.flutter.tflite.TflitePlugin this$0
androidx.core.content.FileProvider: int mResourceId
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float yPrecision
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream
androidx.collection.MapCollections: androidx.collection.MapCollections$ValuesCollection mValues
org.tensorflow.lite.gpu.GpuDelegateNative: java.lang.Throwable LOAD_LIBRARY_EXCEPTION
androidx.core.content.res.ResourcesCompat: java.util.WeakHashMap sColorStateCaches
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.CoroutineDispatcher IO
sq.flutter.tflite.TflitePlugin$2: sq.flutter.tflite.TflitePlugin this$0
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue taskQueue
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
sq.flutter.tflite.TflitePlugin$RunSegmentationOnBinary: java.nio.ByteBuffer output
kotlin.ranges.IntProgression: int first
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime: org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime[] $VALUES
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode transparent
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
kotlinx.coroutines.CancelledContinuation: int _resumed
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType type
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousValue
kotlinx.coroutines.Empty: boolean isActive
io.flutter.plugin.platform.PlatformViewWrapper$2: io.flutter.plugin.platform.PlatformViewWrapper this$0
androidx.exifinterface.media.ExifInterface: boolean mHasThumbnailStrips
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: float screenDensity
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.KeyboardManager keyboardManager
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mHandlerToEvent
io.flutter.plugin.platform.PlatformViewWrapper$3: android.view.View$OnFocusChangeListener val$userFocusListener
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _queue$FU
io.flutter.embedding.android.FlutterImageView$1: int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
kotlinx.coroutines.scheduling.NonBlockingContext: kotlinx.coroutines.scheduling.NonBlockingContext INSTANCE
androidx.collection.ContainerHelpers: java.lang.Object[] EMPTY_OBJECTS
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingStart
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mListeners
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.InputMethodManager mImm
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
sq.flutter.tflite.TflitePlugin$RunPix2PixOnImage: java.nio.ByteBuffer input
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES
io.flutter.view.AccessibilityBridge: android.content.ContentResolver contentResolver
kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String appStoragePath
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 INSTANCE
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String hintText
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: java.lang.String text
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List decreasedValueAttributes
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport job
io.flutter.plugins.imagepicker.ImagePickerDelegate: android.net.Uri pendingCameraMediaUri
io.flutter.plugins.pathprovider.Messages$PathProviderApiCodec: io.flutter.plugins.pathprovider.Messages$PathProviderApiCodec INSTANCE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sIOThreadExecutor
io.flutter.embedding.android.FlutterSurfaceView: boolean isSurfaceAvailableForRendering
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol CLOSED_EMPTY
sq.flutter.tflite.TflitePlugin$RunYOLO: float[][][][] output
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.util.WeakHashMap exceptionCtors
androidx.core.content.FileProvider: java.lang.String[] COLUMNS
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
io.flutter.plugin.platform.PlatformViewRegistryImpl: java.util.Map viewFactories
kotlinx.coroutines.YieldContext: boolean dispatcherWasUnconfined
kotlinx.coroutines.internal.Symbol: java.lang.String symbol
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_KEYBOARD_KEY
kotlin.ranges.IntProgressionIterator: boolean hasNext
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection LTR
androidx.exifinterface.media.ExifInterface: byte[] JPEG_SIGNATURE
org.tensorflow.lite.DataType$1: int[] $SwitchMap$org$tensorflow$lite$DataType
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper windowInfoRepo
sq.flutter.tflite.TflitePlugin$RunPoseNet: long startTime
androidx.core.content.FileProvider: java.io.File DEVICE_ROOT
kotlinx.coroutines.internal.AtomicKt: java.lang.Object RETRY_ATOMIC
io.flutter.view.VsyncWaiter$DisplayListener: android.hardware.display.DisplayManager displayManager
androidx.arch.core.executor.DefaultTaskExecutor: java.lang.Object mLock
io.flutter.embedding.android.KeyboardMap$TogglingGoal: boolean enabled
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory movies
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetTop
androidx.window.R$styleable: int SplitPairRule_clearTop
androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference mLifecycleOwner
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SLIDER
kotlinx.coroutines.internal.DispatchedContinuation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _reusableCancellableContinuation$FU
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8L
kotlinx.coroutines.CoroutineExceptionHandlerImplKt: java.util.List handlers
sq.flutter.tflite.TflitePlugin$RunSegmentationOnBinary: long startTime
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $VALUES
androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter instance
io.flutter.embedding.engine.dart.DartExecutor: boolean isApplicationRunning
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean waitForRestorationData
kotlin.jvm.internal.CallableReference: java.lang.String signature
io.flutter.embedding.engine.dart.DartMessenger: int nextReplyId
sq.flutter.tflite.TflitePlugin$RunModelOnFrame: long startTime
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1 INSTANCE
sq.flutter.tflite.TflitePlugin$RunSegmentationOnFrame: java.lang.String outputType
androidx.exifinterface.media.ExifInterface: int mOrfThumbnailOffset
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
io.flutter.embedding.android.FlutterView: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.flutter.embedding.android.AndroidTouchProcessor: android.graphics.Matrix IDENTITY_TRANSFORM
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$1: java.lang.Object val$result
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$2: io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry this$1
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice FRONT
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply
io.flutter.plugin.common.MethodChannel: java.lang.String name
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_MULTILINE
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $VALUES
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
androidx.collection.MapCollections$KeySet: androidx.collection.MapCollections this$0
androidx.exifinterface.media.ExifInterface: int mThumbnailOffset
io.flutter.embedding.android.MotionEventTracker$MotionEventId: java.util.concurrent.atomic.AtomicLong ID_COUNTER
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION
androidx.window.R$attr: int activityName
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity activity
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.internal.Symbol NOT_IN_STACK
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: float[][] outputScores
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper
io.flutter.embedding.android.KeyboardMap$TogglingGoal: int mask
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE
io.flutter.embedding.engine.FlutterOverlaySurface: int id
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevTop
io.flutter.plugin.platform.PlatformViewsController: boolean synchronizeToNativeViewHierarchy
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.Throwable cause
org.tensorflow.lite.nnapi.NnApiDelegate$Options: java.lang.String cacheDir
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String errorHint
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback
kotlin.collections.EmptyIterator: kotlin.collections.EmptyIterator INSTANCE
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED
io.flutter.Log: int logLevel
kotlin.SynchronizedLazyImpl: java.lang.Object _value
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_SELECTION
io.flutter.embedding.android.FlutterSurfaceView$1: io.flutter.embedding.android.FlutterSurfaceView this$0
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map bufferedMessages
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Layout mLayout
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] $VALUES
sq.flutter.tflite.TflitePlugin$RunPix2PixOnFrame: float IMAGE_MEAN
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol DISPOSED_TASK
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String name
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger messenger
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol OFFER_SUCCESS
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.FlutterJNI flutterJNI
sq.flutter.tflite.TflitePlugin$TfliteTask: io.flutter.plugin.common.MethodChannel$Result result
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type VIRTUAL_DISPLAY_PLATFORM_VIEW
io.flutter.embedding.android.KeyData: long logicalKey
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mNext
androidx.lifecycle.Lifecycle: java.util.concurrent.atomic.AtomicReference mInternalScopeRef
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long minDelayUntilStealableTaskNs
io.flutter.plugin.platform.VirtualDisplayController$1: java.lang.Runnable val$onNewSizeFrameAvailable
io.flutter.plugin.editing.InputConnectionAdaptor: int batchEditNestDepth
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean autocorrect
kotlin.jvm.internal.ClassReference: kotlin.jvm.internal.ClassReference$Companion Companion
io.flutter.plugins.imagepicker.ImagePickerDelegate$2: android.app.Activity val$activity
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean engineHasProvidedData
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
io.flutter.plugin.mouse.MouseCursorPlugin$1: io.flutter.plugin.mouse.MouseCursorPlugin this$0
kotlinx.coroutines.channels.ArrayChannel: int size
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
io.flutter.plugin.platform.PlatformPlugin: io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: android.view.View view
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: io.flutter.plugin.common.MethodChannel channel
sq.flutter.tflite.TflitePlugin$RunSegmentationOnImage: java.lang.String outputType
androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 getNextMatch
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState
androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_MIF1
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 transformer
io.flutter.plugin.platform.PlatformViewWrapper: io.flutter.view.TextureRegistry$OnFrameConsumedListener frameConsumedListener
io.flutter.view.VsyncWaiter$FrameCallback: long cookie
io.flutter.FlutterInjector$Builder: java.util.concurrent.ExecutorService executorService
kotlin.sequences.ConstrainedOnceSequence: java.util.concurrent.atomic.AtomicReference sequenceRef
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.EditorInfo mEditorInfo
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence oldText
io.flutter.Log: int VERBOSE
io.flutter.embedding.engine.dart.DartMessenger$Reply: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode LEAN_BACK
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
androidx.window.embedding.SplitPairRule: java.util.Set filters
androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable
kotlin.Pair: java.lang.Object second
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedAccessibilityFocusedNodeId
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder this$1
kotlin.jvm.internal.Lambda: int arity
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object[] buffer
androidx.exifinterface.media.ExifInterface: int mMimeType
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
io.flutter.embedding.android.KeyEmbedderResponder: io.flutter.plugin.common.BinaryMessenger messenger
androidx.window.embedding.SplitRule: int minWidth
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
io.flutter.plugin.platform.PlatformViewsController: boolean usesSoftwareRendering
io.flutter.plugin.platform.PlatformViewWrapper: int prevLeft
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge accessibilityBridge
androidx.core.app.ActivityCompat$1: int val$requestCode
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher IO
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN
sq.flutter.tflite.TflitePlugin$RunPix2PixOnBinary: long startTime
androidx.core.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots
kotlin.jvm.internal.CallableReference: java.lang.Class owner
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: int encodedValue
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$DisplayListener listener
io.flutter.view.AccessibilityBridge: io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache instance
kotlinx.coroutines.flow.AbstractFlow$collect$1: int label
org.tensorflow.lite.InterpreterApi$Options: java.util.List delegateFactories
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol POLL_FAILED
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String $indent
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalTop
kotlin.random.Random: kotlin.random.Random defaultRandom
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
io.flutter.plugins.imagepicker.ImagePickerPlugin: io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState activityState
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: java.lang.Runnable onFrameConsumed
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream
androidx.window.core.Bounds: int bottom
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetBottom
kotlinx.coroutines.internal.AtomicOp: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_TEXT
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory pictures
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String[] hints
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean globalGeometryDirty
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
sq.flutter.tflite.TflitePlugin$RunModelOnFrame: float THRESHOLD
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
io.flutter.embedding.android.FlutterSurfaceView: boolean renderTransparently
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: long idleWorkerKeepAliveNs
androidx.lifecycle.ClassesInfoCache$MethodReference: java.lang.reflect.Method mMethod
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousFlags
org.tensorflow.lite.DataTypeUtils$1: int[] $SwitchMap$org$tensorflow$lite$DataType
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater lastScheduledTask$FU
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveFqNames
io.flutter.plugin.platform.AccessibilityEventsDelegate: io.flutter.view.AccessibilityBridge accessibilityBridge
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol UNDEFINED
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: long startTime
sq.flutter.tflite.TflitePlugin$RunSegmentationOnImage: long startTime
kotlin.ranges.IntProgressionIterator: int finalElement
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
kotlinx.coroutines.ChildContinuation: kotlinx.coroutines.CancellableContinuationImpl child
io.flutter.plugin.platform.PlatformViewWrapper: int bufferWidth
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String actionLabel
org.tensorflow.lite.RuntimeFlavor: org.tensorflow.lite.RuntimeFlavor[] $VALUES
androidx.lifecycle.ClassesInfoCache: java.util.Map mCallbackMap
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager windowManager
io.flutter.embedding.android.FlutterSurfaceView: boolean isPaused
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInTraversalOrder
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
io.flutter.embedding.android.FlutterSurfaceView: android.view.SurfaceHolder$Callback surfaceCallback
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map pendingReplies
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sNextServedViewField
io.flutter.plugin.mouse.MouseCursorPlugin$2: io.flutter.plugin.mouse.MouseCursorPlugin this$0
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable
sq.flutter.tflite.TflitePlugin: boolean tfLiteBusy
androidx.window.embedding.ActivityStack: java.util.List activities
io.flutter.embedding.android.FlutterView: android.view.textservice.TextServicesManager textServicesManager
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long terminationDeadline
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_LATEST
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState UNKNOWN
io.flutter.embedding.android.FlutterTextureView: boolean isSurfaceAvailableForRendering
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int buttonState
io.flutter.plugin.platform.PlatformViewWrapper: android.view.Surface surface
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater parkedWorkersStack$FU
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.window.embedding.SplitRule: int minSmallestWidth
kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values
sq.flutter.tflite.TflitePlugin$RunPix2PixOnImage: sq.flutter.tflite.TflitePlugin this$0
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_NEW
androidx.window.embedding.SplitController: boolean sDebug
androidx.arch.core.internal.SafeIterableMap: int mSize
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN
kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String vmSnapshotData
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect globalRect
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] transform
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1 INSTANCE
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
androidx.core.content.ContextCompat: java.lang.Object sLock
io.flutter.plugin.editing.TextInputPlugin: boolean isInputConnectionLocked
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler spellCheckMethodHandler
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context applicationContext
io.flutter.plugin.platform.VirtualDisplayController: android.content.Context context
androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1
androidx.collection.MapCollections$ValuesCollection: androidx.collection.MapCollections this$0
sq.flutter.tflite.TflitePlugin$RunPix2PixOnFrame: java.nio.ByteBuffer output
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] $VALUES
io.flutter.embedding.engine.dart.DartMessenger$Reply: int replyId
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
kotlinx.coroutines.scheduling.LimitingDispatcher: int taskMode
androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList
androidx.core.view.WindowInsetsControllerCompat$Impl30: androidx.core.view.WindowInsetsControllerCompat mCompatController
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener isolateServiceIdListener
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
sq.flutter.tflite.TflitePlugin: java.util.List childToParentEdges
androidx.versionedparcelable.VersionedParcelParcel: android.util.SparseIntArray mPositionLookup
io.flutter.plugin.platform.VirtualDisplayController: android.view.Surface surface
androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern NON_ZERO_TIME_PATTERN
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.Set onTrimMemoryListeners
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext context
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String schedulerName
kotlinx.coroutines.scheduling.TaskImpl: java.lang.Runnable block
io.flutter.embedding.engine.FlutterEngineCache: java.util.Map cachedEngines
sq.flutter.tflite.TflitePlugin: java.util.List parentToChildEdges
androidx.exifinterface.media.ExifInterface: boolean mIsExifDataOnly
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec codec
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.lang.String pluginId
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.ImagePickerCache cache
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: boolean $ignoreCase
kotlinx.coroutines.scheduling.LimitingDispatcher: int parallelism
sq.flutter.tflite.TflitePlugin$RunSegmentationOnImage: java.nio.ByteBuffer input
io.flutter.embedding.android.FlutterTextureView$1: io.flutter.embedding.android.FlutterTextureView this$0
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedTextRequest mExtractRequest
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
io.flutter.plugin.editing.TextInputPlugin$2: boolean val$isAffine
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingLeft
androidx.lifecycle.ClassesInfoCache: java.util.Map mHasLifecycleMethods
androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_XMP_APP1
androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _state
sq.flutter.tflite.TflitePlugin$RunModelOnFrame: sq.flutter.tflite.TflitePlugin this$0
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol HANDLER_INVOKED
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
io.flutter.embedding.android.FlutterView: io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin
androidx.core.view.WindowInsetsControllerCompat$Impl30: androidx.collection.SimpleArrayMap mListeners
io.flutter.embedding.android.FlutterView$5: java.lang.Runnable val$onDone
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
kotlinx.coroutines.LazyStandaloneCoroutine: kotlin.coroutines.Continuation continuation
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableSuggestions
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack mutatorsStack
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean ANDROID_DETECTED
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type
io.flutter.plugin.common.FlutterException: java.lang.String code
org.tensorflow.lite.NativeInterpreterWrapper: java.util.List delegates
androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: java.lang.String encodedName
androidx.lifecycle.Lifecycling$1: androidx.lifecycle.LifecycleEventObserver val$observer
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: int unrepliedCount
io.flutter.plugin.editing.SpellCheckPlugin: io.flutter.embedding.engine.systemchannels.SpellCheckChannel mSpellCheckChannel
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: int numResultsPerClass
io.flutter.plugins.imagepicker.ImageResizer: java.io.File externalFilesDirectory
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory documents
io.flutter.embedding.android.FlutterTextureView: boolean isPaused
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
androidx.window.R$attr: int splitMinWidth
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
kotlin.Pair: java.lang.Object first
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceArray buffer
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener activeFocusListener
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport$Finishing state
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport parent
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean inverseTransformDirty
sq.flutter.tflite.TflitePlugin$RunModelOnImage: java.nio.ByteBuffer input
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean released
sq.flutter.tflite.TflitePlugin$1: sq.flutter.tflite.TflitePlugin this$0
io.flutter.embedding.android.KeyboardMap: java.util.HashMap scanCodeToPhysical
org.tensorflow.lite.TensorFlowLite: boolean isInit
androidx.lifecycle.ClassesInfoCache$MethodReference: int mCallType
androidx.window.core.Version: int minor
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
io.flutter.embedding.android.DrawableSplashScreen: long crossfadeDurationInMillis
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int resourceId
androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceBeginMethod
io.flutter.plugin.common.MethodCall: java.lang.Object arguments
io.flutter.embedding.engine.loader.FlutterLoader$1: android.content.Context val$appContext
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY
androidx.window.R$attr: int finishPrimaryWithSecondary
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext coroutineContext
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_FLAT
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $VALUES
kotlinx.coroutines.DispatchedCoroutine: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
sq.flutter.tflite.TflitePlugin$RunPix2PixOnFrame: sq.flutter.tflite.TflitePlugin this$0
kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence input
kotlin.text.DelimitedRangesSequence: int limit
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingTop
kotlinx.coroutines.DebugKt: boolean RECOVER_STACK_TRACES
sq.flutter.tflite.TflitePlugin$RunPix2PixOnFrame: long startTime
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: int label
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int pointerCount
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow
kotlin.jvm.internal.ClassReference: java.lang.Class jClass
io.flutter.plugin.platform.PlatformViewWrapper$1: io.flutter.plugin.platform.PlatformViewWrapper this$0
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiMode
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
kotlinx.coroutines.channels.Channel$Factory: kotlinx.coroutines.channels.Channel$Factory $$INSTANCE
kotlinx.coroutines.InvokeOnCompletion: kotlin.jvm.functions.Function1 handler
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action PASTE
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: io.flutter.embedding.engine.systemchannels.TextInputChannel this$0
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_UP
io.flutter.view.AccessibilityBridge$SemanticsNode: float right
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED
io.flutter.embedding.android.KeyboardManager$CharacterCombiner: int combiningCharacter
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol SEALED
io.flutter.Log: int ERROR
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadContextKt$updateState$1 INSTANCE
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String label
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
kotlin.internal.PlatformImplementationsKt: kotlin.internal.PlatformImplementations IMPLEMENTATIONS
androidx.collection.MapCollections$ArrayIterator: int mOffset
androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2
io.flutter.embedding.engine.dart.DartMessenger: java.util.concurrent.atomic.AtomicBoolean enableBufferingIncomingMessages
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map plugins
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType
io.flutter.view.AccessibilityBridge$4: io.flutter.view.AccessibilityBridge this$0
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: java.nio.ByteBuffer message
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map componentNameToResults
io.flutter.view.AccessibilityBridge$4: android.view.accessibility.AccessibilityManager val$accessibilityManager
kotlin.SynchronizedLazyImpl: java.lang.Object lock
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView flutterView
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map messageHandlers
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness
androidx.exifinterface.media.ExifInterface: byte[] EXIF_ASCII_PREFIX
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS
kotlin.ranges.IntProgression: int last
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mPrevious
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type kDown
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice REAR
androidx.exifinterface.media.ExifInterface$1: long mPosition
org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime: org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime PREFER_SYSTEM_OVER_APPLICATION
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isSigned
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker INSTANCE
org.tensorflow.lite.InterpreterApi$Options: java.lang.Boolean useNNAPI
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: io.flutter.plugins.imagepicker.ImagePickerPlugin this$0
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: android.app.Application application
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] $VALUES
kotlinx.coroutines.channels.Closed: java.lang.Throwable closeCause
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
kotlin.sequences.TransformingSequence$iterator$1: java.util.Iterator iterator
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int metaState
io.flutter.view.AccessibilityBridge$SemanticsNode: int id
org.tensorflow.lite.TensorFlowLite: java.lang.String[][] TFLITE_RUNTIME_LIBNAMES
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 countAll
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 updateState
kotlin.ranges.IntProgression: int step
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue platformTaskQueue
org.tensorflow.lite.nnapi.NnApiDelegate$Options: java.lang.String acceleratorName
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
io.flutter.embedding.engine.FlutterEngine$1: io.flutter.embedding.engine.FlutterEngine this$0
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
io.flutter.view.AccessibilityBridge: boolean isReleased
sq.flutter.tflite.TflitePlugin$RunPoseNet: java.util.Map outputMap
io.flutter.plugin.platform.VirtualDisplayController: int bufferWidth
io.flutter.plugin.mouse.MouseCursorPlugin: java.util.HashMap systemCursorConstants
io.flutter.embedding.android.FlutterTextureView: boolean isAttachedToFlutterRenderer
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.internal.ThreadContextKt$findOne$1 INSTANCE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.BroadcastReceiver broadcastReceiver
io.flutter.embedding.android.FlutterSplashView$2: io.flutter.embedding.android.FlutterSplashView this$0
kotlinx.coroutines.internal.FastServiceLoader: kotlinx.coroutines.internal.FastServiceLoader INSTANCE
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader imageReader
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.Observer mObserver
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollChildren
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String decreasedValue
androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream val$in
io.flutter.plugin.editing.InputConnectionAdaptor: boolean mMonitorCursorUpdate
androidx.collection.SimpleArrayMap: java.lang.Object[] mArray
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode EDGE_TO_EDGE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_VIRTUAL_FALLBACK
io.flutter.plugin.platform.PlatformViewsController: boolean flutterViewConvertedToImageView
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicLongFieldUpdater _state$FU
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager delegate
kotlin.coroutines.CombinedContext$toString$1: kotlin.coroutines.CombinedContext$toString$1 INSTANCE
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemNavigationBarContrastEnforced
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_RETRY
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
io.flutter.plugin.platform.VirtualDisplayController: android.hardware.display.VirtualDisplay virtualDisplay
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
io.flutter.embedding.android.FlutterView$5: io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer
sq.flutter.tflite.TflitePlugin$RunPix2PixOnFrame: java.nio.ByteBuffer input
androidx.exifinterface.media.ExifInterface$Rational: long denominator
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.MotionEventTracker motionEventTracker
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
androidx.core.graphics.drawable.IconCompat: int mInt1
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] inverseTransform
io.flutter.view.AccessibilityBridge: int SCROLLABLE_ACTIONS
kotlin.jvm.internal.FunctionReference: int flags
io.flutter.plugins.imagepicker.ImagePickerDelegate$1: android.app.Activity val$activity
kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.view.TextureRegistry$OnTrimMemoryListener trimMemoryListener
io.flutter.plugin.platform.PlatformPlugin$1: io.flutter.plugin.platform.PlatformPlugin this$0
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel$Result callback
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart ATOMIC
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher dispatcher
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String pathToBundle
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
io.flutter.plugins.imagepicker.ImagePickerDelegate: android.app.Activity activity
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel channel
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
sq.flutter.tflite.TflitePlugin$RunModelOnFrame: java.nio.ByteBuffer imgData
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory podcasts
androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters
io.flutter.embedding.android.FlutterActivity: int FLUTTER_VIEW_ID
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: java.util.Map outputMap
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
sq.flutter.tflite.TflitePlugin$RunSegmentationOnFrame: java.util.List labelColors
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int corePoolSize
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext$plus$1 INSTANCE
io.flutter.embedding.android.FlutterSplashView: android.view.View splashScreenView
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object LIST_EMPTY
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: int encodedValue
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type kUp
io.flutter.embedding.android.KeyData: boolean synthesized
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType UINT8
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Field childNodeIdsField
kotlinx.coroutines.scheduling.LimitingDispatcher: kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher dispatcher
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
io.flutter.view.VsyncWaiter: long refreshPeriodNanos
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mEnd
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: io.flutter.plugins.imagepicker.ImagePickerPlugin this$0
io.flutter.plugin.platform.VirtualDisplayController$1: io.flutter.plugin.platform.VirtualDisplayController this$0
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation delegate
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
org.tensorflow.lite.NativeInterpreterWrapper: java.util.Map inputsIndexes
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion: java.lang.Integer sdkVersion
io.flutter.view.AccessibilityBridge$SemanticsNode: float left
kotlin.coroutines.ContinuationInterceptor$Key: kotlin.coroutines.ContinuationInterceptor$Key $$INSTANCE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionStart
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$1: io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper this$0
kotlinx.coroutines.Unconfined: kotlinx.coroutines.Unconfined INSTANCE
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key Key
androidx.arch.core.executor.DefaultTaskExecutor$1: androidx.arch.core.executor.DefaultTaskExecutor this$0
io.flutter.embedding.android.FlutterImageView: android.media.Image currentImage
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mToStringCache
io.flutter.embedding.android.KeyData: long timestamp
sq.flutter.tflite.TflitePlugin: float[][] labelProb
androidx.versionedparcelable.VersionedParcelParcel: int mFieldId
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
androidx.window.R$attr: int alwaysExpand
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType LOCALE
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
io.flutter.view.AccessibilityBridge$Flag: int value
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.coroutines.CoroutineContext $context
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] PEF_TAGS
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean mBeforeStart
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarDividerColor
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
sq.flutter.tflite.TflitePlugin$RunYOLO$1: sq.flutter.tflite.TflitePlugin$RunYOLO this$1
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry this$1
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
kotlin.random.Random: kotlin.random.Random$Default Default
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getParentNodeId
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mValue
org.tensorflow.lite.NativeInterpreterWrapper: long cancellationFlagHandle
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object value
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
org.tensorflow.lite.InterpreterImpl: org.tensorflow.lite.NativeInterpreterWrapper wrapper
sq.flutter.tflite.TflitePlugin$RunPoseNet: sq.flutter.tflite.TflitePlugin this$0
androidx.core.app.RemoteActionCompat: android.app.PendingIntent mActionIntent
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointFunctionName
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler
sq.flutter.tflite.TflitePlugin$RunYOLO: java.nio.ByteBuffer imgData
sq.flutter.tflite.TflitePlugin$RunModelOnFrame: int NUM_RESULTS
io.flutter.plugin.common.StringCodec: io.flutter.plugin.common.StringCodec INSTANCE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionEnd
org.tensorflow.lite.NativeInterpreterWrapper: boolean isMemoryAllocated
org.tensorflow.lite.nnapi.NnApiDelegate$Options: long nnApiSupportLibraryHandle
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
sq.flutter.tflite.TflitePlugin$RunYOLO: int gridSize
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalHeight
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
org.tensorflow.lite.NativeInterpreterWrapper: boolean originalGraphHasUnresolvedFlexOp
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE
io.flutter.plugin.platform.PlatformViewWrapper: java.util.concurrent.atomic.AtomicLong pendingFramesCount
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
kotlin.Result$Failure: java.lang.Throwable exception
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS
androidx.collection.MapCollections$MapIterator: int mIndex
kotlinx.coroutines.EventLoop: long useCount
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlinx.coroutines.flow.internal.NoOpContinuation INSTANCE
kotlinx.coroutines.internal.MainDispatcherLoader: boolean FAST_SERVICE_LOADER_ENABLED
org.tensorflow.lite.NativeInterpreterWrapper: java.util.List ownedDelegates
androidx.window.R$attr: int splitMinSmallestWidth
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int height
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] $VALUES
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: java.lang.String encodedName
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getRecordSourceNodeId
org.tensorflow.lite.nnapi.NnApiDelegate$Options: java.lang.Integer maxDelegatedPartitions
io.flutter.embedding.android.KeyboardMap$KeyPair: long physicalKey
io.flutter.embedding.android.FlutterSplashView$1: io.flutter.embedding.android.FlutterSplashView this$0
sq.flutter.tflite.TflitePlugin$RunPix2PixOnImage: java.nio.ByteBuffer output
kotlin.jvm.internal.FunctionReference: int arity
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap this$0
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType STRING
androidx.activity.ImmLeaksCleaner: android.app.Activity mActivity
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalWidth
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode texture
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher Main
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.Channel$Factory Factory
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onNewIntentListeners
io.flutter.plugin.platform.PlatformViewsController: int nextOverlayLayerId
org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime: org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime FROM_APPLICATION_ONLY
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: java.util.Map pluginMap
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] $VALUES
kotlinx.coroutines.android.HandlerContext: android.os.Handler handler
androidx.window.R$styleable: int[] ActivityFilter
io.flutter.embedding.android.DrawableSplashScreen: android.graphics.drawable.Drawable drawable
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: java.lang.Runnable mOnDrawRunnable
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.view.ViewTreeObserver$OnGlobalFocusChangeListener activeFocusListener
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: kotlin.text.StringsKt__IndentKt$getIndentFunction$1 INSTANCE
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen splashScreen
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
io.flutter.view.AccessibilityBridge$5: int[] $SwitchMap$io$flutter$view$AccessibilityBridge$StringAttributeType
androidx.window.R$styleable: int[] SplitPlaceholderRule
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.android.KeyboardMap$TogglingGoal: long physicalKey
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES
androidx.collection.SimpleArrayMap: int mTwiceBaseCacheSize
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int width
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle parentHandle
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.reflect.Constructor $constructor$inlined
sq.flutter.tflite.TflitePlugin$RunPix2PixOnImage: java.lang.String path
kotlinx.coroutines.CompletedWithCancellation: java.lang.Object result
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver INSTANCE
kotlin.jvm.internal.ClassReference: java.util.Map FUNCTION_CLASSES
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause
kotlinx.coroutines.CoroutineStart$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.CommonPool: boolean usePrivatePool
io.flutter.embedding.engine.loader.FlutterLoader: long initStartTimestampMillis
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode displayMode
io.flutter.plugin.editing.ListenableEditingState: int mSelectionEndWhenBeginBatchEdit
androidx.window.embedding.ActivityRule: boolean alwaysExpand
kotlin.text.DelimitedRangesSequence$iterator$1: int counter
io.flutter.embedding.android.KeyboardMap: io.flutter.embedding.android.KeyboardMap$PressingGoal[] pressingGoals
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mKey
io.flutter.plugin.platform.VirtualDisplayController: android.view.View$OnFocusChangeListener focusChangeListener
io.flutter.plugin.platform.PlatformViewWrapper: io.flutter.embedding.android.AndroidTouchProcessor touchProcessor
androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_BUTTON
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
io.flutter.embedding.android.FlutterView$1: io.flutter.embedding.android.FlutterView this$0
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: android.view.View embeddedView
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map contentProviderAwarePlugins
kotlin.SynchronizedLazyImpl: kotlin.jvm.functions.Function0 initializer
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: java.lang.Throwable e
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicReferenceArray workers
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.Symbol REMOVE_FROZEN
io.flutter.plugin.platform.PlatformViewWrapper: boolean shouldRecreateSurfaceForLowMemory
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.ExecutorService executor
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils
org.tensorflow.lite.NativeInterpreterWrapper: long modelHandle
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
kotlinx.coroutines.DefaultExecutor: int debugStatus
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String value
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int id
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View val$mutatorView
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK
kotlinx.coroutines.scheduling.NonBlockingContext: int taskMode
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE
sq.flutter.tflite.TflitePlugin$RunModelOnBinary: sq.flutter.tflite.TflitePlugin this$0
androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
io.flutter.embedding.engine.dart.PlatformTaskQueue: android.os.Handler handler
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
io.flutter.plugin.common.StandardMessageCodec: java.nio.charset.Charset UTF8
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: java.util.concurrent.ExecutorService executor
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader$Settings settings
io.flutter.plugin.platform.PlatformViewWrapper: int bufferHeight
io.flutter.embedding.android.DrawableSplashScreen$1: java.lang.Runnable val$onTransitionComplete
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mParcelizerCache
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $VALUES
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcel mParcel
androidx.core.content.FileProvider: java.util.HashMap sCache
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowViewGroup
kotlinx.coroutines.internal.ConcurrentKt: java.lang.reflect.Method REMOVE_FUTURE_ON_CANCEL
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory root
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] globalTransform
org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime: org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime FROM_SYSTEM_ONLY
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Key key
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List valueAttributes
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM
io.flutter.plugin.editing.SpellCheckPlugin: android.view.textservice.SpellCheckerSession mSpellCheckerSession
org.tensorflow.lite.Interpreter: java.lang.String[] signatureKeyList
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
kotlinx.coroutines.CoroutineContextKt: boolean useCoroutinesScheduler
kotlin.jvm.internal.Reflection: kotlin.jvm.internal.ReflectionFactory factory
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView platformView
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetLeft
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread thread
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect viewBounds
sq.flutter.tflite.TflitePlugin$RunModelOnImage: int NUM_RESULTS
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
androidx.savedstate.Recreator: androidx.savedstate.SavedStateRegistryOwner mOwner
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: kotlinx.coroutines.flow.internal.SafeCollector $this_checkContext
kotlinx.coroutines.scheduling.CoroutineScheduler: int maxPoolSize
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion Companion
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerPropertiesList
org.tensorflow.lite.NativeInterpreterWrapper: org.tensorflow.lite.RuntimeFlavor RUNTIME_FLAVOR
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.io.File externalFilesDirectory
io.flutter.view.AccessibilityBridge$SemanticsNode: int maxValueLength
org.tensorflow.lite.Tensor$QuantizationParams: float scale
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.util.Set activityResultListeners
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int action
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LINK
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation continuation
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode
kotlin.collections.EmptyMap: kotlin.collections.EmptyMap INSTANCE
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
io.flutter.plugins.imagepicker.ImageResizer: io.flutter.plugins.imagepicker.ExifDataCopier exifDataCopier
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String[] contentCommitMimeTypes
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler handler
sq.flutter.tflite.TflitePlugin$RunModelOnBinary: int NUM_RESULTS
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Default
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: kotlinx.coroutines.JobSupport this$0
androidx.fragment.app.Fragment$2: androidx.fragment.app.Fragment this$0
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugin.common.MethodChannel$Result pendingResult
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED
kotlinx.coroutines.scheduling.TasksKt: int CORE_POOL_SIZE
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater producerIndex$FU
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS
kotlinx.coroutines.internal.ArrayQueue: int head
io.flutter.embedding.android.FlutterImageView: android.graphics.Bitmap currentBitmap
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode oldNext
sq.flutter.tflite.TflitePlugin$RunPoseNet: int numResults
androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD
io.flutter.embedding.android.AndroidTouchProcessor: boolean trackMotionEvents
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: android.graphics.Rect bounds
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DISMISS
io.flutter.embedding.android.FlutterSurfaceView$2: io.flutter.embedding.android.FlutterSurfaceView this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollPosition
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
io.flutter.view.AccessibilityBridge: java.lang.Integer lastLeftFrameInset
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE
io.flutter.view.AccessibilityBridge$SemanticsNode: int actions
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS
io.flutter.embedding.engine.dart.DartMessenger: java.lang.Object handlersLock
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
io.flutter.embedding.android.KeyboardManager: io.flutter.embedding.android.KeyboardManager$ViewDelegate viewDelegate
io.flutter.Log: int ASSERT
androidx.core.app.RemoteActionCompat: boolean mShouldShowIcon
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action TAP
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type kRepeat
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map activityAwarePlugins
io.flutter.plugin.platform.PlatformPlugin: int mEnabledOverlays
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: java.lang.String encodedName
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice[] $VALUES
io.flutter.embedding.android.FlutterSplashView: java.lang.String TAG
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView this$0
kotlinx.coroutines.UndispatchedCoroutine: kotlin.coroutines.CoroutineContext savedContext
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: io.flutter.plugins.imagepicker.ImagePickerDelegate delegate
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterJNI flutterJNI
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong COROUTINE_ID
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionExtent
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener flutterEngineAttachmentListener
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState
io.flutter.embedding.engine.dart.DartExecutor$1: io.flutter.embedding.engine.dart.DartExecutor this$0
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
io.flutter.view.AccessibilityBridge$Action: int value
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.CancellableContinuation cont
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViewParent
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int rngState
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding flutterPluginBinding
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature BOLD_TEXT
io.flutter.view.AccessibilityBridge$2: io.flutter.view.AccessibilityBridge this$0
androidx.window.R$styleable: int[] SplitPairFilter
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mPendingListeners
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _removedRef$FU
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView flutterView
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object CONDITION_FALSE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
androidx.savedstate.SavedStateRegistry$1: androidx.savedstate.SavedStateRegistry this$0
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy mStrategy
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext immediate
androidx.versionedparcelable.VersionedParcelParcel: int mEnd
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: android.view.KeyEvent event
kotlinx.coroutines.channels.ArrayChannel$WhenMappings: int[] $EnumSwitchMapping$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT
androidx.window.R$styleable: int[] SplitPairRule
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mTitle
androidx.lifecycle.MethodCallsLogger: java.util.Map mCalledMethods
io.flutter.plugins.imagepicker.ImagePickerDelegate$2$1: io.flutter.plugins.imagepicker.ImagePickerDelegate$OnPathReadyListener val$listener
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize: int height
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
org.tensorflow.lite.nnapi.NnApiDelegate$Options: java.lang.Boolean useNnapiCpu
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Service service
kotlin.sequences.TransformingSequence$iterator$1: kotlin.sequences.TransformingSequence this$0
kotlinx.coroutines.Job$Key: kotlinx.coroutines.Job$Key $$INSTANCE
androidx.collection.MapCollections$MapIterator: boolean mEntryValid
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable mParcel
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: float threshold
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerCoords
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
androidx.collection.MapCollections: androidx.collection.MapCollections$EntrySet mEntrySet
io.flutter.embedding.android.KeyEmbedderResponder: java.util.HashMap pressingRecords
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object $receiver$inlined
io.flutter.plugin.common.StandardMessageCodec: io.flutter.plugin.common.StandardMessageCodec INSTANCE
io.flutter.plugin.platform.PlatformPlugin: android.app.Activity activity
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: long motionEventId
io.flutter.plugin.editing.TextInputPlugin$InputTarget: int id
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1 INSTANCE
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.SpellCheckPlugin spellCheckPlugin
io.flutter.view.AccessibilityBridge: boolean accessibleNavigation
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECKED
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int overrideId
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalCpuQueue
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.util.concurrent.locks.ReentrantReadWriteLock cacheLock
io.flutter.embedding.android.FlutterSplashView: java.lang.Runnable onTransitionComplete
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetBottom
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] $VALUES
androidx.core.app.ActivityCompat$1: android.app.Activity val$activity
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List hintAttributes
androidx.window.core.Bounds: int right
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel channel
sq.flutter.tflite.TflitePlugin$RunYOLO: sq.flutter.tflite.TflitePlugin this$0
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
kotlinx.coroutines.DefaultExecutor: long KEEP_ALIVE_NANOS
kotlinx.coroutines.CompletedWithCancellation: kotlin.jvm.functions.Function1 onCancellation
io.flutter.plugin.editing.TextInputPlugin: android.view.View mView
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartMessenger dartMessenger
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides NONE
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _delayed$FU
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: java.lang.String label
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING
kotlinx.coroutines.flow.SafeFlow: kotlin.jvm.functions.Function2 block
io.flutter.plugin.editing.TextInputPlugin$2: io.flutter.plugin.editing.TextInputPlugin this$0
androidx.versionedparcelable.VersionedParcelParcel: int mOffset
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
io.flutter.embedding.android.KeyData$Type: KeyData$Type(java.lang.String,int,long)
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Key getKey()
org.tensorflow.lite.nnapi.NnApiDelegate: void initWithInterpreterFactoryApi(org.tensorflow.lite.InterpreterFactoryApi)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode peek()
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceDestroyed(android.view.SurfaceHolder)
kotlinx.coroutines.EventLoop: long getNextTime()
sq.flutter.tflite.TflitePlugin$RunPix2PixOnBinary: void onRunTfliteDone()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture surfaceTexture()
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
kotlin.ranges.IntRange: boolean isEmpty()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$5200(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean)
kotlin.coroutines.ContinuationKt: void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterView: boolean onTouchEvent(android.view.MotionEvent)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
io.flutter.embedding.engine.renderer.FlutterRenderer: void swapSurface(android.view.Surface)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
sq.flutter.tflite.TflitePlugin$RunSegmentationOnFrame: void onRunTfliteDone()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)
kotlin.collections.MapsKt__MapsJVMKt: int mapCapacity(int)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void launchTakeImageWithCameraIntent()
sq.flutter.tflite.TflitePlugin: void detectObjectOnFrame(java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)
androidx.window.core.Version$Companion: Version$Companion()
kotlin.collections.EmptyList: boolean retainAll(java.util.Collection)
io.flutter.util.Preconditions: void checkState(boolean,java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean inStack()
sq.flutter.tflite.TflitePlugin: boolean access$002(sq.flutter.tflite.TflitePlugin,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: void addOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: boolean isExecutingDart()
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader$InitResult call()
kotlinx.coroutines.JobSupport: void promoteSingleToNodeList(kotlinx.coroutines.JobNode)
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityStarted(android.app.Activity)
io.flutter.plugin.platform.PlatformViewWrapper: void unsetOnDescendantFocusChangeListener()
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
kotlin.text.DelimitedRangesSequence: DelimitedRangesSequence(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: NavigationChannel$1(io.flutter.embedding.engine.systemchannels.NavigationChannel)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner,boolean)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context)
kotlinx.coroutines.Active: Active()
org.tensorflow.lite.TensorImpl: boolean isBuffer(java.lang.Object)
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.CoroutineContext getContext()
io.flutter.embedding.android.FlutterImageView: void pause()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[],boolean)
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element)
io.flutter.plugin.common.StandardMessageCodec: void writeFloat(java.io.ByteArrayOutputStream,float)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivity()
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetAfter(java.lang.CharSequence,int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] getRestorationData()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingTextInCodePoints(int,int)
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.util.HandlerCompat: android.os.Handler createAsyncHandler(android.os.Looper)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
androidx.versionedparcelable.VersionedParcelParcel: void setOutputField(int)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3900(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.io.File createTemporaryWritableImageFile()
kotlin.collections.EmptyList: java.lang.Void get(int)
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.plugins.imagepicker.ImagePickerDelegate: ImagePickerDelegate(android.app.Activity,java.io.File,io.flutter.plugins.imagepicker.ImageResizer,io.flutter.plugin.common.MethodChannel$Result,io.flutter.plugin.common.MethodCall,io.flutter.plugins.imagepicker.ImagePickerCache,io.flutter.plugins.imagepicker.ImagePickerDelegate$PermissionManager,io.flutter.plugins.imagepicker.ImagePickerDelegate$FileUriResolver,io.flutter.plugins.imagepicker.FileUtils)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel()
kotlinx.coroutines.CoroutineExceptionHandlerKt: java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void dispatch(java.lang.Runnable)
kotlinx.coroutines.JobSupport$Finishing: void setCompleting(boolean)
kotlinx.coroutines.channels.ConflatedChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
kotlinx.coroutines.EventLoop: boolean isUnconfinedLoopActive()
io.flutter.util.ViewUtils: boolean traverseHierarchy(android.view.View,io.flutter.util.ViewUtils$ViewVisitor)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditableSizeAndTransform(double,double,double[])
kotlin.text.StringsKt__StringsKt$splitToSequence$1: StringsKt__StringsKt$splitToSequence$1(java.lang.CharSequence)
io.flutter.plugin.editing.TextInputPlugin$2: void inspect(double,double)
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcelable readParcelable()
kotlinx.coroutines.JobCancellationException: java.lang.Throwable createCopy()
org.tensorflow.lite.NativeInterpreterWrapper: void addUserProvidedDelegates(org.tensorflow.lite.InterpreterImpl$Options)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: void checkContext(kotlinx.coroutines.flow.internal.SafeCollector,kotlin.coroutines.CoroutineContext)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
io.flutter.plugins.imagepicker.FileUtils: java.lang.String getPathFromUri(android.content.Context,android.net.Uri)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
kotlin.ranges.IntRange$Companion: IntRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: WindowInfoRepositoryCallbackAdapterWrapper(androidx.window.java.layout.WindowInfoTrackerCallbackAdapter)
io.flutter.embedding.android.FlutterActivity: java.lang.String getAppBundlePath()
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle installParentHandle()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.lang.Class)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique()
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: void lockPlatformViewInputConnection()
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec getCreateArgsCodec()
io.flutter.view.AccessibilityBridge: boolean access$500(io.flutter.view.AccessibilityBridge)
kotlinx.coroutines.internal.AtomicOp: long getOpSequence()
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
androidx.collection.ArrayMap$1: java.util.Map colGetMap()
kotlinx.coroutines.channels.Channel$Factory: int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core()
io.flutter.embedding.engine.renderer.FlutterRenderer: void onTrimMemory(int)
kotlin.text.CharsKt__CharJVMKt: int digitOf(char,int)
io.flutter.embedding.android.FlutterTextureView: void pause()
io.flutter.embedding.android.FlutterView$2: void onChange(boolean)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader)
kotlinx.coroutines.DefaultExecutor: DefaultExecutor()
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.platform.PlatformPlugin$1: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
io.flutter.embedding.android.FlutterView: boolean onHoverEvent(android.view.MotionEvent)
kotlin.collections.EmptyIterator: EmptyIterator()
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange)
androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: ExifInterface$SeekableByteOrderedDataInputStream(java.io.InputStream)
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)
org.tensorflow.lite.Tensor$QuantizationParams: Tensor$QuantizationParams(float,int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.exifinterface.media.ExifInterfaceUtils: long[] convertToLongArray(java.lang.Object)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp(java.lang.String,long,long,long)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
kotlin.text.StringsKt___StringsKt: java.lang.String drop(java.lang.String,int)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: void invoke(java.lang.Throwable)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
kotlin.coroutines.jvm.internal.DebugMetadataKt: java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.List)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)
org.tensorflow.lite.InterpreterApi$Options: InterpreterApi$Options()
io.flutter.plugin.platform.PlatformViewsController: void finishFrame(boolean)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void skipTag(android.content.res.XmlResourceParser)
io.flutter.plugin.platform.PlatformViewsController$1: void configureForHybridComposition(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
kotlinx.coroutines.EventLoopImplBase: boolean isCompleted()
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: SpellCheckChannel(io.flutter.embedding.engine.dart.DartExecutor)
org.tensorflow.lite.nnapi.NnApiDelegateImpl: long createDelegate(int,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean,boolean,long)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
kotlin.collections.EmptyMap: java.lang.Object get(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCount$default(java.lang.Class,int,int,java.lang.Object)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set setOf(java.lang.Object)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: KeyboardManager$PerEventCallbackBuilder(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,int,boolean)
org.tensorflow.lite.nnapi.NnApiDelegate$Options: int getExecutionPreference()
kotlinx.coroutines.NodeList: kotlinx.coroutines.NodeList getList()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getValue()
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
kotlin.text.DelimitedRangesSequence$iterator$1: void remove()
kotlinx.coroutines.UndispatchedCoroutine: void afterResume(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView: boolean wasPreviousSplashTransitionInterrupted()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int)
kotlinx.coroutines.CompletedContinuation: int hashCode()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void addView(java.lang.Object[])
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingText(int,int)
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerCoordsList(java.lang.Object,float)
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
androidx.collection.SimpleArrayMap: boolean containsValue(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors(io.flutter.view.AccessibilityViewEmbedder$1)
kotlinx.coroutines.Job$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2)
org.tensorflow.lite.gpu.GpuDelegate: long getNativeHandle()
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String,int)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleCaptureImageResult(int)
io.flutter.plugin.platform.PlatformPlugin: void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.plugin.common.StandardMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: LockFreeTaskQueueCore$Placeholder(int)
org.tensorflow.lite.TensorFlowLite: void nativeDoNothing()
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)
kotlinx.coroutines.CompletedWithCancellation: java.lang.String toString()
org.tensorflow.lite.InterpreterApi$Options: java.util.List getDelegateFactories()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(java.lang.Object)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.flutter.plugins.imagepicker.ImageResizer: java.io.File createImageOnExternalDirectory(java.lang.String,android.graphics.Bitmap,int)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SpellCheckChannel getSpellCheckChannel()
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget access$100(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.view.AccessibilityBridge$SemanticsNode: void ensureInverseTransform()
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getPollResult()
androidx.lifecycle.LifecycleRegistry: void sync()
kotlinx.coroutines.JobSupport: void cancelInternal(java.lang.Throwable)
kotlinx.coroutines.JobSupport$ChildCompletion: void invoke(java.lang.Throwable)
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
sq.flutter.tflite.TflitePlugin: float getInstanceScore(java.util.Map,int)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int)
androidx.collection.MapCollections$EntrySet: java.util.Iterator iterator()
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryUnpark()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType)
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
io.flutter.plugin.common.StandardMessageCodec: void readAlignment(java.nio.ByteBuffer,int)
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel)
io.flutter.embedding.engine.systemchannels.SystemChannel: SystemChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String)
org.tensorflow.lite.TensorImpl: int quantizationZeroPoint(long)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.UndispatchedCoroutine: void saveThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader()
androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding(android.app.Activity,androidx.lifecycle.Lifecycle)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int available()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsResumed()
androidx.collection.ArrayMap: java.util.Collection values()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: SingleViewPresentation$PresentationContext(android.content.Context,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler,android.content.Context)
io.flutter.plugin.common.MethodCall: java.lang.Object arguments()
androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
io.flutter.plugin.platform.PlatformPlugin$1: boolean clipboardHasStrings()
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 access$getEmitFun$p()
kotlinx.coroutines.JobSupport: boolean isCompleted()
io.flutter.plugins.imagepicker.ImagePickerDelegate$3: void onPathReady(java.lang.String)
org.tensorflow.lite.NativeInterpreterWrapper: int getInputCount(long)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterSplashView: void onRestoreInstanceState(android.os.Parcelable)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: KeyEventChannel(io.flutter.plugin.common.BinaryMessenger)
io.flutter.embedding.android.FlutterImageView: void closeCurrentImage()
io.flutter.plugin.editing.TextEditingDelta: void setDeltas(java.lang.CharSequence,java.lang.CharSequence,int,int)
kotlinx.coroutines.JobSupport: boolean handleJobException(java.lang.Throwable)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: MouseCursorChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result)
org.tensorflow.lite.TensorImpl: void throwIfSrcShapeIsIncompatible(java.lang.Object)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
io.flutter.embedding.android.FlutterActivity: void onPause()
androidx.collection.MapCollections$EntrySet: boolean add(java.util.Map$Entry)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String invoke(java.lang.String)
kotlinx.coroutines.CoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray()
kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()
io.flutter.plugin.platform.PlatformViewsController: int toLogicalPixels(double)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.exifinterface.media.ExifInterfaceUtils: boolean startsWith(byte[],byte[])
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$502(io.flutter.embedding.android.FlutterTextureView,android.view.Surface)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
io.flutter.embedding.engine.loader.FlutterLoader$1: FlutterLoader$1(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void ensureAlive()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: FlutterEngineConnectionRegistry(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String nameString()
io.flutter.util.ViewUtils: android.app.Activity getActivity(android.content.Context)
io.flutter.embedding.android.KeyboardManager$CharacterCombiner: KeyboardManager$CharacterCombiner()
org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime: org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime[] values()
io.flutter.plugin.editing.TextInputPlugin: android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.versionedparcelable.VersionedParcelParcel: int readInt()
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
sq.flutter.tflite.TflitePlugin$RunModelOnBinary: void runTflite()
androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
kotlinx.coroutines.internal.LockFreeLinkedListKt: kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object)
kotlin.collections.EmptyList: java.util.Iterator iterator()
sq.flutter.tflite.TflitePlugin: java.util.Vector access$300(sq.flutter.tflite.TflitePlugin)
kotlin.coroutines.ContinuationInterceptor$Key: ContinuationInterceptor$Key()
kotlinx.coroutines.scheduling.WorkQueue: long tryStealFrom(kotlinx.coroutines.scheduling.WorkQueue)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void chooseVideoFromGallery(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.util.PathUtils: java.lang.String getDataDirPath(android.content.Context)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCountOrDefault(java.lang.Class,int)
androidx.lifecycle.DefaultLifecycleObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.android.KeyEmbedderResponder: void updatePressingState(java.lang.Long,java.lang.Long)
kotlin.collections.EmptyIterator: java.lang.Object previous()
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong getCOROUTINE_ID()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext()
androidx.collection.MapCollections$KeySet: int hashCode()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object next()
sq.flutter.tflite.TflitePlugin: void initPoseNet(java.util.Map)
kotlin.collections.CollectionsKt__CollectionsKt: int getLastIndex(java.util.List)
androidx.tracing.Trace: void endAsyncSectionFallback(java.lang.String,int)
kotlin.sequences.TransformingSequence$iterator$1: TransformingSequence$iterator$1(kotlin.sequences.TransformingSequence)
androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getCoroutineContext()
io.flutter.view.AccessibilityBridge$TextDirection: AccessibilityBridge$TextDirection(java.lang.String,int)
androidx.exifinterface.media.ExifInterface: boolean isJpegFormat(byte[])
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: void reply(java.nio.ByteBuffer)
androidx.exifinterface.media.ExifInterface: boolean isPngFormat(byte[])
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.ContextScope: ContextScope(kotlin.coroutines.CoroutineContext)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
kotlinx.coroutines.LazyStandaloneCoroutine: LazyStandaloneCoroutine(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List decodeSystemUiOverlays(org.json.JSONArray)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: FlutterRenderer$SurfaceTextureRegistryEntry$1(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
kotlin.collections.EmptyList: java.lang.String toString()
androidx.collection.MapCollections$EntrySet: boolean containsAll(java.util.Collection)
io.flutter.plugin.editing.TextInputPlugin: void access$300(io.flutter.plugin.editing.TextInputPlugin,android.view.View)
sq.flutter.tflite.TflitePlugin: void softmax(float[])
io.flutter.plugin.platform.VirtualDisplayController: void resize(int,int,java.lang.Runnable)
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: FlutterRenderer$ViewportMetrics()
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$202(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.EventLoop createEventLoop()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()
io.flutter.embedding.android.SplashScreen: android.os.Bundle saveSplashScreenState()
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getChildJobCancellationCause()
kotlinx.coroutines.channels.ChannelResult$Closed: int hashCode()
kotlinx.coroutines.JobImpl: JobImpl(kotlinx.coroutines.Job)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.Object,java.lang.String)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleCaptureVideoResult(int)
sq.flutter.tflite.TflitePlugin$TfliteTask: void onPostExecute(java.lang.Object)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix)
androidx.core.content.FileProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)
kotlinx.coroutines.JobSupport: java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
org.tensorflow.lite.InterpreterApi$Options: boolean getUseNNAPI()
io.flutter.embedding.android.FlutterView: void onAttachedToWindow()
kotlinx.coroutines.flow.internal.SafeCollector: void checkContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlin.collections.EmptyList: java.lang.Object[] toArray(java.lang.Object[])
androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.text.DelimitedRangesSequence$iterator$1: void calcNext()
org.tensorflow.lite.TensorImpl: void setTo(java.nio.Buffer)
kotlinx.coroutines.CompletedContinuation: java.lang.String toString()
io.flutter.plugin.common.StringCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: SafeIterableMap$AscendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
kotlin.SynchronizedLazyImpl: java.lang.Object getValue()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean access$200(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
org.tensorflow.lite.TensorImpl: org.tensorflow.lite.DataType dataTypeOf(java.lang.Object)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.LazyStandaloneCoroutine: void onStart()
io.flutter.plugin.editing.InputConnectionAdaptor: void didChangeEditingState(boolean,boolean,boolean)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToService()
kotlin.jvm.internal.Intrinsics: void throwUninitializedProperty(java.lang.String)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
kotlin.collections.EmptySet: java.lang.Object[] toArray()
androidx.collection.ArrayMap$1: java.lang.Object colSetValue(int,java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerCache: void clear()
org.tensorflow.lite.Interpreter$Options: org.tensorflow.lite.Interpreter$Options addDelegate(org.tensorflow.lite.Delegate)
androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)
io.flutter.embedding.android.FlutterActivity: void configureWindowForTransparency()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToContentProvider()
androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)
androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
io.flutter.plugin.editing.ListenableEditingState: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
io.flutter.plugin.platform.PlatformViewWrapper$1: void onFrameConsumed()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean sendKeyEvent(android.view.KeyEvent)
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource getTimeSource()
kotlinx.coroutines.Empty: boolean isActive()
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
kotlin.collections.EmptySet: boolean add(java.lang.Object)
androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)
io.flutter.embedding.android.FlutterActivity: boolean shouldDestroyEngineWithHost()
androidx.exifinterface.media.ExifInterface$ExifAttribute: ExifInterface$ExifAttribute(int,int,long,byte[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
kotlin.collections.EmptyList: boolean contains(java.lang.Object)
kotlin.coroutines.jvm.internal.DebugMetadataKt: void checkDebugMetadataVersion(int,int)
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor)
kotlin.jvm.internal.Reflection: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
kotlin.collections.EmptySet: java.util.Iterator iterator()
kotlinx.coroutines.DispatchedTask: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
io.flutter.plugin.platform.PlatformViewsController: void diposeAllViews()
kotlin.random.FallbackThreadLocalRandom$implStorage$1: FallbackThreadLocalRandom$implStorage$1()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values()
androidx.collection.MapCollections$EntrySet: boolean isEmpty()
io.flutter.embedding.engine.dart.DartExecutor: DartExecutor(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
org.tensorflow.lite.InterpreterImpl: InterpreterImpl(org.tensorflow.lite.NativeInterpreterWrapper)
sq.flutter.tflite.TflitePlugin$TfliteTask: void executeTfliteTask()
kotlin.collections.EmptyList: boolean add(java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task poll()
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: JobSupport$addLastAtomic$$inlined$addLastIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String)
org.tensorflow.lite.NativeInterpreterWrapper: NativeInterpreterWrapper(java.nio.ByteBuffer,org.tensorflow.lite.InterpreterImpl$Options)
org.tensorflow.lite.NativeInterpreterWrapper: void addDelegates(org.tensorflow.lite.InterpreterImpl$Options)
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType[] values()
androidx.collection.MapCollections$KeySet: MapCollections$KeySet(androidx.collection.MapCollections)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.plugin.editing.TextInputPlugin: void access$600(io.flutter.plugin.editing.TextInputPlugin,int,boolean)
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: EventLoopImplBase$DelayedTaskQueue(long)
io.flutter.embedding.engine.dart.DartMessenger: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Throwable helpCloseAndGetSendException(kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.scheduling.LimitingDispatcher: int getTaskMode()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: PlatformChannel$SystemChromeStyle(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Boolean,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,java.lang.Boolean)
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
kotlin.Pair: Pair(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(java.lang.Runnable,boolean)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlinx.coroutines.internal.ScopeCoroutine: void afterResume(java.lang.Object)
androidx.core.view.WindowInsetsControllerCompat: WindowInsetsControllerCompat(android.view.Window,android.view.View)
sq.flutter.tflite.TflitePlugin: int access$400(sq.flutter.tflite.TflitePlugin)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleChooseMultiImageResult(int,android.content.Intent)
io.flutter.embedding.android.FlutterActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry access$100(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugin.platform.PlatformViewWrapper$1: PlatformViewWrapper$1(io.flutter.plugin.platform.PlatformViewWrapper)
kotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean requestCursorUpdates(int)
io.flutter.plugin.platform.PlatformPlugin: void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String getBufferDebugString()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: MotionEventTracker$MotionEventId(long)
androidx.exifinterface.media.ExifInterface: void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.exifinterface.media.ExifInterface: boolean isThumbnail(java.util.HashMap)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)
org.tensorflow.lite.TensorImpl: void delete(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
androidx.core.view.WindowInsetsControllerCompat$Impl23: WindowInsetsControllerCompat$Impl23(android.view.Window,android.view.View)
kotlinx.coroutines.internal.ThreadSafeHeap: void siftDownFrom(int)
androidx.exifinterface.media.ExifInterface: boolean isHeifFormat(byte[])
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])
androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.CoroutineContext getContext()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
io.flutter.plugin.platform.PlatformPlugin: void access$400(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
org.tensorflow.lite.Interpreter: void runForMultipleInputsOutputs(java.lang.Object[],java.util.Map)
kotlin.collections.EmptyIterator: java.lang.Void previous()
androidx.window.embedding.SplitInfo: float getSplitRatio()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
org.tensorflow.lite.NativeInterpreterWrapper: void delete(long,long,long)
kotlinx.coroutines.ThreadLocalEventLoop: void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: void send()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.String toString()
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
org.tensorflow.lite.NativeInterpreterWrapper: void close()
kotlin.SynchronizedLazyImpl: java.lang.String toString()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.core.content.FileProvider: boolean onCreate()
io.flutter.view.AccessibilityBridge: void handleTouchExploration(float,float,boolean)
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.plugin.common.MethodChannel,boolean)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$600(io.flutter.view.AccessibilityBridge)
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlinx.coroutines.Job)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
org.tensorflow.lite.NativeInterpreterWrapper: long deleteCancellationFlag(long)
io.flutter.embedding.android.FlutterActivity: boolean shouldAttachEngineToActivity()
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
androidx.core.os.ExecutorCompat: java.util.concurrent.Executor create(android.os.Handler)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker(long)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.JobSupport$Finishing: java.util.ArrayList allocateList()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.exifinterface.media.ExifInterface: void getWebpAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: boolean onPreDraw()
kotlinx.coroutines.JobSupport: void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable)
kotlinx.coroutines.internal.SystemPropsKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)
io.flutter.embedding.android.FlutterView: void sendViewportMetricsToFlutter()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
io.flutter.embedding.android.KeyboardMap$TogglingGoal: KeyboardMap$TogglingGoal(int,long,long)
io.flutter.plugin.platform.PlatformPlugin: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
androidx.lifecycle.DefaultLifecycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: DownstreamExceptionElement(java.lang.Throwable)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String)
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiDisplayed()
kotlinx.coroutines.internal.MainDispatchersKt: java.lang.Void throwMissingMainDispatcherException()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int getSize()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void mark(int)
io.flutter.view.AccessibilityBridge: void access$200(io.flutter.view.AccessibilityBridge,int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOrNull(java.lang.Iterable)
androidx.collection.SimpleArrayMap: boolean remove(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalBlockingWork(boolean)
kotlin.jvm.internal.ClassReference: java.lang.String getSimpleName()
io.flutter.plugin.platform.PlatformViewWrapper: void setBufferSize(int,int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable tryCopyAndVerify(java.lang.Throwable)
kotlin.ranges.IntRange$Companion: IntRange$Companion()
kotlinx.coroutines.CancellableContinuationImpl: void multipleHandlersError(kotlin.jvm.functions.Function1,java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin: void updateSystemUiOverlays()
io.flutter.view.VsyncWaiter$FrameCallback: VsyncWaiter$FrameCallback(io.flutter.view.VsyncWaiter,long)
androidx.window.core.Bounds: int getTop()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader createImageReader(int,int)
androidx.collection.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)
sq.flutter.tflite.TflitePlugin$RunYOLO: void runTflite()
org.tensorflow.lite.InterpreterImpl: void runForMultipleInputsOutputs(java.lang.Object[],java.util.Map)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2220(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
kotlinx.coroutines.DebugKt: boolean getDEBUG()
kotlinx.coroutines.NonDisposableHandle: boolean childCancelled(java.lang.Throwable)
io.flutter.plugin.platform.PlatformView: void onFlutterViewAttached(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void setByteOrder(java.nio.ByteOrder)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.flutter.plugin.platform.PlatformViewWrapper: void onFrameProduced()
sq.flutter.tflite.TflitePlugin$RunSegmentationOnFrame: TflitePlugin$RunSegmentationOnFrame(sq.flutter.tflite.TflitePlugin,java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.collection.MapCollections$ValuesCollection: boolean addAll(java.util.Collection)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: MouseCursorChannel$1(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: LocalizationChannel(io.flutter.embedding.engine.dart.DartExecutor)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: BinaryMessenger$TaskQueueOptions()
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI access$300(io.flutter.embedding.engine.renderer.FlutterRenderer)
kotlinx.coroutines.CancellableContinuationImpl: void completeResume(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void search(int)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setSystemUiFlag(int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
io.flutter.plugin.common.StandardMethodCodec: StandardMethodCodec(io.flutter.plugin.common.StandardMessageCodec)
io.flutter.plugin.platform.PlatformViewWrapper: int getBufferHeight()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.arch.core.internal.SafeIterableMap$Entry: boolean equals(java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: long processNextEvent()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: int hashCode()
kotlinx.coroutines.channels.RendezvousChannel: RendezvousChannel(kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.Task: Task(long,kotlinx.coroutines.scheduling.TaskContext)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
org.tensorflow.lite.Interpreter: Interpreter(java.nio.ByteBuffer,org.tensorflow.lite.Interpreter$Options)
io.flutter.view.AccessibilityBridge: android.graphics.Rect getBoundsInScreen(android.graphics.Rect)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
org.tensorflow.lite.NativeInterpreterWrapper: int getInputTensorIndex(long,int)
kotlinx.coroutines.internal.OpDescriptor: java.lang.String toString()
kotlinx.coroutines.internal.DispatchedContinuation: boolean isReusable()
kotlin.jvm.internal.ClassReference$Companion: java.lang.String getClassSimpleName(java.lang.Class)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
kotlin.collections.EmptyMap: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)
sq.flutter.tflite.TflitePlugin$TfliteTask: java.lang.Void doInBackground(java.lang.Void[])
kotlinx.coroutines.Dispatchers: Dispatchers()
io.flutter.plugin.common.JSONMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
kotlin.ranges.RangesKt___RangesKt: int coerceAtLeast(int,int)
io.flutter.plugins.imagepicker.ImagePickerDelegate: boolean onActivityResult(int,int,android.content.Intent)
androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()
androidx.exifinterface.media.ExifInterface: void getRw2Attributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
sq.flutter.tflite.TflitePlugin: void loadLabels(android.content.res.AssetManager,java.lang.String)
kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getKotlinClass(java.lang.Class)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiNoLongerDisplayed()
kotlinx.coroutines.CommonPool: java.lang.Thread createPlainPool$lambda-12(java.util.concurrent.atomic.AtomicInteger,java.lang.Runnable)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
kotlinx.coroutines.channels.Closed: void completeResumeReceive(java.lang.Object)
androidx.exifinterface.media.ExifInterface$ExifTag: boolean isFormatCompatible(int)
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionUnlocked()
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalCpuWork()
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineDetachedFromFlutterView()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback buildCallback()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger)
kotlin.internal.PlatformImplementationsKt: int getJavaVersion()
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$500(io.flutter.plugin.platform.PlatformViewsController)
org.tensorflow.lite.TensorImpl: int numBytes(long)
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Editable getEditable()
io.flutter.plugin.editing.TextInputPlugin$1: void setPlatformViewClient(int,boolean)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion()
androidx.fragment.app.Fragment$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
kotlinx.coroutines.EventLoopImplBase: boolean isEmpty()
io.flutter.plugin.editing.ListenableEditingState: void setSpan(java.lang.Object,int,int,int)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetSystemUiFlag(int)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: ShimRegistrar(java.lang.String,java.util.Map)
io.flutter.view.VsyncWaiter$DisplayListener: VsyncWaiter$DisplayListener(io.flutter.view.VsyncWaiter,android.hardware.display.DisplayManager)
kotlinx.coroutines.CommonPool: boolean isGoodCommonPool$kotlinx_coroutines_core(java.lang.Class,java.util.concurrent.ExecutorService)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context,android.util.AttributeSet,int)
sq.flutter.tflite.TflitePlugin$RunYOLO: TflitePlugin$RunYOLO(sq.flutter.tflite.TflitePlugin,java.util.HashMap,java.nio.ByteBuffer,int,int,java.util.List,float,int,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void launchPickVideoFromGalleryIntent()
io.flutter.plugin.platform.PlatformPlugin$1: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
androidx.window.layout.WindowInfoTracker$Companion: void reset()
kotlin.random.RandomKt: int takeUpperBits(int,int)
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: FlutterRenderer$DisplayFeatureState(java.lang.String,int,int)
androidx.collection.MapCollections$MapIterator: boolean hasNext()
androidx.exifinterface.media.ExifInterface: void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.collection.MapCollections: java.util.Collection getValues()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.window.embedding.ActivityRule: int hashCode()
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance()
io.flutter.plugin.editing.TextInputPlugin: void autofill(android.util.SparseArray)
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
io.flutter.plugin.platform.PlatformViewsController: void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
kotlinx.coroutines.internal.ThreadSafeHeap: void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long wo(long,long)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void doInitialFlutterViewRun()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onRestoreInstanceState(android.os.Bundle)
io.flutter.embedding.android.FlutterView: void onSizeChanged(int,int,int,int)
kotlinx.coroutines.CoroutineId: int hashCode()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
kotlinx.coroutines.EventLoopImplBase: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: TextInputChannel$Configuration(boolean,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,java.lang.String[],io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[])
io.flutter.plugins.imagepicker.ImagePickerDelegate$2: void getFullImagePath(android.net.Uri,io.flutter.plugins.imagepicker.ImagePickerDelegate$OnPathReadyListener)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
org.tensorflow.lite.Interpreter: int getOutputTensorCount()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
kotlinx.coroutines.channels.ClosedReceiveChannelException: ClosedReceiveChannelException(java.lang.String)
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.Symbol: java.lang.String toString()
androidx.window.R: R()
androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: ThreadContextKt$countAll$1()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromService()
kotlinx.coroutines.DispatchedTaskKt: boolean isReusableMode(int)
kotlin.collections.EmptyMap: java.util.Set entrySet()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onNewIntent(android.content.Intent)
kotlin.collections.IntIterator: IntIterator()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object takeState$kotlinx_coroutines_core()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$2: void onAccessibilityStateChanged(boolean)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
io.flutter.embedding.android.FlutterSurfaceView: void detachFromRenderer()
io.flutter.FlutterInjector$Builder: void fillDefaults()
androidx.collection.MapCollections$EntrySet: boolean contains(java.lang.Object)
io.flutter.plugin.common.StringCodec: java.lang.String decodeMessage(java.nio.ByteBuffer)
kotlinx.coroutines.JobImpl: boolean getHandlesException$kotlinx_coroutines_core()
io.flutter.Log: void e(java.lang.String,java.lang.String)
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.Job getParent()
io.flutter.plugins.imagepicker.ImagePickerDelegate$1: boolean needRequestCameraPermission()
org.tensorflow.lite.nnapi.NnApiDelegateImpl: long getNativeHandle()
kotlinx.coroutines.scheduling.WorkQueue: void decrementIfBlocking(kotlinx.coroutines.scheduling.Task)
org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime: org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime valueOf(java.lang.String)
androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: FlutterRenderer$DisplayFeature(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState)
kotlinx.coroutines.JobCancellationException: boolean equals(java.lang.Object)
kotlinx.coroutines.EventLoop: boolean isUnconfinedQueueEmpty()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
io.flutter.embedding.engine.dart.DartMessenger: void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long)
io.flutter.plugin.platform.PlatformViewsController: boolean usesVirtualDisplay(int)
androidx.arch.core.internal.SafeIterableMap$ListIterator: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Closed getClosedForSend()
sq.flutter.tflite.TflitePlugin: java.util.List access$200(sq.flutter.tflite.TflitePlugin,int,float)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
io.flutter.plugin.editing.TextInputPlugin$2: TextInputPlugin$2(io.flutter.plugin.editing.TextInputPlugin,boolean,double[],double[])
io.flutter.plugins.pathprovider.Messages: java.util.Map wrapError(java.lang.Throwable)
androidx.exifinterface.media.ExifInterface: void removeAttribute(java.lang.String)
io.flutter.embedding.android.FlutterView: void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView)
androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
androidx.core.content.FileProvider: int modeToMode(java.lang.String)
io.flutter.embedding.android.FlutterActivity$1: FlutterActivity$1(io.flutter.embedding.android.FlutterActivity)
kotlinx.coroutines.channels.Closed: java.lang.Throwable getSendException()
kotlinx.coroutines.IncompleteStateBox: IncompleteStateBox(kotlinx.coroutines.Incomplete)
io.flutter.plugin.common.BinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
kotlinx.coroutines.ThreadLocalEventLoop: ThreadLocalEventLoop()
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceCreated(android.view.SurfaceHolder)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean has(java.lang.Class)
kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()
kotlinx.coroutines.AbstractCoroutine: void onCancelled(java.lang.Throwable,boolean)
kotlin.ranges.IntProgression: boolean isEmpty()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
androidx.window.embedding.MatcherUtils: MatcherUtils()
kotlin.jvm.internal.PackageReference: java.lang.Class getJClass()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
kotlinx.coroutines.Empty: Empty(boolean)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: ThreadContextKt$updateState$1()
org.tensorflow.lite.InterpreterApi$Options: boolean isCancellable()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
sq.flutter.tflite.TflitePlugin: void detectObjectOnBinary(java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6500(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.tracing.TraceApi29Impl: void endAsyncSection(java.lang.String,int)
androidx.versionedparcelable.ParcelImpl$1: ParcelImpl$1()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onDetachedFromActivityForConfigChanges()
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String toString()
org.tensorflow.lite.NativeInterpreterWrapper: void run(long,long)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader)
kotlinx.coroutines.JobSupport: void addSuppressedExceptions(java.lang.Throwable,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.window.core.Bounds: boolean isZero()
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState createFromParcel(android.os.Parcel)
io.flutter.embedding.android.FlutterActivity: boolean shouldDispatchAppLifecycleState()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void retrieveLostImage(io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineResumed(kotlin.coroutines.Continuation)
kotlin.coroutines.AbstractCoroutineContextKey: AbstractCoroutineContextKey(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5102(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
androidx.exifinterface.media.ExifInterface$1: int readAt(long,byte[],int,int)
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.CoroutineDispatcher getIO()
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.window.embedding.SplitInfo: int hashCode()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
org.tensorflow.lite.NativeInterpreterWrapper: org.tensorflow.lite.TensorImpl getInputTensor(int)
kotlinx.coroutines.CommonPool: java.lang.String toString()
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$500(io.flutter.embedding.android.FlutterTextureView)
kotlin.jvm.internal.TypeIntrinsics: java.lang.ClassCastException throwCce(java.lang.ClassCastException)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onNewIntent(android.content.Intent)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
io.flutter.embedding.android.FlutterActivity: void onSaveInstanceState(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])
kotlinx.coroutines.ChildHandleNode: java.lang.Object invoke(java.lang.Object)
sq.flutter.tflite.TflitePlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.tensorflow.lite.InterpreterImpl: void run(java.lang.Object,java.lang.Object)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterView: void detachFromFlutterEngine()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[],int,int)
kotlinx.coroutines.InactiveNodeList: boolean isActive()
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context)
androidx.exifinterface.media.ExifInterface$1: long getSize()
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
io.flutter.plugin.platform.PlatformViewsController: void removeOverlaySurfaces()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.lang.Object getLifecycle()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel)
kotlinx.coroutines.JobSupport: java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: SettingsChannel$PlatformBrightness(java.lang.String,int,java.lang.String)
kotlin.Result$Failure: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(java.lang.Object[],java.lang.Object,int,int)
androidx.window.R$id: R$id()
kotlinx.coroutines.JobSupport: boolean cancelParent(java.lang.Throwable)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: DeferredComponentChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector build()
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion()
kotlinx.coroutines.CompletionHandlerException: CompletionHandlerException(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.AbstractCoroutine: void onCompleted(java.lang.Object)
kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()
kotlin.jvm.internal.FunctionReference: boolean isInfix()
io.flutter.embedding.android.FlutterView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList getList()
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo()
io.flutter.plugins.imagepicker.ImagePickerPlugin: io.flutter.plugins.imagepicker.ImagePickerDelegate constructDelegate(android.app.Activity)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: FlutterActivityAndFragmentDelegate$2(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,io.flutter.embedding.android.FlutterView)
io.flutter.plugin.editing.ListenableEditingState: int getSelectionEnd()
kotlinx.coroutines.channels.AbstractChannel: void access$removeReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayChanged(int)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo)
sq.flutter.tflite.TflitePlugin$RunSegmentationOnImage: TflitePlugin$RunSegmentationOnImage(sq.flutter.tflite.TflitePlugin,java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: LifecycleRegistry$ObserverWithState(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)
io.flutter.embedding.android.FlutterView: void onDetachedFromWindow()
androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void notImplemented()
androidx.exifinterface.media.ExifInterface$Rational: ExifInterface$Rational(long,long)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.collection.ArrayMap$1: void colPut(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
kotlinx.coroutines.InvokeOnCompletion: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView: android.os.Parcelable onSaveInstanceState()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1)
io.flutter.util.ViewUtils: boolean childHasFocus(android.view.View)
kotlinx.coroutines.internal.DispatchedContinuation: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.internal.LockFreeTaskQueue: void close()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate access$1400(io.flutter.plugin.platform.PlatformViewsController)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
io.flutter.plugins.imagepicker.ImagePickerDelegate$4: ImagePickerDelegate$4(io.flutter.plugins.imagepicker.ImagePickerDelegate)
kotlinx.coroutines.JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
io.flutter.util.PathUtils: java.lang.String getFilesDir(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase)
kotlinx.coroutines.CancellableContinuationImpl: void dispatchResume(int)
kotlin.collections.SetsKt__SetsKt: java.util.Set optimizeReadOnlySet(java.util.Set)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String toString()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int position()
kotlinx.coroutines.JobSupport$Finishing: void setRootCause(java.lang.Throwable)
io.flutter.plugins.imagepicker.ImagePickerDelegate: boolean needRequestCameraPermission()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)
org.tensorflow.lite.NativeInterpreterWrapper: long createModelWithBuffer(java.nio.ByteBuffer,long)
kotlinx.coroutines.JobImpl: boolean getOnCancelComplete$kotlinx_coroutines_core()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findAnyTask(boolean)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateTail(long,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.exifinterface.media.ExifInterface$ExifTag: ExifInterface$ExifTag(java.lang.String,int,int)
io.flutter.embedding.engine.FlutterJNI$Factory: FlutterJNI$Factory()
kotlinx.coroutines.scheduling.NanoTimeSource: long nanoTime()
io.flutter.Log: void w(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStart()
io.flutter.plugin.platform.PlatformViewsController: PlatformViewsController()
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()
androidx.tracing.Trace: void beginAsyncSection(java.lang.String,int)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element)
androidx.lifecycle.DefaultLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.app.Activity getAppComponent()
io.flutter.plugin.common.MethodChannel: java.lang.String access$100(io.flutter.plugin.common.MethodChannel)
kotlin.text.StringsKt__IndentKt: int indentWidth$StringsKt__IndentKt(java.lang.String)
kotlin.text.CharsKt__CharJVMKt: boolean isWhitespace(char)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean isArtificial(java.lang.StackTraceElement)
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith(java.lang.Object[],java.util.Comparator)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel)
androidx.core.content.FileProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
io.flutter.embedding.android.KeyEmbedderResponder: void synchronizeTogglingKey(io.flutter.embedding.android.KeyboardMap$TogglingGoal,boolean,long,android.view.KeyEvent)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: TextInputChannel$1(io.flutter.embedding.engine.systemchannels.TextInputChannel)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
sq.flutter.tflite.TflitePlugin$RunPix2PixOnBinary: void runTflite()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void skipFully(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getWriteMethod(java.lang.Class)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngine get(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
org.tensorflow.lite.NativeInterpreterWrapper: void init(long,long,org.tensorflow.lite.InterpreterImpl$Options)
androidx.lifecycle.Lifecycle: Lifecycle()
kotlinx.coroutines.scheduling.LimitingDispatcher: void execute(java.lang.Runnable)
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlin.text.CharsKt__CharJVMKt: int checkRadix(int)
androidx.tracing.TraceApi29Impl: void beginAsyncSection(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel: PlatformChannel(io.flutter.embedding.engine.dart.DartExecutor)
kotlinx.coroutines.EventLoopImplBase: void resetAll()
io.flutter.plugins.imagepicker.ImageResizer: java.io.File createFile(java.io.File,java.lang.String)
kotlinx.coroutines.YieldContext: YieldContext()
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder)
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread getThread()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: void completeResumeReceive(java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean)
kotlinx.coroutines.InactiveNodeList: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
org.tensorflow.lite.TensorImpl: int dtype(long)
kotlinx.coroutines.CancelledContinuation: boolean makeResumed()
androidx.core.view.WindowInsetsControllerCompat$Impl20: WindowInsetsControllerCompat$Impl20(android.view.Window,android.view.View)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice[] values()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel()
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker getInstance()
kotlin.collections.EmptyMap: java.lang.Void remove(java.lang.Object)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void close()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.activity.ComponentActivity$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.NodeList: java.lang.String toString()
kotlin.collections.EmptyMap: void putAll(java.util.Map)
io.flutter.plugin.common.JSONUtil: java.lang.Object wrap(java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: void init()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3702(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean getANDROID_DETECTED()
io.flutter.plugin.platform.PlatformPlugin: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void onTrimMemory(int)
kotlin.collections.EmptySet: boolean equals(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: FlutterRenderer$SurfaceTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long,android.graphics.SurfaceTexture)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3400(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.DispatchedTask: void run()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.Job$Key: Job$Key()
org.tensorflow.lite.NativeInterpreterWrapper: boolean allocateTensorsIfNeeded()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.collection.MapCollections$ArrayIterator: boolean hasNext()
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation)
androidx.lifecycle.DefaultLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void success(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin$1: void hide()
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.flutter.embedding.android.FlutterTextureView$1: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
kotlinx.coroutines.scheduling.TaskImpl: TaskImpl(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.Object invoke(java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerDelegate: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
kotlinx.coroutines.JobSupport: void initParentJob(kotlinx.coroutines.Job)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: OnUndeliveredElementKt$bindCancellationFun$1(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.scheduling.NonBlockingContext: NonBlockingContext()
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: TflitePlugin$RunSSDMobileNet(sq.flutter.tflite.TflitePlugin,java.util.HashMap,java.nio.ByteBuffer,int,float,io.flutter.plugin.common.MethodChannel$Result)
kotlin.collections.EmptyList: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.util.Set)
io.flutter.embedding.engine.dart.DartExecutor: void onDetachedFromJNI()
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
kotlin.collections.EmptySet: int getSize()
kotlinx.coroutines.AbstractCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: kotlin.jvm.functions.Function1 createConstructor(java.lang.reflect.Constructor)
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl[] newArray(int)
kotlinx.coroutines.CoroutineId: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: ModuleNameRetriever()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List getStringAttributesFromBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer[])
kotlinx.coroutines.channels.ArrayChannel: kotlinx.coroutines.internal.Symbol updateBufferSize(int)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.CancellableContinuationImpl: boolean trySuspend()
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
io.flutter.embedding.engine.systemchannels.PlatformChannel: void systemChromeChanged(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiNoLongerDisplayed()
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: ThreadContextKt$findOne$1()
io.flutter.plugin.common.JSONMethodCodec: JSONMethodCodec()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: void onGlobalFocusChanged(android.view.View,android.view.View)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
androidx.arch.core.internal.SafeIterableMap: int hashCode()
androidx.arch.core.executor.DefaultTaskExecutor: DefaultTaskExecutor()
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
io.flutter.view.VsyncWaiter$FrameCallback: void doFrame(long)
androidx.exifinterface.media.ExifInterface: void parseTiffHeaders(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void delayFirstAndroidViewDraw(io.flutter.embedding.android.FlutterView)
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
kotlinx.coroutines.JobSupport: boolean getHandlesException$kotlinx_coroutines_core()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
sq.flutter.tflite.TflitePlugin: void detectObjectOnImage(java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: StandardMessageCodec$ExposedByteArrayOutputStream()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.TextInputPlugin: void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.flutter.plugins.imagepicker.ImagePickerDelegate$2$1: void onScanCompleted(java.lang.String,android.net.Uri)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object perform(java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
kotlin.jvm.internal.PackageReference: boolean equals(java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList getList()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingState(int,java.lang.String,int,int,int,int)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: MethodChannel$IncomingMethodCallHandler$1(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity getActivity()
kotlinx.coroutines.channels.Send: void undeliveredElement()
androidx.window.core.Bounds: int getBottom()
androidx.lifecycle.LifecycleRegistry: void popParentState()
kotlin.jvm.internal.CallableReference: boolean isSuspend()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createSRational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder)
io.flutter.util.TraceSection: void end()
androidx.lifecycle.ClassesInfoCache$MethodReference: int hashCode()
io.flutter.embedding.android.FlutterActivity: boolean shouldRestoreAndSaveState()
kotlinx.coroutines.CancellableContinuationImpl: void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable)
io.flutter.plugins.pathprovider.PathProviderPlugin: void setup(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: ImagePickerPlugin$MethodResultWrapper$2(io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper,java.lang.String,java.lang.String,java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
io.flutter.embedding.android.FlutterImageView: void logW(java.lang.String,java.lang.Object[])
kotlin.collections.EmptyMap: java.lang.Object remove(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: boolean checkInputConnectionProxy(android.view.View)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: boolean isCalledFromAlertDialog()
io.flutter.embedding.android.FlutterView: boolean isAttachedToFlutterEngine()
io.flutter.embedding.android.FlutterView$4: FlutterView$4(io.flutter.embedding.android.FlutterView)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task trySteal(boolean)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.plugins.imagepicker.ImagePickerDelegate$1: ImagePickerDelegate$1(android.app.Activity)
androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.Throwable invoke(java.lang.Throwable)
io.flutter.plugin.platform.PlatformViewsController: float getDisplayDensity()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent)
kotlin.random.Random$Default: Random$Default(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.lang.String toString()
io.flutter.plugin.platform.PlatformPlugin$1: void setPreferredOrientations(int)
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation()
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task)
org.tensorflow.lite.InterpreterApi$Options: org.tensorflow.lite.InterpreterApi$Options addDelegate(org.tensorflow.lite.Delegate)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.collection.MapCollections$ArrayIterator: MapCollections$ArrayIterator(androidx.collection.MapCollections,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: PlatformViewsChannel$PlatformViewResizeRequest(int,double,double)
androidx.collection.MapCollections$MapIterator: java.lang.Object getKey()
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
org.tensorflow.lite.NativeInterpreterWrapper: java.lang.String[] getSignatureKeys(long)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String readString()
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void saveStateBeforeResult()
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI,io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.Object invoke(java.lang.Object)
androidx.exifinterface.media.ExifInterface: boolean isWebpFormat(byte[])
androidx.collection.MapCollections$EntrySet: boolean add(java.lang.Object)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
kotlin.random.jdk8.PlatformThreadLocalRandom: PlatformThreadLocalRandom()
sq.flutter.tflite.TflitePlugin: byte[] fetchArgmax(java.nio.ByteBuffer,java.util.List,java.lang.String)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getCancellationException()
io.flutter.plugin.platform.PlatformPlugin: void destroy()
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object removeFirstOrNull()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4800(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.embedding.android.FlutterActivity: void switchLaunchThemeForNormalTheme()
io.flutter.view.AccessibilityBridge$StringAttributeType: AccessibilityBridge$StringAttributeType(java.lang.String,int)
sq.flutter.tflite.TflitePlugin: void close()
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1)
io.flutter.util.TraceSection: void endAsyncSection(java.lang.String,int)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
io.flutter.plugin.platform.PlatformPlugin: void access$800(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.plugin.editing.TextInputPlugin: void access$200(io.flutter.plugin.editing.TextInputPlugin)
androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toMutableList(kotlin.sequences.Sequence)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void dispose()
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
kotlin.collections.EmptySet: boolean retainAll(java.util.Collection)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: boolean isBitSet(long,int)
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1(java.util.Iterator)
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,int)
io.flutter.embedding.android.FlutterActivity: void configureStatusBarForFullscreenFlutterExperience()
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply)
io.flutter.plugin.platform.PlatformViewWrapper$2: void onTrimMemory(int)
kotlinx.coroutines.CommonPool: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode()
sq.flutter.tflite.TflitePlugin$RunYOLO$1: int compare(java.util.Map,java.util.Map)
kotlinx.coroutines.channels.AbstractChannel$Itr: AbstractChannel$Itr(kotlinx.coroutines.channels.AbstractChannel)
androidx.window.layout.WindowMetrics: int hashCode()
kotlinx.coroutines.JobSupport: java.lang.String cancellationExceptionMessage()
androidx.window.embedding.SplitController: boolean isSplitSupported()
org.tensorflow.lite.NativeInterpreterWrapper: void initDelegatesWithInterpreterFactory()
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
org.tensorflow.lite.InterpreterImpl: org.tensorflow.lite.Tensor getOutputTensor(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.collection.MapCollections$EntrySet: MapCollections$EntrySet(androidx.collection.MapCollections)
io.flutter.embedding.android.KeyData: java.nio.ByteBuffer toBytes()
kotlinx.coroutines.InvokeOnCancelling: InvokeOnCancelling(kotlin.jvm.functions.Function1)
kotlinx.coroutines.DispatchedCoroutine: void afterResume(java.lang.Object)
org.tensorflow.lite.NativeInterpreterWrapper: int getOutputTensorCount()
kotlinx.coroutines.EventLoopImplBase: boolean shouldUnpark(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
sq.flutter.tflite.TflitePlugin: org.tensorflow.lite.Interpreter access$100(sq.flutter.tflite.TflitePlugin)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
org.tensorflow.lite.DataType: int byteSize()
androidx.window.embedding.ActivityStack: int hashCode()
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.String toString()
androidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2(java.lang.reflect.Constructor)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationEnd(android.animation.Animator)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parseFile(java.io.BufferedReader)
io.flutter.plugin.common.BasicMessageChannel: void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: void disconnectSurfaceFromRenderer()
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
kotlinx.coroutines.internal.ArrayQueue: boolean isEmpty()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
io.flutter.embedding.android.FlutterActivity: void onUserLeaveHint()
androidx.lifecycle.DefaultLifecycleObserver: void onPause(androidx.lifecycle.LifecycleOwner)
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
org.tensorflow.lite.Interpreter: void close()
org.tensorflow.lite.InterpreterImpl: void checkNotClosed()
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
kotlin.collections.EmptySet: EmptySet()
sq.flutter.tflite.TflitePlugin: void access$600(sq.flutter.tflite.TflitePlugin,float[])
androidx.exifinterface.media.ExifInterface: boolean isRafFormat(byte[])
sq.flutter.tflite.TflitePlugin$RunPix2PixOnFrame: TflitePlugin$RunPix2PixOnFrame(sq.flutter.tflite.TflitePlugin,java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.CancellableContinuationImpl: boolean isReusable()
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: MethodChannel$IncomingResultHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$3: ImagePickerPlugin$MethodResultWrapper$3(io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper)
io.flutter.plugin.platform.PlatformViewsController: float access$800(io.flutter.plugin.platform.PlatformViewsController)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set toSet(java.lang.Iterable)
kotlin.coroutines.intrinsics.CoroutineSingletons: CoroutineSingletons(java.lang.String,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix)
io.flutter.plugin.platform.PlatformViewsController$1: PlatformViewsController$1(io.flutter.plugin.platform.PlatformViewsController)
kotlinx.coroutines.channels.AbstractChannel: void onReceiveDequeued()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void sendFlutterKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean,io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
io.flutter.plugins.imagepicker.ImagePickerCache: void saveDimensionWithMethodCall(io.flutter.plugin.common.MethodCall)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: FlutterRenderer$DisplayFeatureType(java.lang.String,int,int)
androidx.window.core.Version: int getMajor()
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder,io.flutter.FlutterInjector$1)
androidx.exifinterface.media.ExifInterface$Rational: ExifInterface$Rational(double)
io.flutter.embedding.engine.plugins.lifecycle.FlutterLifecycleAdapter: androidx.lifecycle.Lifecycle getActivityLifecycle(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
kotlin.collections.EmptyList: int getSize()
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel access$1200(io.flutter.plugin.platform.PlatformPlugin)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()
org.tensorflow.lite.nnapi.NnApiDelegate$Options: int getMaxNumberOfDelegatedPartitions()
kotlin.Result$Failure: Result$Failure(java.lang.Throwable)
kotlinx.coroutines.internal.DispatchedContinuation: void resumeWith(java.lang.Object)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
sq.flutter.tflite.TflitePlugin$2: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.android.HandlerContext: int hashCode()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleMultiImageResult(java.util.ArrayList,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.EventLoopImplBase: void closeQueue()
org.tensorflow.lite.NativeInterpreterWrapper: int getOutputTensorIndex(long,int)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$1: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
kotlinx.coroutines.JobSupportKt: java.lang.Object boxIncomplete(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
io.flutter.embedding.android.FlutterView: java.util.Set access$300(io.flutter.embedding.android.FlutterView)
androidx.collection.MapCollections$MapIterator: java.lang.Object next()
io.flutter.embedding.android.FlutterView: boolean onTextInputKeyEvent(android.view.KeyEvent)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object setValue(java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void takeVideoWithCamera(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context access$000(io.flutter.plugin.localization.LocalizationPlugin)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: SettingsChannel$MessageBuilder(io.flutter.plugin.common.BasicMessageChannel)
kotlin.ResultKt: void throwOnFailure(java.lang.Object)
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewDetachedFromWindow(android.view.View)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: FlutterLoader$Settings()
androidx.exifinterface.media.ExifInterface: android.util.Pair guessDataFormat(java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: StringsKt__IndentKt$getIndentFunction$1()
io.flutter.view.AccessibilityBridge$Action: AccessibilityBridge$Action(java.lang.String,int,int)
kotlin.collections.EmptyIterator: boolean hasPrevious()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void launchMultiPickImageFromGalleryIntent()
io.flutter.embedding.engine.systemchannels.NavigationChannel: NavigationChannel(io.flutter.embedding.engine.dart.DartExecutor)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
io.flutter.FlutterInjector$Builder: FlutterInjector$Builder()
kotlin.collections.CollectionsKt__IterablesKt: int collectionSizeOrDefault(java.lang.Iterable,int)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object constructor-impl(java.lang.Object)
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.android.FlutterView: boolean acquireLatestImageViewFrame()
io.flutter.plugins.imagepicker.FileUtils: void copy(java.io.InputStream,java.io.OutputStream)
kotlinx.coroutines.EventLoopImplPlatform: void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
io.flutter.plugin.platform.PlatformViewWrapper: void setTexture(android.graphics.SurfaceTexture)
kotlin.coroutines.CombinedContext$toString$1: CombinedContext$toString$1()
kotlinx.coroutines.channels.ChannelResult$Failed: ChannelResult$Failed()
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: PlatformChannel$ClipboardContentFormat(java.lang.String,int,java.lang.String)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
kotlinx.coroutines.CoroutineId: java.lang.String toString()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List optimizeReadOnlyList(java.util.List)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void dispatchDraw(android.graphics.Canvas)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void setCameraDevice(io.flutter.plugins.imagepicker.CameraDevice)
io.flutter.embedding.android.FlutterActivity: void onFlutterUiDisplayed()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlin.collections.IntIterator: java.lang.Object next()
androidx.exifinterface.media.ExifInterface: void readExifSegment(byte[],int)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p()
androidx.window.embedding.ActivityFilter: int hashCode()
io.flutter.embedding.android.FlutterView: void resetWillNotDraw(boolean,boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String)
androidx.collection.ArrayMap: void putAll(java.util.Map)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderStorageDirectory()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1)
io.flutter.embedding.engine.FlutterEngine$1: void onPreEngineRestart()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()
kotlinx.coroutines.CoroutineId: java.lang.String updateThreadContext(kotlin.coroutines.CoroutineContext)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode access$6900(io.flutter.view.AccessibilityBridge,int)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()
androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()
io.flutter.plugin.platform.PlatformViewWrapper: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityInternal()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
sq.flutter.tflite.TflitePlugin$RunSegmentationOnImage: void onRunTfliteDone()
org.tensorflow.lite.Interpreter: org.tensorflow.lite.Tensor getInputTensor(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: void run()
io.flutter.embedding.android.FlutterActivity: void release()
kotlinx.coroutines.CancellableContinuationImpl: void releaseClaimedReusableContinuation()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $values()
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.renderer.FlutterRenderer: void startRenderingToSurface(android.view.Surface,boolean)
androidx.core.view.WindowInsetsControllerCompat$Impl26: WindowInsetsControllerCompat$Impl26(android.view.Window,android.view.View)
androidx.tracing.TraceApi18Impl: void endSection()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
kotlinx.coroutines.JobCancellationException: int hashCode()
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
kotlinx.coroutines.CoroutineDispatcher: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaObjectType(kotlin.reflect.KClass)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
io.flutter.embedding.android.FlutterView$ZeroSides: FlutterView$ZeroSides(java.lang.String,int)
org.tensorflow.lite.NativeInterpreterWrapper: long createCancellationFlag(long)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
sq.flutter.tflite.TflitePlugin: android.graphics.Bitmap feedOutput(java.nio.ByteBuffer,float,float)
kotlinx.coroutines.channels.Receive: kotlinx.coroutines.internal.Symbol getOfferResult()
io.flutter.embedding.engine.dart.PlatformTaskQueue: PlatformTaskQueue()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void setWindowFlag(int)
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformViewRegistryImpl: io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromAppComponent()
kotlin.coroutines.CombinedContext$toString$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollBuffer()
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Throwable tryReleaseClaimedContinuation(kotlinx.coroutines.CancellableContinuation)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect)
kotlinx.coroutines.intrinsics.CancellableKt: void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void invokeViewFocused(int)
androidx.collection.SimpleArrayMap: java.lang.Object replace(java.lang.Object,java.lang.Object)
androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferEmpty()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
org.tensorflow.lite.TensorImpl: TensorImpl(long)
io.flutter.plugin.platform.PlatformViewWrapper: void draw(android.graphics.Canvas)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlin.jvm.functions.Function1,java.lang.Throwable)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String toString()
kotlinx.coroutines.JobSupport$Finishing: java.util.List sealLocked(java.lang.Throwable)
org.tensorflow.lite.NativeInterpreterWrapper: boolean resizeInput(long,long,int,int[],boolean)
io.flutter.plugin.common.StandardMessageCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
io.flutter.embedding.android.FlutterView$3: void onFlutterUiNoLongerDisplayed()
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
kotlin.Result: boolean isSuccess-impl(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int)
kotlinx.coroutines.EventLoopImplBase: boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject)
androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)
androidx.exifinterface.media.ExifInterface$ExifAttribute: int size()
androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.InactiveNodeList: InactiveNodeList(kotlinx.coroutines.NodeList)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int access$200(long)
io.flutter.plugin.common.StandardMessageCodec: void writeInt(java.io.ByteArrayOutputStream,int)
io.flutter.plugin.platform.PlatformViewsController$1: void createForPlatformViewLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
kotlin.collections.EmptyList: boolean removeAll(java.util.Collection)
kotlin.jvm.internal.Intrinsics: int compare(int,int)
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object removeFirstOrNull()
kotlinx.coroutines.scheduling.CoroutineScheduler: void close()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasComposing()
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager getWindowManager()
androidx.savedstate.SavedStateRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void setLocalizationMessageHandler(io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: void run()
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf(java.lang.Object[])
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
kotlinx.coroutines.DispatcherExecutor: void execute(java.lang.Runnable)
io.flutter.embedding.android.FlutterActivity: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: void onRunTfliteDone()
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)
io.flutter.plugin.mouse.MouseCursorPlugin$2: MouseCursorPlugin$2(io.flutter.plugin.mouse.MouseCursorPlugin)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)
kotlin.collections.EmptyList: int indexOf(java.lang.Object)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
io.flutter.embedding.engine.renderer.FlutterRenderer: void surfaceChanged(int,int)
kotlinx.coroutines.scheduling.WorkQueue: boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue)
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.internal.SystemPropsKt: int systemProp(java.lang.String,int,int,int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrapImpl(java.lang.Throwable)
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize: PlatformViewsChannel$PlatformViewBufferSize(int,int)
androidx.exifinterface.media.ExifInterface$ExifAttribute: ExifInterface$ExifAttribute(int,int,byte[])
kotlinx.coroutines.CompletedContinuation: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(java.lang.Object[],java.util.Comparator)
androidx.exifinterface.media.ExifInterface: boolean isOrfFormat(byte[])
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.JobImpl: boolean handlesException()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: void success(java.lang.Object)
io.flutter.plugin.localization.LocalizationPlugin: LocalizationPlugin(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel)
kotlin.Result$Failure: int hashCode()
io.flutter.plugin.editing.TextInputPlugin$1: void clearClient()
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.Job getParent()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context getApplicationContext()
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$3: void run()
kotlinx.coroutines.JobSupport: boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object)
androidx.window.embedding.SplitRule: int hashCode()
androidx.versionedparcelable.ParcelImpl: int describeContents()
io.flutter.view.VsyncWaiter: long access$002(io.flutter.view.VsyncWaiter,long)
kotlinx.coroutines.JobSupport: void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode)
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler access$000(io.flutter.embedding.engine.systemchannels.SpellCheckChannel)
kotlinx.coroutines.internal.DispatchedContinuation: boolean postponeCancellation(java.lang.Throwable)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport getJob()
androidx.window.embedding.SplitInfo: java.lang.String toString()
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6700(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context,float,io.flutter.embedding.android.AndroidTouchProcessor)
androidx.window.embedding.SplitRule: float getSplitRatio()
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifier(int)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.CoroutineDispatcher createDefaultDispatcher()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4500(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: SafeIterableMap$DescendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
io.flutter.plugin.common.StringCodec: StringCodec()
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationRepeat(android.animation.Animator)
kotlinx.coroutines.DefaultExecutor: boolean isShutdownRequested()
androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable)
io.flutter.plugin.platform.PlatformViewWrapper: PlatformViewWrapper(android.content.Context,io.flutter.view.TextureRegistry$SurfaceTextureEntry)
androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.String toString()
io.flutter.embedding.engine.renderer.FlutterRenderer: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.embedding.android.FlutterActivity: boolean stillAttachedForEvent(java.lang.String)
androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: ExifInterface$SeekableByteOrderedDataInputStream(byte[])
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
kotlinx.coroutines.UndispatchedMarker: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.AbstractSendChannel: AbstractSendChannel(kotlin.jvm.functions.Function1)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void access$100(io.flutter.plugins.imagepicker.ImagePickerDelegate,java.lang.String)
kotlinx.coroutines.CoroutineContextKt: java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext)
kotlin.collections.EmptyMap: java.util.Set getKeys()
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getApplicationDocumentsPath()
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: AbstractChannel$RemoveReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromePreferredOrientations(int)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.scheduling.WorkQueue: long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue)
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()
androidx.collection.MapCollections$EntrySet: int size()
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext)
androidx.collection.MapCollections$KeySet: boolean add(java.lang.Object)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView access$000(io.flutter.embedding.android.FlutterSplashView)
kotlinx.coroutines.JobNode: kotlinx.coroutines.NodeList getList()
kotlin.random.Random: Random()
kotlin.text.DelimitedRangesSequence$iterator$1: boolean hasNext()
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager getInputMethodManager()
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
kotlinx.coroutines.CompletedContinuation: boolean getCancelled()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix getMatrix()
androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4700(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: void dispatch(java.lang.Runnable)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void success(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void release()
io.flutter.view.AccessibilityBridge: boolean externalViewRequestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode decodeSystemUiMode(java.lang.String)
kotlin.collections.EmptyIterator: java.lang.Object next()
androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
org.tensorflow.lite.TensorImpl: void fillShape(java.lang.Object,int,int[])
io.flutter.plugin.editing.FlutterTextUtils: boolean isVariationSelector(int)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
kotlin.jvm.internal.CallableReference: CallableReference()
io.flutter.embedding.android.FlutterTextureView: void detachFromRenderer()
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointFunctionName()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean,android.net.Uri)
androidx.exifinterface.media.ExifInterface: void handleThumbnailFromStrips(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)
io.flutter.plugin.platform.PlatformViewWrapper: boolean onInterceptTouchEvent(android.view.MotionEvent)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4102(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
io.flutter.embedding.android.FlutterView: boolean access$202(io.flutter.embedding.android.FlutterView,boolean)
io.flutter.view.VsyncWaiter$FrameCallback: long access$302(io.flutter.view.VsyncWaiter$FrameCallback,long)
sq.flutter.tflite.TflitePlugin: byte[] compressPNG(android.graphics.Bitmap)
kotlinx.coroutines.JobSupport: void promoteEmptyToNodeList(kotlinx.coroutines.Empty)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDestroyView()
org.tensorflow.lite.NativeInterpreterWrapper: org.tensorflow.lite.Delegate maybeCreateFlexDelegate(java.util.List)
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.embedding.engine.dart.DartExecutor,boolean)
androidx.collection.MapCollections$ValuesCollection: int size()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: ExifInterface$ByteOrderedDataOutputStream(java.io.OutputStream,java.nio.ByteOrder)
androidx.window.core.Bounds: int getRight()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List load(java.lang.Class,java.lang.ClassLoader)
io.flutter.embedding.android.FlutterImageView: void resizeIfNeeded(int,int)
io.flutter.embedding.android.FlutterView: int guessBottomKeyboardInset(android.view.WindowInsets)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
kotlin.collections.EmptyList: int indexOf(java.lang.Void)
io.flutter.plugin.editing.ListenableEditingState: void clearBatchDeltas()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.exifinterface.media.ExifInterface$1: ExifInterface$1(androidx.exifinterface.media.ExifInterface,androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)
kotlin.ranges.RangesKt___RangesKt: int coerceAtMost(int,int)
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
io.flutter.plugin.editing.ListenableEditingState: void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
io.flutter.plugins.imagepicker.ImagePickerCache: java.lang.String retrievePendingCameraMediaUriPath()
androidx.window.core.Version: int getMinor()
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.collection.MapCollections$EntrySet: int hashCode()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: PlatformChannel$Brightness(java.lang.String,int,java.lang.String)
io.flutter.embedding.android.RenderMode: RenderMode(java.lang.String,int)
kotlinx.coroutines.intrinsics.CancellableKt: void access$dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)
io.flutter.plugins.pathprovider.PathProviderPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlin.internal.jdk7.JDK7PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
kotlin.coroutines.EmptyCoroutineContext: EmptyCoroutineContext()
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
androidx.window.core.Bounds: int getHeight()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
kotlinx.coroutines.scheduling.Task: Task()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$102(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
kotlinx.coroutines.JobCancellationException: java.lang.String toString()
io.flutter.embedding.android.KeyboardMap$PressingGoal: KeyboardMap$PressingGoal(int,io.flutter.embedding.android.KeyboardMap$KeyPair[])
io.flutter.embedding.engine.renderer.FlutterRenderer: void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
androidx.collection.MapCollections$MapIterator: void remove()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
sq.flutter.tflite.TflitePlugin$RunSegmentationOnBinary: void onRunTfliteDone()
io.flutter.embedding.android.KeyEmbedderResponder: void synthesizeEvent(boolean,java.lang.Long,java.lang.Long,long)
androidx.window.layout.EmptyDecorator: EmptyDecorator()
androidx.arch.core.internal.SafeIterableMap$Entry: SafeIterableMap$Entry(java.lang.Object,java.lang.Object)
kotlin.Result$Failure: java.lang.String toString()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.flutter.embedding.android.FlutterActivity: void detachFromFlutterEngine()
io.flutter.embedding.android.FlutterSplashView$1: FlutterSplashView$1(io.flutter.embedding.android.FlutterSplashView)
kotlinx.coroutines.scheduling.TaskImpl: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
sq.flutter.tflite.TflitePlugin$RunPoseNet: void runTflite()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
kotlin.ranges.IntProgressionIterator: boolean hasNext()
io.flutter.plugin.editing.SpellCheckPlugin: SpellCheckPlugin(android.view.textservice.TextServicesManager,io.flutter.embedding.engine.systemchannels.SpellCheckChannel)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin access$1800(io.flutter.plugin.platform.PlatformViewsController)
androidx.window.R$attr: R$attr()
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: PlatformChannel$HapticFeedbackType(java.lang.String,int,java.lang.String)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
kotlin.jvm.internal.Lambda: int getArity()
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: PlatformChannel$1(io.flutter.embedding.engine.systemchannels.PlatformChannel)
androidx.collection.MapCollections$KeySet: boolean containsAll(java.util.Collection)
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
kotlinx.coroutines.JobNode: java.lang.String toString()
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor getOrCreatePoolSync()
androidx.window.core.Bounds: android.graphics.Rect toRect()
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.collection.MapCollections$MapIterator: MapCollections$MapIterator(androidx.collection.MapCollections)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRestoreInstanceState(android.os.Bundle)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5002(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
io.flutter.embedding.android.KeyEmbedderResponder: KeyEmbedderResponder(io.flutter.plugin.common.BinaryMessenger)
io.flutter.view.AccessibilityBridge: void sendWindowContentChangeEvent(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object getNextParkedWorker()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List)
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object)
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$6100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: VirtualDisplayController$OneTimeOnDrawListener$1(io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener)
androidx.exifinterface.media.ExifInterface: boolean isSeekableFD(java.io.FileDescriptor)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityDisabled()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
kotlin.text.DelimitedRangesSequence: int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence)
androidx.collection.MapCollections$ValuesCollection: void clear()
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerDeviceTypeForToolType(int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
kotlinx.coroutines.JobSupport: void cancel(java.util.concurrent.CancellationException)
io.flutter.embedding.android.FlutterActivity: void onResume()
io.flutter.plugin.platform.PlatformViewsController: boolean access$1200(int)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
org.tensorflow.lite.InterpreterApi$Options: org.tensorflow.lite.InterpreterApi$Options setNumThreads(int)
androidx.core.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])
androidx.arch.core.executor.DefaultTaskExecutor$1: DefaultTaskExecutor$1(androidx.arch.core.executor.DefaultTaskExecutor)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void finishWithListSuccess(java.util.ArrayList)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.lang.Object initialValue()
io.flutter.embedding.android.FlutterView$2: boolean deliverSelfNotifications()
io.flutter.embedding.android.TransparencyMode: TransparencyMode(java.lang.String,int)
io.flutter.embedding.android.FlutterTextureView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
kotlinx.coroutines.AbstractCoroutine: void resumeWith(java.lang.Object)
io.flutter.plugin.editing.ListenableEditingState$1: ListenableEditingState$1(io.flutter.plugin.editing.ListenableEditingState,android.view.View,boolean,android.text.Editable)
io.flutter.plugin.localization.LocalizationPlugin$1: java.lang.String getStringResource(java.lang.String,java.lang.String)
kotlinx.coroutines.JobSupport: void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: VirtualDisplayController$OneTimeOnDrawListener(android.view.View,java.lang.Runnable)
io.flutter.plugin.editing.TextInputPlugin: void access$400(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityPaused(android.app.Activity)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler)
androidx.window.embedding.SplitController: SplitController()
io.flutter.plugin.platform.PlatformPlugin$1: void restoreSystemUiOverlays()
kotlinx.coroutines.JobSupport: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: FlutterRenderer$DisplayFeature(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService,io.flutter.FlutterInjector$1)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
io.flutter.embedding.android.FlutterSplashView$2: FlutterSplashView$2(io.flutter.embedding.android.FlutterSplashView)
kotlinx.coroutines.CoroutineName: int hashCode()
kotlinx.coroutines.channels.ClosedSendChannelException: ClosedSendChannelException(java.lang.String)
io.flutter.view.AccessibilityBridge$4: void onTouchExplorationStateChanged(boolean)
io.flutter.view.AccessibilityBridge: int access$1276(io.flutter.view.AccessibilityBridge,int)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
kotlinx.coroutines.ChildContinuation: java.lang.Object invoke(java.lang.Object)
androidx.exifinterface.media.ExifInterface: void getHeifAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long markFrozen()
kotlinx.coroutines.channels.Closed: java.lang.Object getPollResult()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: PlatformViewsChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)
kotlin.collections.EmptyList: java.util.List subList(int,int)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder,io.flutter.embedding.android.KeyboardManager$1)
io.flutter.view.AccessibilityBridge: int access$7300()
kotlin.random.Random$Default: Random$Default()
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getReadMethod(java.lang.String)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.util.TraceSection: java.lang.String cropSectionName(java.lang.String)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.collection.MapCollections$KeySet: boolean isEmpty()
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String toString()
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation)
io.flutter.plugin.editing.TextInputPlugin: boolean needsAutofill()
androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightStatusBars(boolean)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemOverlays(java.util.List)
io.flutter.plugins.imagepicker.ImagePickerDelegate$2: android.net.Uri resolveFileProviderUriForFile(java.lang.String,java.io.File)
org.tensorflow.lite.nnapi.NnApiDelegate$Options: java.lang.String getAcceleratorName()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.IntProgression: int getFirst()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingRegion(int,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task pollGlobalQueues()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView)
sq.flutter.tflite.TflitePlugin: void runPoseNetOnBinary(java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
org.tensorflow.lite.nnapi.NnApiDelegateImpl: NnApiDelegateImpl(org.tensorflow.lite.nnapi.NnApiDelegate$Options)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onResume()
kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)
kotlin.coroutines.CombinedContext: boolean containsAll(kotlin.coroutines.CombinedContext)
io.flutter.plugin.platform.PlatformView: void onInputConnectionLocked()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute(io.flutter.view.AccessibilityBridge$1)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer()
kotlinx.coroutines.channels.AbstractChannel: boolean enqueueReceive(kotlinx.coroutines.channels.Receive)
kotlin.coroutines.CombinedContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
sq.flutter.tflite.TflitePlugin$RunSegmentationOnImage: void runTflite()
kotlin.collections.CollectionsKt__CollectionsKt: void throwIndexOverflow()
io.flutter.embedding.android.FlutterView: void addFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull()
kotlinx.coroutines.InvokeOnCancel: InvokeOnCancel(kotlin.jvm.functions.Function1)
io.flutter.embedding.android.KeyboardManager: boolean handleEvent(android.view.KeyEvent)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.util.List)
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean addLast(java.lang.Object)
sq.flutter.tflite.TflitePlugin: int access$402(sq.flutter.tflite.TflitePlugin,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2102(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: AbstractSendChannel$SendBuffered(java.lang.Object)
kotlinx.coroutines.JobSupport: void afterCompletion(java.lang.Object)
androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()
kotlinx.coroutines.EventLoopImplBase: boolean enqueueImpl(java.lang.Runnable)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()
kotlin.random.AbstractPlatformRandom: int nextInt()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
kotlinx.coroutines.CoroutineExceptionHandler$Key: CoroutineExceptionHandler$Key()
io.flutter.embedding.android.FlutterImageView: void onDraw(android.graphics.Canvas)
androidx.window.core.Bounds: java.lang.String toString()
io.flutter.plugins.imagepicker.ImagePickerDelegate$2: ImagePickerDelegate$2(android.app.Activity)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException)
androidx.collection.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion()
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onAttach(android.content.Context)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: SafeIterableMap$IteratorWithAdditions(androidx.arch.core.internal.SafeIterableMap)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadAction(io.flutter.view.AccessibilityBridge$Action)
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int)
kotlin.text.StringsKt__StringsKt: kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
io.flutter.plugin.common.StandardMessageCodec: void writeChar(java.io.ByteArrayOutputStream,int)
io.flutter.embedding.android.FlutterActivity: void registerOnBackInvokedCallback()
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.collection.MapCollections$ValuesCollection: boolean removeAll(java.util.Collection)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,char,java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
io.flutter.embedding.engine.FlutterEngine: void destroy()
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void access$600(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
kotlin.jvm.internal.CallableReference: boolean isFinal()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int getIndexInArray()
kotlinx.coroutines.flow.internal.SafeCollector: SafeCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithTag(int,java.util.HashMap)
io.flutter.embedding.android.FlutterImageView: void updateCurrentBitmap()
kotlin.ranges.IntProgression: int hashCode()
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.StackTraceElement getStackTraceElement()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void error(java.lang.String,java.lang.String,java.lang.Object)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
org.tensorflow.lite.gpu.GpuDelegate: GpuDelegate()
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.String)
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
org.tensorflow.lite.TensorImpl: void throwIfTypeIsIncompatible(java.lang.Object)
org.tensorflow.lite.gpu.GpuDelegateNative: void nativeDoNothing()
org.tensorflow.lite.nnapi.NnApiDelegate$Options: long getNnApiSupportLibraryHandle()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
kotlin.random.Random$Default: int nextInt()
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long readLong()
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray()
kotlin.collections.ArraysUtilJVM: java.util.List asList(java.lang.Object[])
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSplashView: void access$200(io.flutter.embedding.android.FlutterSplashView)
sq.flutter.tflite.TflitePlugin$1: int compare(java.util.Map,java.util.Map)
org.tensorflow.lite.nnapi.NnApiDelegate: void checkNotClosed()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object hasNextSuspend(kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge: boolean doesLayoutInDisplayCutoutModeRequireLeftInset()
sq.flutter.tflite.TflitePlugin: int[] getStridedIndexNearPoint(float,float,int,int,int)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: android.view.View getPlatformViewById(int)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleVerticalMovement(boolean,boolean)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.platform.PlatformPlugin: void popSystemNavigator()
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: void reply(java.nio.ByteBuffer)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCount(java.lang.Class,int)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
io.flutter.plugins.imagepicker.ExifDataCopier: void copyExif(java.lang.String,java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
org.tensorflow.lite.TensorImpl: boolean isByteBuffer(java.lang.Object)
org.tensorflow.lite.nnapi.NnApiDelegate: void close()
androidx.exifinterface.media.ExifInterface: void getRawAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)
androidx.collection.SimpleArrayMap: void clear()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void pushRoute(java.lang.String)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: void transformPoint(float[],float[],float[])
org.tensorflow.lite.NativeInterpreterWrapper: long createInterpreter(long,long,int,boolean,java.util.List)
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getSEALED$p()
io.flutter.embedding.android.FlutterActivity: android.graphics.drawable.Drawable getSplashScreenFromManifest()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object getCONDITION_FALSE()
kotlinx.coroutines.flow.internal.NoOpContinuation: void resumeWith(java.lang.Object)
androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: ExifInterface$ByteOrderedDataInputStream(byte[])
io.flutter.view.AccessibilityBridge$SemanticsNode: AccessibilityBridge$SemanticsNode(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$500(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()
io.flutter.embedding.android.KeyboardManager$CharacterCombiner: java.lang.Character applyCombiningCharacterToBaseCharacter(int)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.flutter.embedding.android.KeyEmbedderResponder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithDeltas(int,java.util.ArrayList)
kotlinx.coroutines.flow.SafeFlow: SafeFlow(kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map access$100(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor getExecutor()
sq.flutter.tflite.TflitePlugin$TfliteTask: java.lang.Object doInBackground(java.lang.Object[])
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
io.flutter.embedding.engine.loader.FlutterLoader: boolean automaticallyRegisterPlugins()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3700(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromContentProvider()
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler createAsync(android.os.Looper)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void offset(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.VsyncWaiter$1: android.view.Choreographer$FrameCallback obtainFrameCallback(long)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
kotlinx.coroutines.channels.ConflatedChannel: ConflatedChannel(kotlin.jvm.functions.Function1)
androidx.arch.core.executor.ArchTaskExecutor$1: ArchTaskExecutor$1()
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Key getKey()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setNextParkedWorker(java.lang.Object)
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void previous(int)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getApplicationSupportPath()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.String)
io.flutter.view.AccessibilityBridge: void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener)
io.flutter.plugins.imagepicker.ImageResizer: java.io.File resizedImage(android.graphics.Bitmap,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.String)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onMeasure(int,int)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
kotlinx.coroutines.CompletedExceptionally: java.lang.String toString()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean clearMetaKeyStates(int)
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray(java.lang.Object[])
kotlinx.coroutines.CoroutineName: boolean equals(java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()
androidx.collection.MapCollections$MapIterator: java.lang.Object getValue()
sq.flutter.tflite.TflitePlugin$RunModelOnBinary: TflitePlugin$RunModelOnBinary(sq.flutter.tflite.TflitePlugin,java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
sq.flutter.tflite.TflitePlugin: float[] getImageCoords(java.util.Map,int,int,float[][][])
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
androidx.exifinterface.media.ExifInterface: void printAttributes()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.exifinterface.media.ExifInterface: void validateImages()
kotlinx.coroutines.JobSupport: JobSupport(boolean)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: java.lang.Void invoke(java.lang.Throwable)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object)
org.tensorflow.lite.Interpreter: java.lang.String[] getSignatureKeys()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: TextInputChannel$InputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean)
kotlinx.coroutines.JobSupport: java.lang.String nameString$kotlinx_coroutines_core()
io.flutter.embedding.android.FlutterSurfaceView: boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,int)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.exifinterface.media.ExifInterface: void replaceInvalidTags(int,java.lang.String,java.lang.String)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.tensorflow.lite.nnapi.NnApiDelegate: long getNativeHandle()
kotlin.Result: boolean isFailure-impl(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4(java.lang.reflect.Constructor)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView)
kotlinx.coroutines.DispatchedTask: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
io.flutter.embedding.android.KeyEmbedderResponder: void synchronizePressingKey(io.flutter.embedding.android.KeyboardMap$PressingGoal,boolean,long,long,android.view.KeyEvent,java.util.ArrayList)
io.flutter.plugin.editing.SpellCheckPlugin: void performSpellCheck(java.lang.String,java.lang.String)
kotlinx.coroutines.JobSupport$Finishing: JobSupport$Finishing(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable)
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferAlwaysEmpty()
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(kotlin.coroutines.Continuation,java.lang.Object)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
io.flutter.plugins.imagepicker.CameraDevice: CameraDevice(java.lang.String,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
org.tensorflow.lite.InterpreterImpl$Options: InterpreterImpl$Options()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onActivityResult(int,int,android.content.Intent)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)
kotlinx.coroutines.EventLoop: void shutdown()
io.flutter.plugin.platform.PlatformViewWrapper$3: PlatformViewWrapper$3(io.flutter.plugin.platform.PlatformViewWrapper,android.view.View$OnFocusChangeListener)
sq.flutter.tflite.TflitePlugin: android.renderscript.Allocation renderScriptNV21ToRGBA888(android.content.Context,int,int,byte[])
kotlin.collections.EmptySet: boolean addAll(java.util.Collection)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForAction(int)
kotlinx.coroutines.CommonPool: int getParallelism()
sq.flutter.tflite.TflitePlugin: java.lang.String loadModel(java.util.HashMap)
kotlinx.coroutines.scheduling.DefaultScheduler: void close()
io.flutter.plugin.common.StandardMessageCodec: StandardMessageCodec()
androidx.core.graphics.drawable.IconCompat$Api23Impl: java.lang.String getResPackage(java.lang.Object)
org.tensorflow.lite.nnapi.NnApiDelegate$Options: boolean getAllowFp16()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.flutter.embedding.engine.FlutterEngine: void attachToJni()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine access$100(io.flutter.embedding.android.FlutterView)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String toString()
io.flutter.embedding.engine.FlutterEngine$1: FlutterEngine$1(io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getState$kotlinx_coroutines_core()
io.flutter.embedding.android.KeyChannelResponder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
org.tensorflow.lite.InterpreterFactoryImpl: org.tensorflow.lite.nnapi.NnApiDelegate$PrivateInterface createNnApiDelegateImpl(org.tensorflow.lite.nnapi.NnApiDelegate$Options)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getTextFieldHint()
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: io.flutter.plugins.imagepicker.ImagePickerDelegate getDelegate()
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon resolveSystemCursor(java.lang.String)
androidx.exifinterface.media.ExifInterface: byte[] getThumbnailBytes()
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.view.AccessibilityBridge$1: void onTooltip(java.lang.String)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.android.HandlerContext: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.flutter.plugin.editing.TextInputPlugin: void notifyViewExited()
androidx.lifecycle.MethodCallsLogger: MethodCallsLogger()
kotlinx.coroutines.Unconfined: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object hasNext(kotlin.coroutines.Continuation)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)
org.tensorflow.lite.TensorImpl: float quantizationScale(long)
kotlinx.coroutines.channels.Channel$Factory: Channel$Factory()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: ExecutorCoroutineDispatcherImpl(java.util.concurrent.Executor)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: FlutterActivityAndFragmentDelegate$1(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
io.flutter.plugin.platform.PlatformViewsController: android.content.Context access$1100(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float)
androidx.arch.core.executor.ArchTaskExecutor$1: void execute(java.lang.Runnable)
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: LocalizationChannel$1(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
io.flutter.plugin.editing.FlutterTextUtils: boolean isTagSpecChar(int)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void schedule(android.view.View,java.lang.Runnable)
io.flutter.plugin.platform.VirtualDisplayController: int getBufferHeight()
io.flutter.plugins.pathprovider.Messages$PathProviderApiCodec: Messages$PathProviderApiCodec()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.RestorationChannel: void clearData()
io.flutter.plugin.editing.TextInputPlugin: void notifyValueChanged(java.lang.String)
kotlin.internal.jdk8.JDK8PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
io.flutter.plugin.editing.FlutterTextUtils: FlutterTextUtils(io.flutter.embedding.engine.FlutterJNI)
kotlin.text.DelimitedRangesSequence$iterator$1: DelimitedRangesSequence$iterator$1(kotlin.text.DelimitedRangesSequence)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel()
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.AbstractCoroutine: java.lang.String cancellationExceptionMessage()
kotlin.ExceptionsKt__ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
kotlinx.coroutines.channels.ArrayChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
androidx.window.layout.SidecarAdapter: SidecarAdapter()
io.flutter.embedding.android.FlutterView: boolean onGenericMotionEvent(android.view.MotionEvent)
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findTask(boolean)
kotlin.coroutines.AbstractCoroutineContextKey: boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3500(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context)
org.tensorflow.lite.gpu.GpuDelegateNative: void init()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: boolean readBoolean()
kotlin.ranges.IntRange: kotlin.ranges.IntRange access$getEMPTY$cp()
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getContext()
androidx.versionedparcelable.VersionedParcel: java.lang.String readString(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int getVirtualNodeId(long)
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p()
kotlin.random.Random$Default: int nextBits(int)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void setSystemUiFlag(int)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
kotlinx.coroutines.EventLoopImplPlatform: void unpark()
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.view.VsyncWaiter)
androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)
io.flutter.embedding.android.FlutterTextureView: void disconnectSurfaceFromRenderer()
io.flutter.embedding.android.KeyboardMap$2: KeyboardMap$2()
kotlinx.coroutines.DefaultExecutor: java.lang.Thread getThread()
sq.flutter.tflite.TflitePlugin$RunPix2PixOnFrame: void runTflite()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: AccessibilityChannel(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI)
com.piddocke.rashinator.MainActivity: MainActivity()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
sq.flutter.tflite.TflitePlugin$RunModelOnBinary: void onRunTfliteDone()
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)
kotlinx.coroutines.DispatchedTaskKt: boolean isCancellableMode(int)
kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()
io.flutter.embedding.android.FlutterActivity: boolean shouldHandleDeeplinking()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()
kotlinx.coroutines.CommonPool: java.util.concurrent.ExecutorService createPool()
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractChannel)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void chooseImageFromGallery(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.collection.MapCollections$EntrySet: boolean retainAll(java.util.Collection)
sq.flutter.tflite.TflitePlugin: float sigmoid(float)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
androidx.collection.ArrayMap: ArrayMap()
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: FlutterImageView$SurfaceKind(java.lang.String,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object)
kotlin.random.Random: kotlin.random.Random access$getDefaultRandom$cp()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeShort(short)
io.flutter.embedding.android.FlutterActivity: void onDestroy()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.android.KeyChannelResponder: KeyChannelResponder(io.flutter.embedding.engine.systemchannels.KeyEventChannel)
io.flutter.plugin.platform.PlatformPlugin: void access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
kotlinx.coroutines.CancelledContinuation: CancelledContinuation(kotlin.coroutines.Continuation,java.lang.Throwable,boolean)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiNoLongerDisplayed()
io.flutter.plugin.editing.ListenableEditingState: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
sq.flutter.tflite.TflitePlugin$RunModelOnFrame: TflitePlugin$RunModelOnFrame(sq.flutter.tflite.TflitePlugin,java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
sq.flutter.tflite.TflitePlugin: float access$500(sq.flutter.tflite.TflitePlugin,float)
io.flutter.util.TraceSection: void begin(java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
io.flutter.embedding.android.FlutterSurfaceView: void connectSurfaceToRenderer()
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getExternalStoragePaths(io.flutter.plugins.pathprovider.Messages$StorageDirectory)
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith(java.lang.String,java.lang.String,boolean)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: StringsKt__IndentKt$getIndentFunction$2(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: android.app.Activity getActivity()
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.io.File createTemporaryWritableFile(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
io.flutter.plugin.platform.PlatformPlugin: void access$100(io.flutter.plugin.platform.PlatformPlugin,int)
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
androidx.window.embedding.ActivityStack: java.lang.String toString()
io.flutter.plugin.common.StandardMessageCodec: void writeSize(java.io.ByteArrayOutputStream,int)
io.flutter.embedding.android.FlutterActivity: android.view.View createFlutterView()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
io.flutter.plugin.editing.TextEditingDelta: org.json.JSONObject toJSON()
sq.flutter.tflite.TflitePlugin$RunYOLO$1: TflitePlugin$RunYOLO$1(sq.flutter.tflite.TflitePlugin$RunYOLO)
androidx.collection.ArrayMap$1: ArrayMap$1(androidx.collection.ArrayMap)
io.flutter.plugins.imagepicker.ImagePickerUtils: boolean isPermissionPresentInManifest(android.content.Context,java.lang.String)
androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)
sq.flutter.tflite.TflitePlugin$2: TflitePlugin$2(sq.flutter.tflite.TflitePlugin)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.NodeList: NodeList()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
kotlinx.coroutines.channels.Receive: Receive()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: MissingMainCoroutineDispatcher(java.lang.Throwable,java.lang.String)
io.flutter.plugin.editing.FlutterTextUtils: boolean isKeycapBase(int)
kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
kotlinx.coroutines.internal.InlineList: java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.String)
io.flutter.embedding.android.FlutterTextureView: void access$200(io.flutter.embedding.android.FlutterTextureView)
kotlinx.coroutines.ChildHandleNode: ChildHandleNode(kotlinx.coroutines.ChildJob)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int)
kotlinx.coroutines.internal.Removed: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void synchronizeToNativeViewHierarchy(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.VsyncWaiter: long access$000(io.flutter.view.VsyncWaiter)
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object)
kotlinx.coroutines.CompletedContinuation: void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void updateViewLayout(java.lang.Object[])
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
kotlinx.coroutines.internal.SystemPropsKt: boolean systemProp(java.lang.String,boolean)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$1: ImagePickerPlugin$MethodResultWrapper$1(io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper,java.lang.Object)
androidx.collection.MapCollections: java.util.Set getEntrySet()
io.flutter.plugin.mouse.MouseCursorPlugin: MouseCursorPlugin(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.flutter.embedding.android.FlutterSurfaceView: void access$200(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings)
androidx.collection.ArrayMap$1: int colGetSize()
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.StackTraceElement artificialFrame(java.lang.String)
kotlin.jvm.internal.ClassReference: boolean equals(java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String getIsolateServiceId()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
kotlinx.coroutines.CompletedExceptionally: boolean getHandled()
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
androidx.versionedparcelable.VersionedParcelParcel: void writeCharSequence(java.lang.CharSequence)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getTemporaryPath()
io.flutter.plugin.platform.PlatformPlugin$1: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
kotlinx.coroutines.internal.ThreadSafeHeap: void setSize(int)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
kotlin.coroutines.jvm.internal.DebugProbesKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: FlutterActivityAndFragmentDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void chooseMultiImageFromGallery(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.renderer.FlutterRenderer: void stopRenderingToSurface()
org.tensorflow.lite.DataTypeUtils: java.lang.String toStringName(org.tensorflow.lite.DataType)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleVideoResult(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$1: VirtualDisplayController$1(io.flutter.plugin.platform.VirtualDisplayController,android.view.View,java.lang.Runnable)
kotlinx.coroutines.JobSupport$Finishing: java.lang.String toString()
kotlinx.coroutines.scheduling.CoroutineScheduler: void shutdown(long)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void setup(io.flutter.plugin.common.BinaryMessenger,android.app.Application,android.app.Activity,io.flutter.plugin.common.PluginRegistry$Registrar,io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean isFocusable()
io.flutter.plugin.platform.PlatformViewsController: void onEndFrame()
kotlin.collections.EmptyMap: java.util.Set keySet()
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.internal.ThreadState: ThreadState(kotlin.coroutines.CoroutineContext,int)
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String toString()
io.flutter.plugin.platform.PlatformViewsController: void detachAccessibilityBridge()
kotlin.text.CharsKt__CharKt: boolean equals(char,char,boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: FlutterMutatorsStack$FlutterMutatorType(java.lang.String,int)
kotlinx.coroutines.YieldContext$Key: YieldContext$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.String getBufferDebugString()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: SingleViewPresentation$FakeWindowViewGroup(android.content.Context)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key: DownstreamExceptionElement$Key()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: PlatformViewsChannel$PlatformViewCreationRequest(int,java.lang.String,double,double,double,double,int,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode,java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
io.flutter.plugins.imagepicker.ImageResizer: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)
androidx.lifecycle.LifecycleRegistry: boolean isSynced()
io.flutter.plugin.editing.ListenableEditingState: int getSelectionStart()
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: int addFailReason(long)
androidx.exifinterface.media.ExifInterface: void initForFilename(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.lifecycle.FullLifecycleObserverAdapter: FullLifecycleObserverAdapter(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
androidx.collection.MapCollections$KeySet: boolean equals(java.lang.Object)
io.flutter.embedding.android.KeyEmbedderResponder: java.lang.Long getLogicalKey(android.view.KeyEvent)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isSoftwareRenderingEnabled()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleHorizontalMovement(boolean,boolean)
org.tensorflow.lite.NativeInterpreterWrapper: void resizeInput(int,int[],boolean)
kotlinx.coroutines.channels.Closed: java.lang.Throwable getReceiveException()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
kotlin.collections.EmptyList: boolean addAll(int,java.util.Collection)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord)
kotlinx.coroutines.Unconfined: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createSLong(int[],java.nio.ByteOrder)
kotlin.collections.EmptyList: void clear()
io.flutter.embedding.engine.dart.DartMessenger: void invokeHandler(io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: PlatformChannel$SystemUiMode(java.lang.String,int,java.lang.String)
kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.window.R$styleable: R$styleable()
io.flutter.embedding.android.KeyboardManager: void onUnhandled(android.view.KeyEvent)
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setSelection(int,int)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityFeatures(int)
io.flutter.plugin.editing.FlutterTextUtils: boolean isRegionalIndicatorSymbol(int)
kotlin.collections.EmptyList: java.lang.Object remove(int)
kotlin.collections.EmptyList: java.lang.Object get(int)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: android.content.Context context()
io.flutter.plugins.pathprovider.PathProviderPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlinx.coroutines.JobSupport: boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: void destroy()
kotlinx.coroutines.internal.DispatchedContinuation: DispatchedContinuation(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String)
kotlin.text.StringsKt__StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)
org.tensorflow.lite.DataType: DataType(java.lang.String,int,int)
kotlinx.coroutines.scheduling.DefaultScheduler: java.lang.String toString()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: char readChar()
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
io.flutter.view.AccessibilityBridge: boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController: int getBufferWidth()
androidx.exifinterface.media.ExifInterface: void copyWebPChunk(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream,byte[])
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onUserLeaveHint()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: boolean getBoolean(android.os.Bundle,java.lang.String,boolean)
androidx.exifinterface.media.ExifInterface: void getRafAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsDetached()
org.tensorflow.lite.gpu.GpuDelegate: GpuDelegate(org.tensorflow.lite.gpu.GpuDelegateFactory$Options)
io.flutter.view.AccessibilityBridge$1: void onTap(int)
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: DartMessenger$BufferedMessageInfo(java.nio.ByteBuffer,int,long)
io.flutter.embedding.android.FlutterTextureView: void init()
org.tensorflow.lite.RuntimeFlavor: RuntimeFlavor(java.lang.String,int)
kotlinx.coroutines.channels.BufferOverflow: BufferOverflow(java.lang.String,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: void run()
kotlinx.coroutines.internal.ConcurrentKt: boolean removeFutureOnCancel(java.util.concurrent.Executor)
kotlinx.coroutines.internal.SystemPropsKt: java.lang.String systemProp(java.lang.String)
io.flutter.embedding.engine.dart.DartMessenger: void dispatchMessageToQueue(java.lang.String,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int,long)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.plugin.platform.PlatformViewsController$1: void ensureValidAndroidVersion(int)
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
androidx.collection.MapCollections$KeySet: boolean removeAll(java.util.Collection)
kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
androidx.tracing.Trace: void endAsyncSection(java.lang.String,int)
kotlinx.coroutines.ChildContinuation: ChildContinuation(kotlinx.coroutines.CancellableContinuationImpl)
io.flutter.plugin.platform.PlatformViewsController: void onAttachedToJNI()
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map toSingletonMap(java.util.Map)
kotlin.collections.EmptyList: boolean remove(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void executeTask(kotlinx.coroutines.scheduling.Task)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.collection.MapCollections: java.util.Set getKeySet()
androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightNavigationBars(boolean)
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core()
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)
io.flutter.plugin.platform.PlatformPlugin$1: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.WindowInsetsControllerCompat$Impl23: void setAppearanceLightStatusBars(boolean)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.ranges.IntRange: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: int getSize()
org.tensorflow.lite.NativeInterpreterWrapper: void resizeInput(int,int[])
androidx.lifecycle.Lifecycle$State: Lifecycle$State(java.lang.String,int)
androidx.window.core.Bounds: int getLeft()
kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)
io.flutter.embedding.engine.FlutterEngine$1: void onEngineWillDestroy()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean,boolean)
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayAdded(int)
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[],int,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPostResume()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
sq.flutter.tflite.TflitePlugin: java.util.PriorityQueue buildPartWithScoreQueue(float[][][],double,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void commitContent(int,java.util.Map)
androidx.core.graphics.drawable.IconCompat: java.lang.String toString()
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.core.view.WindowInsetsControllerCompat$Impl26: void setAppearanceLightNavigationBars(boolean)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistry getRegistry()
io.flutter.embedding.android.KeyData$Type: long getValue()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: MethodChannel$IncomingMethodCallHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
kotlin.SynchronizedLazyImpl: boolean isInitialized()
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
io.flutter.view.AccessibilityBridge$1: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
sq.flutter.tflite.TflitePlugin$1: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4200(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPause()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String getQueueDebugStateString()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: FlutterMutatorView$1(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView,android.view.View$OnFocusChangeListener,android.view.View)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String fullAssetPathFrom(java.lang.String)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1)
io.flutter.embedding.android.FlutterActivity: void onNewIntent(android.content.Intent)
io.flutter.plugin.platform.PlatformViewsController: void attachToView(io.flutter.embedding.android.FlutterView)
io.flutter.embedding.engine.renderer.FlutterRenderer: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.view.AccessibilityBridge: void sendLatestAccessibilityFlagsToFlutter()
io.flutter.plugin.editing.TextInputPlugin$1: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
kotlin.ranges.IntProgression: boolean equals(java.lang.Object)
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.String)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI)
androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightNavigationBars(boolean)
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
io.flutter.embedding.android.FlutterActivity: void onTrimMemory(int)
kotlin.jvm.internal.PackageReference: int hashCode()
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.flutter.embedding.engine.dart.DartMessenger$Reply: void reply(java.nio.ByteBuffer)
kotlin.ranges.IntProgression$Companion: kotlin.ranges.IntProgression fromClosedRange(int,int,int)
io.flutter.embedding.android.FlutterView: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.plugin.platform.AccessibilityEventsDelegate: AccessibilityEventsDelegate()
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenNeededNow()
io.flutter.embedding.android.KeyboardManager: void destroy()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean finishComposingText()
kotlinx.coroutines.EventLoopImplBase: void schedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
io.flutter.view.AccessibilityBridge$1: void onLongPress(int)
androidx.exifinterface.media.ExifInterfaceUtils: int copy(java.io.InputStream,java.io.OutputStream)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long getId()
io.flutter.plugin.platform.PlatformPlugin: boolean clipboardHasStrings()
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String)
io.flutter.util.ViewUtils: boolean hasChildViewOfType(android.view.View,java.lang.Class[])
kotlinx.coroutines.DefaultExecutor: java.lang.Thread createThreadSync()
androidx.collection.SimpleArrayMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.collection.MapCollections$KeySet: int size()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String)
androidx.core.app.ActivityCompat$1: ActivityCompat$1(java.lang.String[],android.app.Activity,int)
androidx.collection.SimpleArrayMap: void allocArrays(int)
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache getInstance()
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange next()
kotlinx.coroutines.EventLoopImplBase: void enqueue(java.lang.Runnable)
androidx.core.os.ExecutorCompat$HandlerExecutor: ExecutorCompat$HandlerExecutor(android.os.Handler)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStop()
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsInactive()
androidx.collection.ArrayMap$1: int colIndexOfValue(java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int decodeOrientations(org.json.JSONArray)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
androidx.exifinterface.media.ExifInterface$1: void close()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parse(java.net.URL)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getPathProviderExternalStorageDirectories(io.flutter.plugins.pathprovider.Messages$StorageDirectory)
androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.android.KeyEmbedderResponder: io.flutter.embedding.android.KeyData$Type getEventType(android.view.KeyEvent)
io.flutter.plugin.common.BinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.flutter.plugin.editing.TextInputPlugin: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
kotlinx.coroutines.JobSupport: java.lang.String toString()
kotlin.collections.EmptySet: boolean remove(java.lang.Object)
androidx.window.core.Version: int getPatch()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.window.core.Version: java.lang.String getDescription()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void unsetOnDescendantFocusChangeListener()
org.tensorflow.lite.Interpreter: org.tensorflow.lite.Tensor getOutputTensor(int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResumeWithException(java.lang.Throwable)
kotlin.jvm.internal.PackageReference: PackageReference(java.lang.Class,java.lang.String)
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
io.flutter.plugins.imagepicker.FileUtils: java.lang.String getImageExtension(android.content.Context,android.net.Uri)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map mapOf(kotlin.Pair)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onStop(androidx.lifecycle.LifecycleOwner)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: ExceptionsConstuctorKt$tryCopyException$4$1()
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[])
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getLabel()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: boolean timeToExecute(long)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(int,int)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getPathProviderExternalCacheDirectories()
io.flutter.plugin.platform.PlatformPlugin$1: void popSystemNavigator()
kotlinx.coroutines.BlockingEventLoop: BlockingEventLoop(java.lang.Thread)
androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: java.lang.Void invoke(java.lang.Throwable)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.String toString()
kotlinx.coroutines.CancellableContinuationImpl: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.core.view.WindowInsetsControllerCompat$Impl30: WindowInsetsControllerCompat$Impl30(android.view.Window,androidx.core.view.WindowInsetsControllerCompat)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController$1: long configureForTextureLayerComposition(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat: int getResId()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
kotlin.collections.ArraysKt___ArraysKt: char single(char[])
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetBefore(java.lang.CharSequence,int)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_NEW$p()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.ExceptionsKt: java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational,java.nio.ByteOrder)
io.flutter.embedding.android.FlutterTextureView: boolean access$100(io.flutter.embedding.android.FlutterTextureView)
io.flutter.view.AccessibilityBridge$2: AccessibilityBridge$2(io.flutter.view.AccessibilityBridge)
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String toString()
kotlinx.coroutines.CancellableContinuationImpl: CancellableContinuationImpl(kotlin.coroutines.Continuation,int)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence lineSequence(java.lang.CharSequence)
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionLocked()
androidx.arch.core.executor.ArchTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
io.flutter.plugin.platform.PlatformViewsController: void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor)
kotlinx.coroutines.flow.internal.NoOpContinuation: NoOpContinuation()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Void alreadyResumedError(java.lang.Object)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onBackPressed()
kotlinx.coroutines.NodeList: boolean isActive()
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList extractBatchTextEditingDeltas()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin: FlutterAndroidLifecyclePlugin()
org.tensorflow.lite.InterpreterImpl: void close()
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.Lifecycle getLifecycle()
androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)
kotlinx.coroutines.NodeList: java.lang.String getString(java.lang.String)
kotlin.coroutines.EmptyCoroutineContext: java.lang.String toString()
kotlin.collections.EmptySet: int hashCode()
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void clearMethodCallAndResult()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
kotlinx.coroutines.JobSupport: boolean isActive()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2502(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String)
kotlin.collections.EmptySet: boolean contains(java.lang.Void)
kotlinx.coroutines.DebugStringsKt: java.lang.String toDebugString(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$900(io.flutter.view.AccessibilityBridge)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void finishWithSuccess(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: void onPreEngineRestart()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void reset()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean beginBatchEdit()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: java.lang.Object invoke(java.lang.Object)
io.flutter.view.AccessibilityBridge: boolean performSetText(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle)
kotlinx.coroutines.EventLoop: void dispatchUnconfined(kotlinx.coroutines.DispatchedTask)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel access$1700(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.view.AccessibilityBridge: void release()
kotlin.collections.EmptyMap: java.lang.String toString()
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])
io.flutter.view.AccessibilityBridge: void onTouchExplorationExit()
io.flutter.plugin.editing.TextInputPlugin$1: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
kotlinx.coroutines.channels.AbstractChannel$Itr: void setResult(java.lang.Object)
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void go(int)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
kotlinx.coroutines.NonDisposableHandle: void dispose()
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()
io.flutter.plugins.imagepicker.ImagePickerDelegate$3: ImagePickerDelegate$3(io.flutter.plugins.imagepicker.ImagePickerDelegate)
io.flutter.embedding.android.FlutterImageView: void detachFromRenderer()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void finishWithAlreadyActiveError(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void launchTakeVideoWithCameraIntent()
io.flutter.embedding.android.FlutterView$4: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object failure-PtdJZtk()
kotlinx.coroutines.DispatchedCoroutine: boolean tryResume()
io.flutter.plugin.platform.PlatformViewWrapper: void release()
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String getLogTag()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryAcquireCpuPermit()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
kotlin.Pair: java.lang.Object component2()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2702(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode)
org.tensorflow.lite.TensorImpl: void writeScalar(long,java.lang.Object)
androidx.lifecycle.ClassesInfoCache$MethodReference: void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
kotlinx.coroutines.JobSupport: void onCancelling(java.lang.Throwable)
androidx.tracing.Trace: void endSection()
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
androidx.versionedparcelable.VersionedParcelParcel: void writeBoolean(boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: byte[] readStreamFully(java.io.InputStream,int)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection fromInt(int)
kotlin.jvm.internal.ClassReference: ClassReference(java.lang.Class)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
kotlin.collections.EmptyList: EmptyList()
androidx.arch.core.executor.ArchTaskExecutor$2: ArchTaskExecutor$2()
androidx.collection.SimpleArrayMap: java.lang.String toString()
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: SafeCollector$collectContextSize$1()
io.flutter.plugin.editing.TextInputPlugin: void didChangeEditingState(boolean,boolean,boolean)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.Object invoke(java.lang.Object)
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,java.lang.String,int,boolean)
sq.flutter.tflite.TflitePlugin$RunModelOnImage: void onRunTfliteDone()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.android.KeyEmbedderResponder: boolean handleEventImpl(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
kotlinx.coroutines.JobSupport: java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void sendLocales(java.util.List)
io.flutter.plugin.common.StandardMessageCodec: void writeDouble(java.io.ByteArrayOutputStream,double)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String getStateDebugRepresentation()
io.flutter.plugin.editing.TextInputPlugin: void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle)
androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
sq.flutter.tflite.TflitePlugin$RunModelOnImage: void runTflite()
kotlinx.coroutines.InvokeOnCompletion: InvokeOnCompletion(kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
kotlinx.coroutines.InvokeOnCancel: void invoke(java.lang.Throwable)
androidx.core.app.ActivityCompat$1: void run()
androidx.exifinterface.media.ExifInterface: int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream)
androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: byte[] buffer()
kotlin.text.StringsKt__StringsKt: int getLastIndex(java.lang.CharSequence)
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory getFlutterJNIFactory()
androidx.arch.core.internal.SafeIterableMap$Entry: int hashCode()
kotlinx.coroutines.internal.ScopeCoroutine: java.lang.StackTraceElement getStackTraceElement()
org.tensorflow.lite.InterpreterImpl: org.tensorflow.lite.Tensor getInputTensor(int)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
io.flutter.embedding.android.FlutterView$3: FlutterView$3(io.flutter.embedding.android.FlutterView)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void newline(int)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void destroy()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.channels.Receive: java.lang.Object getOfferResult()
io.flutter.plugin.editing.TextInputPlugin$1: void finishAutofillContext(boolean)
sq.flutter.tflite.TflitePlugin: java.nio.ByteBuffer feedInputTensor(android.graphics.Bitmap,float,float)
kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()
androidx.exifinterface.media.ExifInterface$Rational: double calculate()
kotlin.collections.EmptySet: boolean contains(java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
kotlinx.coroutines.CoroutineId: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
androidx.exifinterface.media.ExifInterface: boolean isRw2Format(byte[])
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence(java.lang.CharSequence,int)
io.flutter.plugin.common.MethodChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
androidx.arch.core.internal.SafeIterableMap$ListIterator: SafeIterableMap$ListIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.view.TextureRegistry$OnFrameConsumedListener access$100(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
io.flutter.plugin.mouse.MouseCursorPlugin: void destroy()
sq.flutter.tflite.TflitePlugin$TfliteTask: TflitePlugin$TfliteTask(sq.flutter.tflite.TflitePlugin,java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
kotlinx.coroutines.internal.DispatchedContinuation: void awaitReusability()
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
androidx.collection.MapCollections$ValuesCollection: boolean remove(java.lang.Object)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: void run()
io.flutter.embedding.android.FlutterTextureView$1: FlutterTextureView$1(io.flutter.embedding.android.FlutterTextureView)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
io.flutter.util.PathUtils: java.lang.String getCacheDirectory(android.content.Context)
kotlin.jvm.internal.Lambda: Lambda(int)
org.tensorflow.lite.nnapi.NnApiDelegate$Options: java.lang.String getCacheDir()
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean elementWiseEquals(java.lang.StackTraceElement,java.lang.StackTraceElement)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
kotlinx.coroutines.JobSupport: java.lang.Throwable getExceptionOrNull(java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleImageResult(java.lang.String,boolean)
androidx.window.layout.WindowMetrics: java.lang.String toString()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)
kotlin.KotlinNothingValueException: KotlinNothingValueException()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
androidx.collection.MapCollections$MapIterator: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterView: android.view.PointerIcon getSystemPointerIcon(int)
io.flutter.plugin.platform.PlatformView: void onFlutterViewDetached()
io.flutter.embedding.engine.renderer.FlutterRenderer: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: void completeResumeSend()
io.flutter.plugin.editing.ListenableEditingState: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)
androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2900(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.collection.SimpleArrayMap: int size()
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$000(io.flutter.plugin.platform.PlatformViewsController)
androidx.collection.ArrayMap: java.util.Set entrySet()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo)
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toList(kotlin.sequences.Sequence)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getOfferResult()
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key()
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
kotlin.internal.ProgressionUtilKt: int mod(int,int)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getExternalCachePaths()
org.tensorflow.lite.nnapi.NnApiDelegate: NnApiDelegate(org.tensorflow.lite.nnapi.NnApiDelegate$Options)
androidx.exifinterface.media.ExifInterface: void handleThumbnailFromJfif(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)
org.tensorflow.lite.nnapi.NnApiDelegateImpl: void deleteDelegate(long)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.core.content.FileProvider$SimplePathStrategy: java.io.File getFileForUri(android.net.Uri)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: java.lang.String lookupKeyForAsset(java.lang.String)
io.flutter.embedding.android.SplashScreen: boolean doesSplashViewRememberItsTransition()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$4600(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],boolean)
io.flutter.plugin.platform.PlatformViewsController: void initializePlatformViewIfNeeded(int)
kotlinx.coroutines.JobSupport: java.lang.Throwable createCauseException(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.plugin.platform.PlatformViewsController$1: void offset(int,double,double)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long access$400(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.util.Collection)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)
androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.flow.internal.SafeCollector: void exceptionTransparencyViolated(kotlinx.coroutines.flow.internal.DownstreamExceptionElement,java.lang.Object)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: kotlin.Pair invoke(java.lang.CharSequence,int)
io.flutter.plugin.mouse.MouseCursorPlugin$1: MouseCursorPlugin$1(io.flutter.plugin.mouse.MouseCursorPlugin)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
org.tensorflow.lite.TensorImpl: void setTo(java.lang.Object)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task)
io.flutter.plugin.common.BinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.WindowInsetsControllerCompat$Impl30: WindowInsetsControllerCompat$Impl30(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat)
androidx.arch.core.executor.TaskExecutor: TaskExecutor()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setNativeSpellCheckServiceDefined(boolean)
io.flutter.view.AccessibilityBridge: void onWindowNameChange(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int hashCode()
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
kotlin.jvm.internal.Intrinsics: void throwJavaNpe()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
kotlinx.coroutines.scheduling.NonBlockingContext: void afterTask()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
androidx.collection.MapCollections$EntrySet: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sortedArrayWith(java.lang.Object[],java.util.Comparator)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)
org.tensorflow.lite.TensorImpl: void refreshShape()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedByte()
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
io.flutter.embedding.android.FlutterSurfaceView: void changeSurfaceSize(int,int)
kotlin.text.StringsKt__StringsJVMKt: boolean isBlank(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object pollInternal()
kotlin.Pair: java.lang.Object getSecond()
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: ImagePickerPlugin$LifeCycleObserver(io.flutter.plugins.imagepicker.ImagePickerPlugin,android.app.Activity)
kotlinx.coroutines.JobSupport: void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingText(java.lang.CharSequence,int)
org.tensorflow.lite.RuntimeFlavor: org.tensorflow.lite.RuntimeFlavor valueOf(java.lang.String)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean close()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: TextInputPlugin$InputTarget$Type(java.lang.String,int)
androidx.arch.core.executor.ArchTaskExecutor$2: void execute(java.lang.Runnable)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager access$1000(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
io.flutter.plugins.imagepicker.ImageResizer: java.lang.String resizeImageIfNeeded(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Integer)
io.flutter.plugin.platform.PlatformViewsController: int toLogicalPixels(double,float)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
kotlinx.coroutines.channels.Closed: void completeResumeSend()
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
io.flutter.plugin.editing.InputConnectionAdaptor: void closeConnection()
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndent(java.lang.String,java.lang.String)
kotlinx.coroutines.InvokeOnCancel: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
kotlinx.coroutines.android.HandlerContext: boolean equals(java.lang.Object)
androidx.collection.ArrayMap: java.util.Set keySet()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
kotlinx.coroutines.scheduling.GlobalQueue: GlobalQueue()
kotlinx.coroutines.flow.SafeFlow: java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
kotlinx.coroutines.channels.AbstractChannel: AbstractChannel(kotlin.jvm.functions.Function1)
kotlin.collections.EmptyList: boolean addAll(java.util.Collection)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
kotlinx.coroutines.flow.AbstractFlow: AbstractFlow()
kotlin.ranges.IntProgression: java.lang.String toString()
kotlin.collections.EmptyIterator: void remove()
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
io.flutter.plugins.imagepicker.ImagePickerPlugin: ImagePickerPlugin()
io.flutter.plugin.platform.PlatformViewsController: void access$1900(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.util.PathUtils: java.lang.String getDataDirectory(android.content.Context)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.channels.AbstractSendChannel: int countQueueSize()
io.flutter.embedding.engine.systemchannels.SettingsChannel: SettingsChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugin.editing.TextInputPlugin: void notifyViewEntered()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView access$400(io.flutter.embedding.android.FlutterView)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String[] toArray()
kotlinx.coroutines.JobSupport: void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)
kotlinx.coroutines.internal.Removed: Removed(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
kotlinx.coroutines.scheduling.DefaultScheduler: DefaultScheduler()
io.flutter.plugin.common.MethodCall: java.lang.Object argument(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.ChildHandleNode: boolean childCancelled(java.lang.Throwable)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: TextInputChannel$Configuration$Autofill(java.lang.String,java.lang.String[],java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
kotlinx.coroutines.CompletedExceptionally: boolean makeHandled()
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setIndexInArray(int)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$1: void run()
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.coroutines.CombinedContext: boolean contains(kotlin.coroutines.CoroutineContext$Element)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugin.editing.TextInputPlugin: void clearTextInputClient()
kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()
io.flutter.plugin.common.StandardMessageCodec: byte[] readBytes(java.nio.ByteBuffer)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.channels.ArrayChannel: java.lang.String getBufferDebugString()
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String,int)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object decide(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointLibraryUri()
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
io.flutter.plugin.platform.PlatformPlugin$1: void setClipboardData(java.lang.String)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()
kotlin.text.StringsKt__IndentKt: kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String)
kotlinx.coroutines.JobSupport: void parentCancelled(kotlinx.coroutines.ParentJob)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.lang.Throwable tryCopyException(java.lang.Throwable)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: io.flutter.plugin.common.PluginRegistry$Registrar registrarFor(java.lang.String)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String)
kotlin.jvm.internal.FunctionReference: boolean isInline()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3200(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getValueLabelHint()
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayRemoved(int)
androidx.lifecycle.SingleGeneratedAdapterObserver: SingleGeneratedAdapterObserver(androidx.lifecycle.GeneratedAdapter)
kotlinx.coroutines.DefaultExecutor: boolean notifyStartup()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
kotlin.collections.MapsKt__MapsKt: java.util.Map optimizeReadOnlyMap(java.util.Map)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.view.VsyncWaiter$1: void asyncWaitForVsync(long)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen access$100(io.flutter.embedding.android.FlutterSplashView)
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler access$700(io.flutter.embedding.engine.renderer.FlutterRenderer)
org.tensorflow.lite.DataTypeUtils: org.tensorflow.lite.DataType fromC(int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
io.flutter.plugin.common.StandardMessageCodec: int readSize(java.nio.ByteBuffer)
androidx.collection.MapCollections$ValuesCollection: boolean add(java.lang.Object)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context,android.view.inputmethod.InputMethodManager)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2212(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void grantUriPermissions(android.content.Intent,android.net.Uri)
kotlin.jvm.internal.Intrinsics: void throwJavaNpe(java.lang.String)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(float,io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.window.core.Version: java.lang.String toString()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key: DownstreamExceptionElement$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
io.flutter.view.VsyncWaiter: void init()
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: ImagePickerPlugin$ActivityState(io.flutter.plugins.imagepicker.ImagePickerPlugin,android.app.Application,android.app.Activity,io.flutter.plugin.common.BinaryMessenger,io.flutter.plugin.common.MethodChannel$MethodCallHandler,io.flutter.plugin.common.PluginRegistry$Registrar,io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)
androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)
io.flutter.plugin.platform.PlatformOverlayView: PlatformOverlayView(android.content.Context,int,int,io.flutter.plugin.platform.AccessibilityEventsDelegate)
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void unspecifiedAction(int)
kotlin.ranges.IntProgression: int getLast()
io.flutter.plugin.editing.TextInputPlugin: TextInputPlugin(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper createWindowInfoRepo()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.SplashScreen provideSplashScreen()
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$600(io.flutter.plugin.platform.PlatformViewsController)
sq.flutter.tflite.TflitePlugin$RunSSDMobileNet: void runTflite()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
kotlinx.coroutines.InvokeOnCancelling: java.lang.Object invoke(java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
io.flutter.embedding.android.FlutterActivity: void onStart()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: SingleViewPresentation$AccessibilityDelegatingFrameLayout(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.view.View)
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object pollInternal()
io.flutter.embedding.engine.renderer.FlutterRenderer: void setSemanticsEnabled(boolean)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.dart.DartExecutor$1: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
org.tensorflow.lite.NativeInterpreterWrapperExperimental: NativeInterpreterWrapperExperimental(java.nio.ByteBuffer,org.tensorflow.lite.InterpreterImpl$Options)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List emptyList()
kotlinx.coroutines.internal.UndeliveredElementException: UndeliveredElementException(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$FrameCallback access$200(io.flutter.view.VsyncWaiter)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: void reply(java.lang.Object)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onGenericMotionEvent(android.view.MotionEvent)
io.flutter.plugins.pathprovider.Messages: java.util.Map access$000(java.lang.Throwable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String)
kotlin.collections.EmptySet: int size()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: PlatformViewsChannel$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI)
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
io.flutter.embedding.android.FlutterSplashView: void transitionToFlutter()
io.flutter.plugin.editing.TextInputPlugin: void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: java.lang.String toString()
androidx.exifinterface.media.ExifInterface: void savePngAttributes(java.io.InputStream,java.io.OutputStream)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: float readFloat()
kotlinx.coroutines.CompletionStateKt: java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void updateSystemUiOverlays()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiDisplayed()
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)
kotlinx.coroutines.EventLoop: EventLoop()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: short readShort()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4702(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.flutter.plugin.platform.PlatformViewsController$1: long createForTextureLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
sq.flutter.tflite.TflitePlugin$RunModelOnFrame: void onRunTfliteDone()
io.flutter.plugin.platform.PlatformViewsController: java.lang.Class[] access$300()
kotlinx.coroutines.JobNode: JobNode()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
kotlin.coroutines.CombinedContext: CombinedContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$4300(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterView$5: FlutterView$5(io.flutter.embedding.android.FlutterView,io.flutter.embedding.engine.renderer.FlutterRenderer,java.lang.Runnable)
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute()
org.tensorflow.lite.TensorImpl: java.lang.String name()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
kotlinx.coroutines.EventLoop: void incrementUseCount(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void send(int)
org.tensorflow.lite.InterpreterImpl: void finalize()
io.flutter.embedding.android.FlutterSplashView: boolean hasSplashCompleted()
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.Send: Send()
io.flutter.embedding.engine.FlutterEngine: boolean isAttachedToJni()
androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.renderer.FlutterRenderer: FlutterRenderer(io.flutter.embedding.engine.FlutterJNI)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
kotlin.sequences.TransformingSequence$iterator$1: void remove()
androidx.exifinterface.media.ExifInterface: boolean isSupportedFormatForSavingAttributes(int)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: PlatformChannel$AppSwitcherDescription(int,java.lang.String)
org.tensorflow.lite.nnapi.NnApiDelegate: NnApiDelegate()
kotlin.collections.EmptyMap: java.util.Collection values()
kotlinx.coroutines.scheduling.WorkQueue: int getBufferSize$kotlinx_coroutines_core()
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasAction(io.flutter.view.AccessibilityBridge$Action)
io.flutter.plugins.imagepicker.ExifDataCopier: void setIfNotNull(androidx.exifinterface.media.ExifInterface,androidx.exifinterface.media.ExifInterface,java.lang.String)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: kotlinx.coroutines.Job transitiveCoroutineParent(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: LockFreeTaskQueueCore(int,boolean)
kotlinx.coroutines.channels.LinkedListChannel: LinkedListChannel(kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int addLast(java.lang.Object)
kotlinx.coroutines.CompletedWithCancellation: CompletedWithCancellation(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.collection.MapCollections$MapIterator: java.lang.Object setValue(java.lang.Object)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.EmptyList: java.lang.Object[] toArray()
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
sq.flutter.tflite.TflitePlugin$RunPoseNet: void onRunTfliteDone()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
androidx.versionedparcelable.ParcelImpl: void writeToParcel(android.os.Parcel,int)
kotlinx.coroutines.AbstractCoroutine: java.lang.String nameString$kotlinx_coroutines_core()
kotlinx.coroutines.internal.AtomicOp: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void notImplemented()
kotlin.collections.EmptyList: void add(int,java.lang.Object)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController$1: long configureForVirtualDisplay(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.embedding.android.FlutterActivity: void onActivityResult(int,int,android.content.Intent)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.versionedparcelable.VersionedParcelParcel: void closeField()
kotlinx.coroutines.internal.LockFreeTaskQueue: int getSize()
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: void notImplemented()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object[] newArray(int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
kotlinx.coroutines.JobSupport: java.lang.Object cancelMakeCompleting(java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor$1: DartExecutor$1(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: TextInputChannel$TextCapitalization(java.lang.String,int,java.lang.String)
kotlin.collections.EmptyMap: boolean equals(java.lang.Object)
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object unwrapNull(java.lang.Object)
kotlin.collections.EmptySet: boolean isEmpty()
io.flutter.plugin.platform.PlatformViewsController: void onBeginFrame()
androidx.exifinterface.media.ExifInterface: int getMimeType(java.io.BufferedInputStream)
kotlin.collections.EmptyIterator: void set(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: TextInputChannel$TextInputType(java.lang.String,int,java.lang.String)
kotlinx.coroutines.JobNode: void setJob(kotlinx.coroutines.JobSupport)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
kotlin.ranges.IntRange: int hashCode()
io.flutter.embedding.android.FlutterSurfaceView: void access$400(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.android.FlutterSurfaceView: boolean access$100(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$2: FlutterRenderer$SurfaceTextureRegistryEntry$2(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
kotlin.ranges.IntProgression: java.util.Iterator iterator()
io.flutter.embedding.engine.FlutterShellArgs: io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)
sq.flutter.tflite.TflitePlugin$RunPoseNet: TflitePlugin$RunPoseNet(sq.flutter.tflite.TflitePlugin,java.util.HashMap,java.nio.ByteBuffer,int,double,int,io.flutter.plugin.common.MethodChannel$Result)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: RestrictedContinuationImpl(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element)
io.flutter.view.VsyncWaiter$1: VsyncWaiter$1(io.flutter.view.VsyncWaiter)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toList(java.lang.Iterable)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$6000(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateHead(long,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onNewIntent(android.content.Intent)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void unsetSystemUiFlag(int)
kotlinx.coroutines.CancelHandler: CancelHandler()
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.collection.MapCollections$KeySet: boolean retainAll(java.util.Collection)
org.tensorflow.lite.TensorImpl: int[] getInputShapeIfDifferent(java.lang.Object)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.tensorflow.lite.TensorImpl: int[] shape()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext getImmediate()
io.flutter.embedding.engine.FlutterJNI$Factory: io.flutter.embedding.engine.FlutterJNI provideFlutterJNI()
kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()
sq.flutter.tflite.TflitePlugin: android.graphics.Matrix getTransformationMatrix(int,int,int,int,boolean)
kotlinx.coroutines.NonDisposableHandle: NonDisposableHandle()
io.flutter.embedding.android.FlutterSurfaceView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.plugins.imagepicker.ExifDataCopier: ExifDataCopier()
io.flutter.embedding.android.AndroidTouchProcessor: void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState: void release()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: boolean validate()
androidx.exifinterface.media.ExifInterfaceUtils: void closeFileDescriptor(java.io.FileDescriptor)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.CancelHandler makeCancelHandler(kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitController: void clearRegisteredRules()
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$000(io.flutter.embedding.engine.dart.DartExecutor)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onDetachedFromActivity()
io.flutter.plugin.platform.AccessibilityEventsDelegate: void setAccessibilityBridge(io.flutter.view.AccessibilityBridge)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelResult$Closed: ChannelResult$Closed(java.lang.Throwable)
androidx.versionedparcelable.VersionedParcel: java.lang.Class findParcelClass(java.lang.Class)
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence access$900(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.flutter.plugins.imagepicker.ImagePickerDelegate$1: void askForPermission(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: PlatformViewsChannel$PlatformViewTouch(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long)
io.flutter.plugin.platform.PlatformViewsController$1: io.flutter.plugin.platform.PlatformView createPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest,boolean)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
kotlin.coroutines.CoroutineContext$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.ranges.IntRange: java.lang.String toString()
kotlinx.coroutines.internal.OnUndeliveredElementKt: void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
androidx.window.java.R: R()
io.flutter.plugins.imagepicker.ImagePickerCache: void savePendingCameraMediaUriPath(android.net.Uri)
org.tensorflow.lite.gpu.GpuDelegate: void deleteDelegate(long)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
io.flutter.plugin.platform.PlatformViewsController: int access$2000(io.flutter.plugin.platform.PlatformViewsController,double,float)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.graphics.drawable.IconCompat: void onPostParceling()
kotlinx.coroutines.android.HandlerDispatcherKt: android.os.Handler asHandler(android.os.Looper,boolean)
androidx.window.core.Bounds: int hashCode()
sq.flutter.tflite.TflitePlugin: java.util.Map traverseToTargetKeypoint(int,java.util.Map,int,float[][][],float[][][],int,float[][][])
org.tensorflow.lite.TensorImpl: java.nio.ByteBuffer buffer(long)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onUserLeaveHint()
io.flutter.embedding.android.FlutterActivity: android.app.Activity getActivity()
kotlin.random.AbstractPlatformRandom: int nextBits(int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p()
kotlin.collections.EmptyMap: boolean isEmpty()
androidx.exifinterface.media.ExifInterface$ExifTag: ExifInterface$ExifTag(java.lang.String,int,int,int)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
io.flutter.plugin.editing.ListenableEditingState: void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean)
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel()
kotlinx.coroutines.DefaultExecutor: void run()
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewAttached(android.view.View)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: boolean systemProp(java.lang.String,boolean)
androidx.collection.SimpleArrayMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onDetachedFromActivity()
kotlin.collections.EmptyIterator: void add(java.lang.Object)
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: CoroutineScheduler$WorkerState(java.lang.String,int)
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType,long)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject)
io.flutter.plugin.editing.SpellCheckPlugin: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])
io.flutter.plugin.platform.VirtualDisplayController: void dispatchTouchEvent(android.view.MotionEvent)
io.flutter.plugin.platform.PlatformView: void onInputConnectionUnlocked()
kotlinx.coroutines.NonDisposableHandle: java.lang.String toString()
io.flutter.util.TraceSection: void beginAsyncSection(java.lang.String,int)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderTemporaryDirectory()
kotlinx.coroutines.DispatchedCoroutine: void afterCompletion(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didScroll()
org.tensorflow.lite.InterpreterFactoryImpl: InterpreterFactoryImpl()
kotlinx.coroutines.channels.ChannelResult$Failed: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect getGlobalRect()
androidx.collection.ArrayMap$1: void colClear()
kotlinx.coroutines.ChildHandleNode: void invoke(java.lang.Throwable)
io.flutter.plugin.editing.TextInputPlugin$1: void show()
androidx.core.content.FileProvider: android.content.res.XmlResourceParser getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int)
io.flutter.plugin.editing.SpellCheckPlugin: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])
kotlin.jvm.internal.ClassReference: java.lang.Class getJClass()
io.flutter.plugin.platform.PlatformViewsController: void detachTextInputPlugin()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void run()
kotlin.jvm.internal.PackageReference: java.lang.String toString()
androidx.exifinterface.media.ExifInterfaceUtils: void closeQuietly(java.io.Closeable)
androidx.exifinterface.media.ExifInterface: void swapBasedOnImageSize(int,int)
androidx.arch.core.executor.DefaultTaskExecutor$1: java.lang.Thread newThread(java.lang.Runnable)
org.tensorflow.lite.TensorImpl: int[] shape(long)
androidx.arch.core.internal.SafeIterableMap$ListIterator: boolean hasNext()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()
kotlinx.coroutines.StandaloneCoroutine: StandaloneCoroutine(kotlin.coroutines.CoroutineContext,boolean)
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api23Impl: int getResId(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void afterTask(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object getNext()
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
kotlin.coroutines.CombinedContext: int size()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverStackTrace(java.lang.Throwable)
io.flutter.view.VsyncWaiter$DisplayListener: void register()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
sq.flutter.tflite.TflitePlugin$RunSegmentationOnFrame: void runTflite()
androidx.window.embedding.ActivityStack: boolean isEmpty()
kotlin.ranges.IntRange: IntRange(int,int)
org.tensorflow.lite.NativeInterpreterWrapper: int getOutputCount(long)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
androidx.collection.SimpleArrayMap: int indexOfNull()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
io.flutter.plugin.editing.TextInputPlugin: void setPlatformViewTextInputClient(int,boolean)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int nextInt(int)
io.flutter.embedding.android.FlutterActivity: boolean popSystemNavigator()
io.flutter.plugin.editing.ListenableEditingState: void endBatchEdit()
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.arch.core.executor.ArchTaskExecutor: void postToMainThread(java.lang.Runnable)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
io.flutter.embedding.engine.renderer.FlutterRenderer: void markTextureFrameAvailable(long)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: DartMessenger$ConcurrentTaskQueue(java.util.concurrent.ExecutorService)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeChangeListener()
androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void flush()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
kotlin.collections.EmptyMap: EmptyMap()
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityResumed(android.app.Activity)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.plugin.editing.ListenableEditingState: void setComposingRange(int,int)
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.embedding.engine.FlutterEngineCache: FlutterEngineCache()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onLayout(boolean,int,int,int,int)
io.flutter.embedding.android.FlutterActivity: void unregisterOnBackInvokedCallback()
io.flutter.embedding.android.AndroidTouchProcessor: AndroidTouchProcessor(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime: InterpreterApi$Options$TfLiteRuntime(java.lang.String,int)
kotlinx.coroutines.JobCancellationException: JobCancellationException(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
kotlin.Pair: int hashCode()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String)
androidx.window.core.Bounds: int getWidth()
kotlin.collections.EmptyIterator: java.lang.Void next()
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
kotlin.jvm.internal.ClassReference: java.util.Map access$getSimpleNames$cp()
io.flutter.plugin.editing.SpellCheckPlugin: void initiateSpellCheck(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
kotlin.ranges.IntProgressionIterator: IntProgressionIterator(int,int,int)
io.flutter.view.AccessibilityBridge: void predictCursorMovement(io.flutter.view.AccessibilityBridge$SemanticsNode,int,boolean,boolean)
kotlinx.coroutines.InvokeOnCancel: java.lang.String toString()
kotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.VirtualDisplayController create(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.PlatformView,io.flutter.view.TextureRegistry$SurfaceTextureEntry,int,int,int,java.lang.Object,android.view.View$OnFocusChangeListener)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: LifecycleChannel(io.flutter.embedding.engine.dart.DartExecutor)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.collection.MapCollections: boolean equalsSetHelper(java.util.Set,java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: void resumeReceiveClosed(kotlinx.coroutines.channels.Closed)
io.flutter.plugins.imagepicker.FileUtils: FileUtils()
org.tensorflow.lite.NativeInterpreterWrapper: java.lang.String[] getSignatureKeys()
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext getContext()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: int atMost(int)
androidx.arch.core.internal.SafeIterableMap: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
kotlin.text.StringsKt__StringsKt: int indexOfAny(java.lang.CharSequence,char[],int,boolean)
io.flutter.embedding.android.FlutterView: void autofill(android.util.SparseArray)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.PluginRegistry getPlugins()
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onPause(androidx.lifecycle.LifecycleOwner)
kotlinx.coroutines.JobNode: boolean isActive()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void next(int)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
kotlinx.coroutines.DispatcherExecutor: java.lang.String toString()
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferAlwaysEmpty()
kotlinx.coroutines.flow.AbstractFlow$collect$1: AbstractFlow$collect$1(kotlinx.coroutines.flow.AbstractFlow,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.versionedparcelable.VersionedParcelParcel: byte[] readByteArray()
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasSelection()
androidx.versionedparcelable.VersionedParcelParcel: void writeByteArray(byte[])
io.flutter.plugin.platform.PlatformPlugin: void access$500(io.flutter.plugin.platform.PlatformPlugin)
org.tensorflow.lite.TensorImpl: org.tensorflow.lite.DataType dataType()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry: ShimPluginRegistry(io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.EventLoop: long delta(boolean)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable getEditable()
kotlinx.coroutines.JobSupport: boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode)
org.tensorflow.lite.TensorImpl: org.tensorflow.lite.TensorImpl fromIndex(long,int)
androidx.window.core.Version: int compareTo(java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void onDraw()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet,boolean)
kotlinx.coroutines.EventLoopImplBase: void rescheduleAllDelayed()
androidx.exifinterface.media.ExifInterface: void addDefaultValuesForCompatibility()
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale localeFromString(java.lang.String)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray(java.lang.Object[])
io.flutter.plugin.editing.ListenableEditingState: void beginBatchEdit()
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
org.tensorflow.lite.TensorImpl: java.lang.String name(long)
io.flutter.plugin.platform.PlatformViewsController: void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3000(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.MainDispatcherLoader: MainDispatcherLoader()
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin$1: TextInputPlugin$1(io.flutter.plugin.editing.TextInputPlugin)
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine)
androidx.lifecycle.ClassesInfoCache$MethodReference: ClassesInfoCache$MethodReference(int,java.lang.reflect.Method)
sq.flutter.tflite.TflitePlugin$RunYOLO$1: int compare(java.lang.Object,java.lang.Object)
io.flutter.plugin.platform.PlatformOverlayView: boolean onHoverEvent(android.view.MotionEvent)
kotlinx.coroutines.AbstractCoroutine: boolean isActive()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void close()
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int getAVAILABLE_PROCESSORS()
sq.flutter.tflite.TflitePlugin$RunSegmentationOnBinary: void runTflite()
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
kotlin.ranges.IntProgression: kotlin.collections.IntIterator iterator()
io.flutter.Log: void d(java.lang.String,java.lang.String)
androidx.core.content.FileProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
kotlinx.coroutines.YieldContext$Key: YieldContext$Key()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
kotlin.collections.EmptySet: boolean removeAll(java.util.Collection)
io.flutter.embedding.android.FlutterView: boolean hasRenderedFirstFrame()
io.flutter.plugin.platform.VirtualDisplayController: VirtualDisplayController(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.hardware.display.VirtualDisplay,io.flutter.plugin.platform.PlatformView,android.view.Surface,io.flutter.view.TextureRegistry$SurfaceTextureEntry,android.view.View$OnFocusChangeListener,int,java.lang.Object)
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver access$000()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core()
io.flutter.plugin.platform.PlatformViewsController: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.util.List)
io.flutter.embedding.android.FlutterImageView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
kotlinx.coroutines.internal.ThreadSafeHeap: boolean isEmpty()
io.flutter.plugins.imagepicker.ImagePickerUtils: boolean needRequestCameraPermission(android.content.Context)
kotlinx.coroutines.CommonPool: CommonPool()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
org.tensorflow.lite.TensorImpl: java.nio.ByteBuffer buffer()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add$default(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.Task,boolean,int,java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.android.FlutterActivity: boolean isDebuggable()
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,boolean)
kotlinx.coroutines.scheduling.TaskImpl: void run()
kotlinx.coroutines.UndispatchedMarker: UndispatchedMarker()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
org.tensorflow.lite.TensorImpl: long create(long,int,int)
kotlinx.coroutines.scheduling.WorkQueue: long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
io.flutter.embedding.engine.dart.DartExecutor: void notifyLowMemoryWarning()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: RestorationChannel$1(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.flutter.embedding.engine.systemchannels.TextInputChannel: void done(int)
kotlinx.coroutines.CoroutineId: long getId()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String detailedExceptionString(java.lang.Exception)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3300(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterActivity: android.os.Bundle getMetaData()
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
io.flutter.plugins.imagepicker.ImagePickerDelegate: boolean setPendingMethodCallAndResult(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.content.FileProvider$SimplePathStrategy: void addRoot(java.lang.String,java.io.File)
org.tensorflow.lite.nnapi.NnApiDelegate$Options: java.lang.String getModelToken()
io.flutter.embedding.android.FlutterImageView: void init()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: AccessibilityBridge$AccessibilityFeature(java.lang.String,int,int)
kotlin.coroutines.jvm.internal.CompletedContinuation: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6400(io.flutter.view.AccessibilityBridge$SemanticsNode)
sq.flutter.tflite.TflitePlugin$RunPix2PixOnImage: void onRunTfliteDone()
androidx.window.core.Bounds: Bounds(int,int,int,int)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean endBatchEdit()
io.flutter.embedding.android.FlutterSplashView: android.view.View access$300(io.flutter.embedding.android.FlutterSplashView)
kotlin.ranges.IntRange: java.lang.Integer getStart()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.plugin.editing.ListenableEditingState: void notifyListenersIfNeeded(boolean,boolean,boolean)
kotlinx.coroutines.JobSupport$Finishing: void setExceptionsHolder(java.lang.Object)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,char,int,boolean)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object removeFirstOrNull()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitText(java.lang.CharSequence,int)
kotlin.random.FallbackThreadLocalRandom: FallbackThreadLocalRandom()
io.flutter.embedding.android.KeyboardManager: KeyboardManager(io.flutter.embedding.android.KeyboardManager$ViewDelegate)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onDetachedFromActivityForConfigChanges()
kotlin.coroutines.CombinedContext: boolean equals(java.lang.Object)
kotlinx.coroutines.DispatchedTask: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
io.flutter.plugin.platform.PlatformViewsController: void onDisplayOverlaySurface(int,int,int,int,int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void mergeRecoveredTraces(java.lang.StackTraceElement[],java.util.ArrayDeque)
kotlinx.coroutines.android.HandlerContext: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
io.flutter.embedding.android.FlutterView$4: void accept(java.lang.Object)
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
kotlin.jvm.internal.ClassReference: java.lang.String toString()
io.flutter.embedding.android.FlutterSurfaceView: void pause()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onTrimMemory(int)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
kotlinx.coroutines.internal.ThreadSafeHeap: void swap(int,int)
io.flutter.plugins.imagepicker.ImageResizer: java.io.FileOutputStream createOutputStream(java.io.File)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: FlutterPlugin$FlutterPluginBinding(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets)
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: java.lang.String systemProp(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler: void execute(java.lang.Runnable)
androidx.core.view.inputmethod.EditorInfoCompat: void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[])
io.flutter.embedding.android.FlutterSurfaceView: boolean gatherTransparentRegion(android.graphics.Region)
kotlin.Pair: java.lang.Object getFirst()
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$6200(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
io.flutter.view.AccessibilityBridge: void setBoldTextFlag()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputActionFromTextInputAction(java.lang.String)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugins.imagepicker.ImagePickerCache: void saveTypeWithMethodCallName(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2800(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.loader.FlutterLoader$1: java.lang.Object call()
androidx.collection.MapCollections$KeySet: void clear()
androidx.window.embedding.SplitRule: int getLayoutDirection()
kotlinx.coroutines.Empty: java.lang.String toString()
io.flutter.plugin.platform.PlatformViewsController: void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.plugin.common.JSONMessageCodec: JSONMessageCodec()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: java.util.Map encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean)
kotlin.internal.PlatformImplementations$ReflectThrowable: PlatformImplementations$ReflectThrowable()
org.tensorflow.lite.InterpreterApi$Options: org.tensorflow.lite.InterpreterApi$Options$TfLiteRuntime getRuntime()
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map packageData(byte[])
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
io.flutter.plugins.imagepicker.ImagePickerDelegate$4: void onPathReady(java.lang.String)
kotlin.internal.PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
kotlinx.coroutines.EventLoopImplBase: int scheduleImpl(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
androidx.collection.MapCollections$ValuesCollection: boolean isEmpty()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.android.KeyboardManager: void access$000(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
io.flutter.embedding.android.FlutterView: void init()
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp(java.lang.String,int,int,int)
io.flutter.plugin.common.BasicMessageChannel: java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel)
org.tensorflow.lite.TensorImpl: int[] shapeSignature(long)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl(java.lang.Object)
io.flutter.embedding.android.FlutterView$2: FlutterView$2(io.flutter.embedding.android.FlutterView,android.os.Handler)
io.flutter.view.AccessibilityBridge: void access$400(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
kotlinx.coroutines.EventLoopImplPlatform: EventLoopImplPlatform()
org.tensorflow.lite.NativeInterpreterWrapper: org.tensorflow.lite.TensorImpl getOutputTensor(int)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.plugin.platform.PlatformOverlayView)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
androidx.lifecycle.ClassesInfoCache$CallbackInfo: ClassesInfoCache$CallbackInfo(java.util.Map)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: AccessibilityChannel$1(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
io.flutter.plugin.platform.PlatformViewsController: void detach()
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferEmpty()
kotlinx.coroutines.CancellableContinuation$DefaultImpls: java.lang.Object tryResume$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,java.lang.Object,int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel: void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String getRouteName()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] $values()
io.flutter.plugins.imagepicker.ImagePickerDelegate$2$1: ImagePickerDelegate$2$1(io.flutter.plugins.imagepicker.ImagePickerDelegate$2,io.flutter.plugins.imagepicker.ImagePickerDelegate$OnPathReadyListener)
io.flutter.embedding.android.FlutterSurfaceView$2: FlutterSurfaceView$2(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugin.platform.PlatformPlugin: void access$1000(io.flutter.plugin.platform.PlatformPlugin,java.lang.String)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object takeState$kotlinx_coroutines_core()
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()
kotlin.Pair: java.lang.Object component1()
io.flutter.plugin.platform.PlatformViewsController$1: void dispose(int)
kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityStopped(android.app.Activity)
kotlin.Result$Companion: Result$Companion()
org.tensorflow.lite.InterpreterApi$Options: int getNumThreads()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object getResult()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.plugin.common.StandardMessageCodec: void writeBytes(java.io.ByteArrayOutputStream,byte[])
kotlinx.coroutines.BeforeResumeCancelHandler: BeforeResumeCancelHandler()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onUserLeaveHint()
kotlin.jvm.internal.TypeIntrinsics: int getFunctionArity(java.lang.Object)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightStatusBars(boolean)
kotlinx.coroutines.JobSupport$Finishing: boolean isSealed()
io.flutter.embedding.android.KeyboardMap$KeyPair: KeyboardMap$KeyPair(long,long)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.AndroidTouchProcessor access$1500(io.flutter.plugin.platform.PlatformViewsController)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugin.platform.PlatformViewWrapper: boolean shouldDrawToSurfaceNow()
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken: DartMessenger$TaskQueueToken()
io.flutter.plugin.platform.PlatformPlugin: boolean access$1100(io.flutter.plugin.platform.PlatformPlugin)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
org.tensorflow.lite.gpu.GpuDelegate: long createDelegate(boolean,boolean,int,java.lang.String,java.lang.String)
io.flutter.embedding.android.DrawableSplashScreen$1: DrawableSplashScreen$1(io.flutter.embedding.android.DrawableSplashScreen,java.lang.Runnable)
io.flutter.plugin.platform.PlatformViewRegistryImpl: PlatformViewRegistryImpl()
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.String toString()
androidx.versionedparcelable.ParcelImpl: ParcelImpl(android.os.Parcel)
kotlinx.coroutines.DispatchedTaskKt: void dispatch(kotlinx.coroutines.DispatchedTask,int)
io.flutter.plugin.editing.TextInputPlugin: boolean handleKeyEvent(android.view.KeyEvent)
kotlinx.coroutines.ThreadLocalEventLoop: void resetEventLoop$kotlinx_coroutines_core()
kotlinx.coroutines.internal.SystemPropsKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerDelegate: ImagePickerDelegate(android.app.Activity,java.io.File,io.flutter.plugins.imagepicker.ImageResizer,io.flutter.plugins.imagepicker.ImagePickerCache)
org.tensorflow.lite.TensorImpl: void throwIfDstShapeIsIncompatible(java.lang.Object)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
kotlinx.coroutines.DispatchedTask: DispatchedTask(int)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: java.lang.Object getSystemService(java.lang.String)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(int)
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromBroadcastReceiver()
kotlin.text.StringsKt__IndentKt: java.lang.String trimIndent(java.lang.String)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[],int,int)
androidx.exifinterface.media.ExifInterface: void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
kotlin.jvm.internal.CallableReference$NoReceiver: CallableReference$NoReceiver()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: Messages$StorageDirectory(java.lang.String,int,int)
kotlinx.coroutines.JobNode: void dispose()
kotlin.coroutines.jvm.internal.CompletedContinuation: CompletedContinuation()
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.collection.SimpleArrayMap: boolean isEmpty()
sq.flutter.tflite.TflitePlugin: void runPoseNetOnImage(java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.imagepicker.ImagePickerDelegate$1: boolean isPermissionGranted(java.lang.String)
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.CancellableContinuationImpl: boolean cancel(java.lang.Throwable)
io.flutter.plugin.common.JSONMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlinx.coroutines.AbstractCoroutine: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: void invoke(java.lang.Throwable)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void setupFlutterEngine()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.Symbol: Symbol(java.lang.String)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.StackTraceElement getStackTraceElement()
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferEmpty()
io.flutter.plugin.platform.PlatformViewWrapper$3: void onGlobalFocusChanged(android.view.View,android.view.View)
androidx.exifinterface.media.ExifInterface: boolean isSupportedDataType(java.util.HashMap)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.String toString()
sq.flutter.tflite.TflitePlugin$RunPix2PixOnImage: TflitePlugin$RunPix2PixOnImage(sq.flutter.tflite.TflitePlugin,java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
androidx.collection.MapCollections$ArrayIterator: void remove()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean remove()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.util.ArrayDeque createStackTrace(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
io.flutter.plugin.editing.TextInputPlugin: void clearPlatformViewClient(int)
androidx.collection.MapCollections: MapCollections()
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
kotlinx.coroutines.CancellableContinuationImpl: void invokeOnCancellation(kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpRemove()
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)
kotlinx.coroutines.JobSupport$ChildCompletion: JobSupport$ChildCompletion(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: FlutterRenderer$SurfaceTextureFinalizerRunnable(long,io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
kotlinx.coroutines.CoroutineName: java.lang.String getName()
kotlin.Pair: java.lang.String toString()
kotlin.internal.PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
kotlinx.coroutines.EventLoop: void decrementUseCount(boolean)
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence)
androidx.window.core.Version: int hashCode()
kotlin.text.StringsKt__StringsKt: boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.flutter.view.AccessibilityBridge$Flag: AccessibilityBridge$Flag(java.lang.String,int,int)
io.flutter.embedding.android.FlutterTextureView: void changeSurfaceSize(int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: PlatformChannel$SoundType(java.lang.String,int,java.lang.String)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForPanZoom(int)
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
kotlin.jvm.internal.ClassReference: int hashCode()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager getWindowManager()
kotlinx.coroutines.scheduling.LimitingDispatcher: void close()
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
kotlin.internal.jdk7.JDK7PlatformImplementations: boolean sdkIsNullOrAtLeast(int)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
io.flutter.plugin.common.FlutterException: FlutterException(java.lang.String,java.lang.String,java.lang.Object)
kotlin.ranges.IntProgressionIterator: int nextInt()
sq.flutter.tflite.TflitePlugin$RunPix2PixOnImage: void runTflite()
kotlinx.coroutines.CoroutineDispatcher$Key$1: CoroutineDispatcher$Key$1()
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isEmpty()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int)
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
kotlinx.coroutines.AbstractCoroutine: AbstractCoroutine(kotlin.coroutines.CoroutineContext,boolean,boolean)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(java.lang.Object[],int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onRestoreInstanceState(android.os.Bundle)
androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void finishWithError(java.lang.String,java.lang.String)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getApplicationSupportDirectory()
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
kotlinx.coroutines.StandaloneCoroutine: boolean handleJobException(java.lang.Throwable)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifierBase(int)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)
kotlin.collections.EmptyMap: boolean containsKey(java.lang.Object)
io.flutter.embedding.engine.loader.FlutterLoader: boolean isLeakVM(android.os.Bundle)
io.flutter.plugin.editing.TextInputPlugin: void saveEditableSizeAndTransform(double,double,double[])
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.Object getPollResult()
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
org.tensorflow.lite.NativeInterpreterWrapper: void allowBufferHandleOutput(long,boolean)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$100(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onDetachedFromActivityForConfigChanges()
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: ModuleNameRetriever$Cache(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
androidx.collection.MapCollections$ValuesCollection: boolean containsAll(java.util.Collection)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
io.flutter.plugin.common.StandardMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
org.tensorflow.lite.DataType: org.tensorflow.lite.DataType valueOf(java.lang.String)
kotlin.sequences.ConstrainedOnceSequence: ConstrainedOnceSequence(kotlin.sequences.Sequence)
androidx.window.core.Bounds: boolean isEmpty()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.Removed removed()
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.flutter.plugin.editing.TextInputPlugin$InputTarget: TextInputPlugin$InputTarget(io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type,int)
kotlin.collections.SetsKt__SetsKt: java.util.Set emptySet()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3(java.lang.reflect.Constructor)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness)
androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)
kotlin.random.FallbackThreadLocalRandom: java.util.Random getImpl()
io.flutter.view.AccessibilityBridge: void setAccessibleNavigation(boolean)
kotlinx.coroutines.Unconfined: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void requestExistingInputState()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object offerInternal(java.lang.Object)
io.flutter.embedding.android.FlutterView: void removeFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
androidx.collection.MapCollections$EntrySet: void clear()
io.flutter.plugin.platform.PlatformViewsController: boolean validateDirection(int)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.core.content.FileProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
io.flutter.embedding.android.FlutterView$3: void onFlutterUiDisplayed()
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)
kotlinx.coroutines.android.HandlerContext: java.lang.String toString()
io.flutter.embedding.android.FlutterView: void revertImageView(java.lang.Runnable)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: ShimPluginRegistry$ShimRegistrarAggregate()
kotlinx.coroutines.JobSupport: java.lang.Object makeCancelling(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.collections.EmptySet: boolean containsAll(java.util.Collection)
io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: void onKeyEventHandled(boolean)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String,java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeViewImmediate(java.lang.Object[])
androidx.arch.core.internal.SafeIterableMap: java.lang.String toString()
io.flutter.plugin.platform.PlatformViewWrapper: android.view.Surface createSurface(android.graphics.SurfaceTexture)
io.flutter.plugins.imagepicker.ImageResizer: boolean isImageQualityValid(java.lang.Integer)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.platform.PlatformViewsController: boolean access$400(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.view.AccessibilityBridge: boolean performAction(int,int,android.os.Bundle)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: ExecutorCoroutineDispatcher$Key$1()
io.flutter.view.AccessibilityBridge: int access$7400()
io.flutter.embedding.android.KeyEmbedderResponder: void sendKeyEvent(io.flutter.embedding.android.KeyData,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
io.flutter.embedding.android.FlutterSurfaceView: void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
kotlinx.coroutines.channels.ArrayChannel: void enqueueElement(int,java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
sq.flutter.tflite.TflitePlugin$RunModelOnImage: TflitePlugin$RunModelOnImage(sq.flutter.tflite.TflitePlugin,java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1(java.lang.reflect.Constructor)
io.flutter.embedding.android.FlutterActivity$1: void onBackInvoked()
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent,java.lang.Character)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean)
kotlin.collections.EmptyMap: java.util.Set getEntries()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
kotlinx.coroutines.internal.ScopeCoroutine: kotlinx.coroutines.Job getParent$kotlinx_coroutines_core()
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderApplicationDocumentsDirectory()
org.tensorflow.lite.Interpreter$Options: Interpreter$Options()
io.flutter.Log: void v(java.lang.String,java.lang.String)
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: double readDouble()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
io.flutter.embedding.android.FlutterSplashView: void displayFlutterViewWithSplash(io.flutter.embedding.android.FlutterView,io.flutter.embedding.android.SplashScreen)
androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.view.AccessibilityBridge: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
kotlinx.coroutines.scheduling.WorkQueue: void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()
io.flutter.plugin.platform.PlatformViewsController: int access$1000(io.flutter.plugin.platform.PlatformViewsController,double)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()
io.flutter.embedding.android.FlutterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
kotlinx.coroutines.JobSupport: boolean start()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
kotlinx.coroutines.JobSupport: void onCompletionInternal(java.lang.Object)
io.flutter.view.AccessibilityBridge$1: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String access$100(java.lang.Exception)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $values()
kotlinx.coroutines.channels.ArrayChannel: ArrayChannel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Key getKey()
kotlin.text.StringsKt__StringsKt: java.util.List lines(java.lang.CharSequence)
io.flutter.plugin.mouse.MouseCursorPlugin$1: void activateSystemCursor(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$1$1: VirtualDisplayController$1$1(io.flutter.plugin.platform.VirtualDisplayController$1)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
androidx.core.content.FileProvider: java.lang.Object[] copyOf(java.lang.Object[],int)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createByte(java.lang.String)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.flutter.embedding.android.KeyEmbedderResponder: long keyOfPlane(long,long)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
kotlinx.coroutines.EventLoopImplBase: long getNextTime()
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.JobCancellationException createCopy()
io.flutter.view.AccessibilityBridge$3: AccessibilityBridge$3(io.flutter.view.AccessibilityBridge,android.os.Handler)
org.tensorflow.lite.TensorImpl: int numBytes()
kotlinx.coroutines.JobCancellationException: java.lang.Throwable fillInStackTrace()
sq.flutter.tflite.TflitePlugin$RunPix2PixOnFrame: void onRunTfliteDone()
kotlin.coroutines.jvm.internal.DebugMetadataKt: int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.arch.core.internal.FastSafeIterableMap: FastSafeIterableMap()
kotlin.sequences.ConstrainedOnceSequence: java.util.Iterator iterator()
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,boolean)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
androidx.core.content.FileProvider: java.lang.String getType(android.net.Uri)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void popRoute()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setInitialRoute(java.lang.String)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: FlutterApplicationInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.DispatchedContinuation: void release()
kotlinx.coroutines.DispatchedTaskKt: void resumeUnconfined(kotlinx.coroutines.DispatchedTask)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void useFrontCamera(android.content.Intent)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
org.tensorflow.lite.TensorImpl: void writeMultiDimensionalArray(long,java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: void shutdown()
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateRecursively(float[],java.util.Set,boolean)
io.flutter.view.AccessibilityBridge: void setAccessibilityPaneTitle(java.lang.String)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
kotlin.text.StringsKt__AppendableKt: void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.lifecycle.DefaultLifecycleObserver: void onStop(androidx.lifecycle.LifecycleOwner)
kotlin.coroutines.CombinedContext: int hashCode()
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,int,int)
kotlinx.coroutines.CancellableContinuationImpl: boolean resetStateReusable()
io.flutter.embedding.android.KeyboardMap: io.flutter.embedding.android.KeyboardMap$TogglingGoal[] getTogglingGoals()
io.flutter.embedding.android.FlutterActivity: void onStop()
kotlinx.coroutines.channels.Closed: java.lang.Object getOfferResult()
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)
io.flutter.plugins.imagepicker.ImageResizer: ImageResizer(java.io.File,io.flutter.plugins.imagepicker.ExifDataCopier)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.ranges.IntProgression: IntProgression(int,int,int)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView createImageView()
kotlinx.coroutines.internal.OpDescriptor: boolean isEarlierThan(kotlinx.coroutines.internal.OpDescriptor)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setIndex(int)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: FlutterSplashView$SavedState$1()
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray(byte[],int)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
io.flutter.embedding.android.FlutterView$5: void onFlutterUiDisplayed()
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: boolean getIsSerial()
io.flutter.plugin.platform.PlatformViewsController: void access$900(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
io.flutter.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.lang.String readLine()
io.flutter.view.AccessibilityBridge: boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
kotlinx.coroutines.JobSupport$Finishing: boolean isActive()
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: ShimPluginRegistry$ShimRegistrarAggregate(io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$1)
kotlinx.coroutines.channels.ConflatedChannel: kotlinx.coroutines.internal.UndeliveredElementException updateValueLocked(java.lang.Object)
kotlin.Pair: boolean equals(java.lang.Object)
io.flutter.plugin.platform.PlatformViewWrapper: boolean access$102(io.flutter.plugin.platform.PlatformViewWrapper,boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean doPerformContextMenuAction(int)
io.flutter.plugin.localization.LocalizationPlugin: void sendLocalesToFlutter(android.content.res.Configuration)
io.flutter.plugins.imagepicker.ImagePickerCache: ImagePickerCache(android.content.Context)
org.tensorflow.lite.nnapi.NnApiDelegate$Options: NnApiDelegate$Options()
kotlin.Unit: java.lang.String toString()
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.collection.MapCollections$EntrySet: boolean removeAll(java.util.Collection)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
kotlinx.coroutines.JobSupport: boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion: JDK7PlatformImplementations$ReflectSdkVersion()
org.tensorflow.lite.TensorImpl: void copyTo(java.nio.Buffer)
io.flutter.util.ViewUtils: int generateViewId(int)
org.tensorflow.lite.gpu.GpuDelegate: void close()
kotlin.collections.EmptyList: int hashCode()
org.tensorflow.lite.RuntimeFlavor: org.tensorflow.lite.RuntimeFlavor[] values()
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
androidx.core.content.FileProvider: java.lang.String[] copyOf(java.lang.String[],int)
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
sq.flutter.tflite.TflitePlugin: void runPoseNetOnFrame(java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
kotlin.random.AbstractPlatformRandom: AbstractPlatformRandom()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: PlatformChannel$DeviceOrientation(java.lang.String,int,java.lang.String)
kotlin.ranges.IntRange$Companion: kotlin.ranges.IntRange getEMPTY()
io.flutter.embedding.android.FlutterImageView: void onSizeChanged(int,int,int,int)
kotlinx.coroutines.Active: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: float max(float,float,float,float)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugin.platform.PlatformViewsController: void detachFromView()
io.flutter.embedding.android.FlutterView: void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.Log: void i(java.lang.String,java.lang.String)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
kotlin.coroutines.EmptyCoroutineContext: int hashCode()
kotlin.ranges.IntRange: boolean contains(int)
androidx.collection.MapCollections$EntrySet: boolean addAll(java.util.Collection)
io.flutter.plugin.platform.PlatformPlugin: void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)
androidx.tracing.Trace: void beginAsyncSectionFallback(java.lang.String,int)
androidx.versionedparcelable.VersionedParcel: VersionedParcel(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
kotlinx.coroutines.scheduling.LimitingDispatcher: LimitingDispatcher(kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher,int,java.lang.String,int)
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenTransitionNeededNow()
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
org.tensorflow.lite.TensorImpl: void writeDirectBuffer(long,java.nio.Buffer)
io.flutter.plugin.editing.TextInputPlugin: void hideTextInput(android.view.View)
io.flutter.embedding.android.MotionEventTracker: android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
io.flutter.plugin.platform.PlatformPlugin$1: PlatformPlugin$1(io.flutter.plugin.platform.PlatformPlugin)
kotlinx.coroutines.InvokeOnCancelling: void invoke(java.lang.Throwable)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context)
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: BasicMessageChannel$IncomingMessageHandler$1(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.io.File createTemporaryWritableVideoFile()
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.android.FlutterImageView: boolean acquireLatestImage()
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()
kotlinx.coroutines.JobKt: void ensureActive(kotlinx.coroutines.Job)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.PluginRegistry$Registrar addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void access$000(io.flutter.plugins.imagepicker.ImagePickerDelegate,java.lang.String,boolean)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
io.flutter.embedding.android.FlutterActivity: void onPostResume()
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1)
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$500(io.flutter.embedding.android.FlutterSplashView)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void launchPickImageFromGalleryIntent()
kotlinx.coroutines.internal.ArrayQueue: ArrayQueue()
sq.flutter.tflite.TflitePlugin: boolean scoreIsMaximumInLocalWindow(int,float,int,int,int,float[][][])
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode fromValue(java.lang.String)
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder)
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
io.flutter.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
io.flutter.view.AccessibilityBridge: android.content.ContentResolver access$1100(io.flutter.view.AccessibilityBridge)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
kotlin.collections.EmptyMap: void clear()
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
org.tensorflow.lite.NativeInterpreterWrapper: long createErrorReporter(int)
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$402(io.flutter.embedding.android.FlutterSplashView,java.lang.String)
io.flutter.embedding.android.FlutterTextureView: void connectSurfaceToRenderer()
kotlin.collections.EmptyMap: java.lang.Void get(java.lang.Object)
kotlin.coroutines.CombinedContext$toString$1: java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element)
androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
kotlin.collections.EmptyMap: java.util.Collection getValues()
io.flutter.embedding.android.FlutterView: void sendUserSettingsToFlutter()
androidx.exifinterface.media.ExifInterface: void getOrfAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)
androidx.versionedparcelable.VersionedParcel: boolean isStream()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getStorageDirectoryString(io.flutter.plugins.pathprovider.Messages$StorageDirectory)
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object)
org.tensorflow.lite.NativeInterpreterWrapper: boolean hasUnresolvedFlexOp(long)
io.flutter.view.AccessibilityBridge: void access$800(io.flutter.view.AccessibilityBridge,boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel: TextInputChannel(io.flutter.embedding.engine.dart.DartExecutor)
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence,int)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.android.FlutterTextureView: void access$300(io.flutter.embedding.android.FlutterTextureView,int,int)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightStatusBars(boolean)
io.flutter.plugin.editing.ListenableEditingState: int getComposingEnd()
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: void setSpellCheckMethodHandler(io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleChooseImageResult(int,android.content.Intent)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,boolean)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView access$200(io.flutter.plugin.platform.PlatformViewsController)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object[] newArray(int)
io.flutter.plugin.platform.PlatformViewsController$1: void ensureValidRequest(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3002(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.embedding.android.FlutterTextureView: void access$400(io.flutter.embedding.android.FlutterTextureView)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: ExifInterface$ByteOrderedDataInputStream(java.io.InputStream)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI,java.util.concurrent.ExecutorService)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Object getAppComponent()
io.flutter.embedding.android.FlutterActivity: android.content.Context getContext()
androidx.tracing.Trace: void beginSection(java.lang.String)
kotlin.coroutines.jvm.internal.DebugMetadataKt: kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlinx.coroutines.channels.AbstractChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object offerInternal(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: void onCreate(android.os.Bundle)
androidx.versionedparcelable.VersionedParcelParcel: boolean readField(int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean isRemoved()
androidx.window.embedding.SplitRule: int getMinWidth()
kotlinx.coroutines.JobSupport$Finishing: void addExceptionLocked(java.lang.Throwable)
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelResult$Closed: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean isTerminated()
io.flutter.FlutterInjector$Builder$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: void clearDeadListeners()
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
kotlin.collections.EmptyList: int size()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $values()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.collection.MapCollections$MapIterator: java.util.Map$Entry next()
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.Throwable invoke(java.lang.Throwable)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
io.flutter.plugin.editing.TextInputPlugin: void showTextInput(android.view.View)
kotlinx.coroutines.CoroutineExceptionHandlerImplKt: void handleCoroutineExceptionImpl(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.lifecycle.Lifecycling$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.android.KeyEmbedderResponder: java.lang.Long getPhysicalKey(android.view.KeyEvent)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int getIndex()
org.tensorflow.lite.InterpreterImpl: int getOutputTensorCount()
org.tensorflow.lite.Interpreter: void run(java.lang.Object,java.lang.Object)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.exifinterface.media.ExifInterface: void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int)
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
kotlin.jvm.internal.FunctionReference: int hashCode()
kotlinx.coroutines.CoroutineId: CoroutineId(long)
kotlinx.coroutines.CommonPool: void close()
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
androidx.window.core.Version: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.ContextScope: java.lang.String toString()
kotlinx.coroutines.channels.AbstractChannel: void onReceiveEnqueued()
io.flutter.embedding.android.KeyData: KeyData()
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.exifinterface.media.ExifInterface: void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
kotlin.sequences.TransformingSequence: TransformingSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getExternalStoragePath()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void finalize()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
io.flutter.view.AccessibilityBridge: boolean isAccessibilityEnabled()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6300(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.platform.PlatformViewsController$1: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object offerInternal(java.lang.Object)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferEmpty()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
org.tensorflow.lite.TensorImpl: int[] computeShapeOf(java.lang.Object)
kotlinx.coroutines.internal.ScopeCoroutine: void afterCompletion(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToBroadcastReceiver()
kotlinx.coroutines.CancellableContinuationImpl: boolean tryResume()
io.flutter.plugin.platform.PlatformViewWrapper$2: PlatformViewWrapper$2(io.flutter.plugin.platform.PlatformViewWrapper)
io.flutter.embedding.android.FlutterActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
sq.flutter.tflite.TflitePlugin: void setPixel(byte[],int,long)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()
kotlin.collections.EmptySet: java.lang.String toString()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,char,java.lang.String)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)
androidx.collection.MapCollections$ValuesCollection: boolean retainAll(java.util.Collection)
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice valueOf(java.lang.String)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.JobSupport: boolean isScopedCoroutine()
io.flutter.view.AccessibilityBridge$SemanticsNode: float min(float,float,float,float)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToActivity()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.FlutterEngineCache: void remove(java.lang.String)
kotlinx.coroutines.CoroutineStart: boolean isLazy()
io.flutter.embedding.engine.dart.DartMessenger: void handleError(java.lang.Error)
io.flutter.view.AccessibilityBridge$SemanticsNode: void collectRoutes(java.util.List)
kotlin.ranges.IntProgression: int getStep()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute(io.flutter.view.AccessibilityBridge$1)
io.flutter.plugin.platform.PlatformViewsController$1: void resize(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: SafeCollector_commonKt$checkContext$result$1(kotlinx.coroutines.flow.internal.SafeCollector)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,long,java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler: void runSafely(kotlinx.coroutines.scheduling.Task)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
io.flutter.embedding.android.FlutterView$5: void onFlutterUiNoLongerDisplayed()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors()
io.flutter.embedding.android.FlutterView$1: void onAccessibilityChanged(boolean,boolean)
kotlinx.coroutines.scheduling.NonBlockingContext: int getTaskMode()
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List listOf(java.lang.Object)
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Void)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
kotlinx.coroutines.CancellableContinuationImpl: void resumeWith(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView$3: FlutterSplashView$3(io.flutter.embedding.android.FlutterSplashView)
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: DartMessenger$HandlerInfo(io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue)
io.flutter.embedding.engine.plugins.shim.ShimPluginRegistry$ShimRegistrarAggregate: void addPlugin(io.flutter.embedding.engine.plugins.shim.ShimRegistrar)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine)
org.tensorflow.lite.nnapi.NnApiDelegateImpl: void close()
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
kotlin.sequences.TransformingSequence: java.util.Iterator iterator()
io.flutter.embedding.android.FlutterActivity: java.util.List getDartEntrypointArgs()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.RenderMode getRenderMode()
io.flutter.Log: java.lang.String getStackTraceString(java.lang.Throwable)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.lang.String getResizedImagePath(java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.Throwable invoke(java.lang.Throwable)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.exifinterface.media.ExifInterface$ExifAttribute: double getDoubleValue(java.nio.ByteOrder)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: DeferredComponentChannel$1(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
androidx.arch.core.internal.SafeIterableMap: int size()
kotlinx.coroutines.channels.AbstractSendChannel: void helpClose(kotlinx.coroutines.channels.Closed)
kotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)
kotlinx.coroutines.internal.FastServiceLoader: FastServiceLoader()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4502(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.flutter.plugin.platform.PlatformViewsController: void onDetachedFromJNI()
kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.android.FlutterView: void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.window.layout.FoldingFeature: boolean isSeparating()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void park()
kotlinx.coroutines.internal.ThreadState: void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object)
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationStart(android.animation.Animator)
sq.flutter.tflite.TflitePlugin: java.nio.ByteBuffer feedInputTensorFrame(java.util.List,int,int,float,float,int)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
sq.flutter.tflite.TflitePlugin$2: int compare(java.util.Map,java.util.Map)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
androidx.core.content.FileProvider$SimplePathStrategy: FileProvider$SimplePathStrategy(java.lang.String)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(android.hardware.display.DisplayManager,io.flutter.embedding.engine.FlutterJNI)
kotlin.jvm.internal.Intrinsics: Intrinsics()
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: void writeParcelable(android.os.Parcelable)
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
io.flutter.plugin.platform.PlatformViewsController$1: void clearFocus(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.CharSequence readCharSequence()
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didChangeLabel()
androidx.exifinterface.media.ExifInterface: void getStandaloneAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$500(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.collection.MapCollections$KeySet: boolean remove(java.lang.Object)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
kotlinx.coroutines.channels.ArrayChannel: void ensureCapacity(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
io.flutter.plugin.platform.PlatformPlugin$2: void onSystemUiVisibilityChange(int)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$7000(io.flutter.view.AccessibilityBridge,int)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
sq.flutter.tflite.TflitePlugin$RunSegmentationOnBinary: TflitePlugin$RunSegmentationOnBinary(sq.flutter.tflite.TflitePlugin,java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Void)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
androidx.exifinterface.media.ExifInterface: ExifInterface(java.lang.String)
androidx.lifecycle.ClassesInfoCache$MethodReference: boolean equals(java.lang.Object)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: ExifInterface$ByteOrderedDataInputStream(java.io.InputStream,java.nio.ByteOrder)
kotlin.UNINITIALIZED_VALUE: UNINITIALIZED_VALUE()
kotlinx.coroutines.EventLoop: void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.core.content.FileProvider: FileProvider()
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop()
kotlinx.coroutines.scheduling.CoroutineScheduler: int createNewWorker()
io.flutter.plugin.platform.PlatformViewsController: boolean access$1602(io.flutter.plugin.platform.PlatformViewsController,boolean)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.exifinterface.media.ExifInterface: void loadAttributes(java.io.InputStream)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
sq.flutter.tflite.TflitePlugin: float[] getDisplacement(int,int[],float[][][])
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleChooseVideoResult(int,android.content.Intent)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerPropertiesList(java.lang.Object)
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale resolveNativeLocale(java.util.List)
io.flutter.embedding.android.FlutterActivity: java.lang.String getCachedEngineId()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)
kotlinx.coroutines.channels.Closed: java.lang.String toString()
io.flutter.plugin.platform.PlatformViewsController: void setSoftwareRendering(boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void runWorker()
androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
io.flutter.plugins.imagepicker.ImagePickerCache: void setType(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context)
io.flutter.plugin.platform.PlatformViewsController: void initializeRootImageViewIfNeeded()
kotlinx.coroutines.Empty: kotlinx.coroutines.NodeList getList()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String findAppBundlePath()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String)
androidx.window.embedding.SplitPairFilter: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode(java.lang.String,int)
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmoji(int)
io.flutter.embedding.android.FlutterView: void convertToImageView()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: LockFreeLinkedListNode$CondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
kotlinx.coroutines.internal.StackTraceRecoveryKt: int frameIndex(java.lang.StackTraceElement[],java.lang.String)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getString(android.os.Bundle,java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl access$1300(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.internal.ScopeCoroutine: boolean isScopedCoroutine()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: int hashCode()
androidx.collection.MapCollections$EntrySet: boolean remove(java.lang.Object)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent access$300(io.flutter.view.AccessibilityBridge,int,int)
kotlin.collections.EmptyList: boolean contains(java.lang.Void)
org.tensorflow.lite.Interpreter: Interpreter(org.tensorflow.lite.NativeInterpreterWrapperExperimental)
androidx.exifinterface.media.ExifInterface: void saveJpegAttributes(java.io.InputStream,java.io.OutputStream)
io.flutter.embedding.android.FlutterActivity: void onBackPressed()
kotlin.ranges.IntProgression$Companion: IntProgression$Companion()
io.flutter.plugin.editing.ListenableEditingState: java.lang.String toString()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.ranges.IntProgression$Companion: IntProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterSplashView$3: void run()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.editing.TextInputPlugin: void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: DartMessenger$SerialTaskQueue(java.util.concurrent.ExecutorService)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValue(java.nio.ByteBuffer)
kotlinx.coroutines.scheduling.CoroutineScheduler: int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewAttachedToWindow(android.view.View)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
kotlinx.coroutines.CoroutineName: java.lang.String toString()
kotlin.jvm.internal.TypeIntrinsics: boolean isFunctionOfArity(java.lang.Object,int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable createFinalException(java.lang.Throwable,java.lang.Throwable,java.util.ArrayDeque)
io.flutter.embedding.android.KeyboardMap$1: KeyboardMap$1()
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
kotlin.jvm.internal.CallableReference: boolean isOpen()
io.flutter.view.AccessibilityBridge$1: void announce(java.lang.String)
sq.flutter.tflite.TflitePlugin: java.nio.ByteBuffer feedInputTensorImage(java.lang.String,float,float)
org.tensorflow.lite.Delegate: void close()
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.lang.Iterable)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
io.flutter.embedding.android.FlutterView: void redispatch(android.view.KeyEvent)
io.flutter.plugins.imagepicker.ImageResizer: android.graphics.Bitmap decodeFile(java.lang.String)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder)
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.jvm.internal.CompletedContinuation: void resumeWith(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: int access$700(io.flutter.plugin.platform.PlatformViewsController,double)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.String invoke(kotlin.ranges.IntRange)
kotlinx.coroutines.internal.ArrayQueue: void addLast(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: java.lang.Object getSystemService(java.lang.String)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: void destroyOverlaySurfaces()
kotlinx.coroutines.CommonPool: void isGoodCommonPool$lambda-9()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
io.flutter.embedding.android.DrawableSplashScreen: void transitionToFlutter(java.lang.Runnable)
org.tensorflow.lite.nnapi.NnApiDelegate$Options: java.lang.Boolean getUseNnapiCpu()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryPark()
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferAlwaysEmpty()
io.flutter.embedding.android.FlutterView: void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean)
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken: DartMessenger$TaskQueueToken(io.flutter.embedding.engine.dart.DartMessenger$1)
androidx.lifecycle.ReflectiveGenericLifecycleObserver: ReflectiveGenericLifecycleObserver(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: int readInt(int,int)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean)
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.MotionEventTracker: MotionEventTracker()
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
kotlin.collections.EmptyList: boolean isEmpty()
kotlinx.coroutines.DispatchedTask: void handleFatalException(java.lang.Throwable,java.lang.Throwable)
io.flutter.plugin.editing.ListenableEditingState: int getComposingStart()
io.flutter.plugin.platform.PlatformViewsController: int toPhysicalPixels(double)
io.flutter.plugins.imagepicker.ImagePickerPlugin: io.flutter.plugins.imagepicker.ImagePickerPlugin$ActivityState access$000(io.flutter.plugins.imagepicker.ImagePickerPlugin)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: FlutterRenderer$1(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: ExceptionsConstuctorKt$tryCopyException$5$1()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityEnabled()
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler access$000(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: ImagePickerPlugin$MethodResultWrapper(io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onSaveInstanceState(android.os.Bundle)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: SafeCollectorKt$emitFun$1()
androidx.exifinterface.media.ExifInterface: void copyChunksUpToGivenChunkType(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream,byte[],byte[])
androidx.exifinterface.media.ExifInterface$Rational: java.lang.String toString()
io.flutter.plugin.platform.PlatformViewWrapper: void recreateSurfaceIfNeeded()
sq.flutter.tflite.TflitePlugin$1: TflitePlugin$1(sq.flutter.tflite.TflitePlugin)
io.flutter.plugin.platform.PlatformViewWrapper: java.util.concurrent.atomic.AtomicLong access$000(io.flutter.plugin.platform.PlatformViewWrapper)
io.flutter.embedding.android.FlutterSurfaceView$1: FlutterSurfaceView$1(io.flutter.embedding.android.FlutterSurfaceView)
kotlin.coroutines.CoroutineContext$plus$1: CoroutineContext$plus$1()
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
sq.flutter.tflite.TflitePlugin$RunModelOnFrame: void runTflite()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.scheduling.WorkQueue: int getSize$kotlinx_coroutines_core()
io.flutter.plugin.platform.PlatformViewWrapper: PlatformViewWrapper(android.content.Context)
org.tensorflow.lite.Interpreter$Options: org.tensorflow.lite.Interpreter$Options setNumThreads(int)
io.flutter.plugins.pathprovider.PathProviderPlugin: PathProviderPlugin()
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
androidx.lifecycle.Lifecycle$Event: Lifecycle$Event(java.lang.String,int)
io.flutter.embedding.android.FlutterActivity: void onFlutterUiNoLongerDisplayed()
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int,int,int)
io.flutter.plugin.editing.TextInputPlugin: int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization)
io.flutter.plugin.editing.TextInputPlugin: boolean canShowTextInput()
sq.flutter.tflite.TflitePlugin: boolean withinNmsRadiusOfCorrespondingPoint(java.util.List,float,float,float,int)
org.tensorflow.lite.TensorImpl: void close()
sq.flutter.tflite.TflitePlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateWith(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)
kotlin.collections.EmptyIterator: int previousIndex()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.Throwable invoke(java.lang.Throwable)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.String invoke(java.lang.String)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: java.lang.String toString()
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.CompletedWithCancellation: int hashCode()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
kotlinx.coroutines.CancellableContinuationImpl: boolean cancelLater(java.lang.Throwable)
io.flutter.embedding.android.FlutterView: boolean fitSystemWindows(android.graphics.Rect)
io.flutter.embedding.android.FlutterView: boolean checkInputConnectionProxy(android.view.View)
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.content.FileProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
kotlin.collections.MapsKt__MapsKt: java.util.Map emptyMap()
kotlinx.coroutines.DefaultExecutor: void acknowledgeShutdownIfNeeded()
kotlin.collections.EmptyIterator: boolean hasNext()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterTextureView)
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean)
io.flutter.plugin.platform.PlatformViewWrapper: void onDescendantInvalidated(android.view.View,android.view.View)
androidx.collection.MapCollections$KeySet: boolean addAll(java.util.Collection)
androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream: void seek(long)
io.flutter.plugins.imagepicker.ImagePickerCache: void setMaxDimension(java.lang.Double,java.lang.Double,int)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.content.Context createDisplayContext(android.view.Display)
kotlinx.coroutines.channels.AbstractChannel: boolean access$enqueueReceive(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive)
androidx.exifinterface.media.ExifInterface: void saveAttributes()
kotlinx.coroutines.internal.SystemPropsKt: long systemProp(java.lang.String,long,long,long)
io.flutter.plugins.imagepicker.ImagePickerCache: void saveResult(java.util.ArrayList,java.lang.String,java.lang.String)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
io.flutter.embedding.android.FlutterTextureView: boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
org.tensorflow.lite.TensorImpl: void copyTo(java.lang.Object)
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1: SpellCheckChannel$1(io.flutter.embedding.engine.systemchannels.SpellCheckChannel)
androidx.exifinterface.media.ExifInterfaceUtils: void copy(java.io.InputStream,java.io.OutputStream,int)
kotlin.coroutines.CoroutineContext$plus$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiDisplayed()
androidx.exifinterface.media.ExifInterface: boolean shouldSupportSeek(int)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
io.flutter.plugin.common.StandardMessageCodec: void writeLong(java.io.ByteArrayOutputStream,long)
androidx.collection.ArrayMap$1: int colIndexOfKey(java.lang.Object)
org.tensorflow.lite.TensorImpl: int computeNumDimensions(java.lang.Object)
io.flutter.plugin.editing.ListenableEditingState: void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: io.flutter.plugin.common.BinaryMessenger messenger()
androidx.window.embedding.SplitRule: SplitRule()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.window.layout.WindowLayoutInfo: int hashCode()
io.flutter.view.AccessibilityBridge: void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.FlutterEngineCache: void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.Unconfined: Unconfined()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
io.flutter.view.AccessibilityBridge: android.view.View access$100(io.flutter.view.AccessibilityBridge)
kotlin.ranges.RangesKt___RangesKt: long coerceAtLeast(long,long)
kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: int coerceIn(int,int,int)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiNoLongerDisplayed()
kotlin.text.DelimitedRangesSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.EventLoopImplBase: java.lang.Runnable dequeue()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1: ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1()
io.flutter.embedding.engine.dart.PlatformTaskQueue: void dispatch(java.lang.Runnable)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View,int)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void takeImageWithCamera(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int)
io.flutter.plugin.common.MethodCall: MethodCall(java.lang.String,java.lang.Object)
org.tensorflow.lite.NativeInterpreterWrapper: void allowFp16PrecisionForFp32(long,boolean)
androidx.versionedparcelable.VersionedParcelParcel: void writeString(java.lang.String)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performEditorAction(int)
io.flutter.plugin.platform.VirtualDisplayController: android.view.View getView()
kotlinx.coroutines.EventLoopImplBase: void setCompleted(boolean)
androidx.exifinterface.media.ExifInterfaceUtils: java.lang.String byteArrayToHexString(byte[])
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
kotlinx.coroutines.scheduling.LimitingDispatcher: void afterTask()
kotlinx.coroutines.internal.ThreadSafeHeap: void siftUpFrom(int)
kotlin.collections.EmptyList: java.lang.Object set(int,java.lang.Object)
kotlin.collections.EmptyList: java.util.ListIterator listIterator()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable)
io.flutter.view.VsyncWaiter: VsyncWaiter(io.flutter.embedding.engine.FlutterJNI)
kotlinx.coroutines.InvokeOnCompletion: void invoke(java.lang.Throwable)
androidx.collection.ArrayMap$1: void colRemoveAt(int)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
kotlinx.coroutines.ChildContinuation: void invoke(java.lang.Throwable)
kotlinx.coroutines.internal.FastServiceLoader: java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
kotlinx.coroutines.JobSupport: void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
io.flutter.embedding.android.FlutterActivity: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
sq.flutter.tflite.TflitePlugin: boolean access$000(sq.flutter.tflite.TflitePlugin)
androidx.collection.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)
org.tensorflow.lite.TensorImpl: void readMultiDimensionalArray(long,java.lang.Object)
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.exifinterface.media.ExifInterface: void saveWebpAttributes(java.io.InputStream,java.io.OutputStream)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate)
androidx.collection.MapCollections$ValuesCollection: java.util.Iterator iterator()
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onDetachedFromActivity()
kotlinx.coroutines.AbstractCoroutine: void afterResume(java.lang.Object)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
kotlinx.coroutines.CompletedWithCancellation: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent)
io.flutter.embedding.android.FlutterActivity: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
kotlinx.coroutines.CommonPool: java.util.concurrent.ExecutorService createPlainPool()
io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugin.platform.PlatformPlugin: void setClipboardData(java.lang.String)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: StringsKt__StringsKt$rangesDelimitedBy$2(java.util.List,boolean)
androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)
io.flutter.view.AccessibilityBridge$4: AccessibilityBridge$4(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityManager)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performContextMenuAction(int)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
io.flutter.plugin.editing.TextInputPlugin$1: void requestAutofill()
kotlin.collections.EmptySet: void clear()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides()
kotlin.ranges.RangesKt___RangesKt: long coerceAtMost(long,long)
kotlinx.coroutines.internal.ThreadState: void restore(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.DispatchedTaskKt: void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingDeltaJSON(java.util.ArrayList)
kotlinx.coroutines.scheduling.NanoTimeSource: NanoTimeSource()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getHint()
androidx.versionedparcelable.VersionedParcelParcel: boolean readBoolean()
kotlinx.coroutines.channels.LinkedListChannel: java.lang.Object offerInternal(java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin: void restoreSystemChromeSystemUIOverlays()
io.flutter.plugin.editing.TextInputPlugin: void unlockPlatformViewInputConnection()
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
kotlinx.coroutines.CoroutineDispatcher: java.lang.String toString()
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
sq.flutter.tflite.TflitePlugin$TfliteTask: void onPostExecute(java.lang.Void)
androidx.exifinterface.media.ExifInterface: byte[] getThumbnail()
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: AbstractChannel$ReceiveHasNext(kotlinx.coroutines.channels.AbstractChannel$Itr,kotlinx.coroutines.CancellableContinuation)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
kotlinx.coroutines.JobSupport: java.lang.String toDebugString()
io.flutter.plugin.platform.PlatformPlugin$2: PlatformPlugin$2(io.flutter.plugin.platform.PlatformPlugin,android.view.View)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
io.flutter.plugin.platform.PlatformViewsController: void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService access$200(io.flutter.embedding.engine.loader.FlutterLoader)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
kotlinx.coroutines.JobSupport: java.lang.String stateString(java.lang.Object)
kotlin.random.jdk8.PlatformThreadLocalRandom: java.util.Random getImpl()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String)
kotlin.collections.EmptyMap: int hashCode()
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
sq.flutter.tflite.TflitePlugin: TflitePlugin(io.flutter.plugin.common.PluginRegistry$Registrar)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
androidx.versionedparcelable.VersionedParcelParcel: void writeInt(int)
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean isRemoved()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable)
androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void idleReset(int)
io.flutter.plugins.imagepicker.ImagePickerCache: java.util.Map getCacheMap()
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationCancel(android.animation.Animator)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean)
kotlinx.coroutines.channels.AbstractChannel$Itr: boolean hasNextResult(java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine)
kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)
kotlinx.coroutines.channels.AbstractSendChannel: void onClosedIdempotent(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
kotlin.collections.EmptyList: java.util.ListIterator listIterator(int)
androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)
io.flutter.plugin.localization.LocalizationPlugin$1: LocalizationPlugin$1(io.flutter.plugin.localization.LocalizationPlugin)
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute(io.flutter.view.AccessibilityBridge$1)
sq.flutter.tflite.TflitePlugin$RunPix2PixOnBinary: TflitePlugin$RunPix2PixOnBinary(sq.flutter.tflite.TflitePlugin,java.util.HashMap,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.CancellableContinuationKt: kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: io.flutter.plugin.common.MethodChannel$Result access$100(io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$700(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.android.FlutterActivity: java.lang.String getInitialRoute()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void missing()
io.flutter.plugin.platform.PlatformViewsController$1: void synchronizeToNativeViewHierarchy(boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDetach()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
sq.flutter.tflite.TflitePlugin$RunYOLO: void onRunTfliteDone()
io.flutter.plugin.platform.PlatformViewWrapper: int getBufferWidth()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: FlutterActivityLaunchConfigs$BackgroundMode(java.lang.String,int)
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel)
io.flutter.embedding.android.FlutterView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: CompositeGeneratedAdaptersObserver(androidx.lifecycle.GeneratedAdapter[])
io.flutter.embedding.engine.systemchannels.SystemChannel: void sendMemoryPressureWarning()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
io.flutter.plugin.editing.TextInputPlugin: boolean composingChanged(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
kotlinx.coroutines.JobSupport: boolean getOnCancelComplete$kotlinx_coroutines_core()
io.flutter.embedding.engine.systemchannels.RestorationChannel: void setRestorationData(byte[])
kotlin.Unit: Unit()
androidx.collection.MapCollections$MapIterator: java.lang.String toString()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode)
org.tensorflow.lite.NativeInterpreterWrapper: void run(java.lang.Object[],java.util.Map)
io.flutter.embedding.android.FlutterView$1: FlutterView$1(io.flutter.embedding.android.FlutterView)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.lang.String readUTF()
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,char,int,boolean)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpRemovePrev()
io.flutter.view.AccessibilityBridge: int access$1272(io.flutter.view.AccessibilityBridge,int)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferAlwaysEmpty()
io.flutter.embedding.engine.dart.DartExecutor: void onAttachedToJNI()
org.tensorflow.lite.NativeInterpreterWrapper: long allocateTensors(long,long)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toStringInternalImpl()
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeView(java.lang.Object[])
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleKeyEvent(android.view.KeyEvent)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String translateAutofillHint(java.lang.String)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
kotlinx.coroutines.AbstractCoroutine: void onCompletionInternal(java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel: void removeReceiveOnCancel(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive)
androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.view.AccessibilityBridge: void access$1400(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void draw(android.graphics.Canvas)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiDisplayed()
kotlin.collections.EmptyIterator: int nextIndex()
androidx.collection.SimpleArrayMap: int hashCode()
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray(java.lang.Object[])
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$FrameCallback access$202(io.flutter.view.VsyncWaiter,io.flutter.view.VsyncWaiter$FrameCallback)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityForConfigChanges()
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: DartMessenger$DefaultTaskQueueFactory()
kotlinx.coroutines.internal.StackTraceRecoveryKt: kotlin.Pair causeAndStacktrace(java.lang.Throwable)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
kotlinx.coroutines.CancellableContinuationImpl: void detachChildIfNonResuable()
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager access$500(io.flutter.plugin.editing.TextInputPlugin)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: PlatformChannel$SystemUiOverlay(java.lang.String,int,java.lang.String)
io.flutter.plugin.editing.SpellCheckPlugin: void destroy()
androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)
io.flutter.view.AccessibilityBridge: void access$1300(io.flutter.view.AccessibilityBridge)
org.tensorflow.lite.InterpreterApi$Options: java.util.List getDelegates()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.lang.Iterable)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.core.os.ExecutorCompat$HandlerExecutor: void execute(java.lang.Runnable)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int)
io.flutter.embedding.engine.plugins.shim.ShimRegistrar: void addExistingListenersToActivityPluginBinding()
kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class)
androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
androidx.core.view.WindowInsetsControllerCompat$Impl: WindowInsetsControllerCompat$Impl()
kotlin.text.StringsKt__StringsKt: void requireNonNegativeLimit(int)
io.flutter.plugin.platform.VirtualDisplayController$1$1: void run()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryTerminateWorker()
kotlin.text.DelimitedRangesSequence: int access$getLimit$p(kotlin.text.DelimitedRangesSequence)
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
io.flutter.plugin.editing.TextInputPlugin: void access$700(io.flutter.plugin.editing.TextInputPlugin,double,double,double[])
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6600(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.random.Random: int nextInt()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: RestorationChannel$2(io.flutter.embedding.engine.systemchannels.RestorationChannel)
kotlinx.coroutines.CoroutinesInternalError: CoroutinesInternalError(java.lang.String,java.lang.Throwable)
org.tensorflow.lite.TensorImpl: boolean hasDelegateBufferHandle(long)
kotlinx.coroutines.CancellableContinuationImpl: void detachChild$kotlinx_coroutines_core()
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object getExceptionsHolder()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: SingleViewPresentation$PresentationState()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
io.flutter.embedding.android.FlutterView: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel()
org.tensorflow.lite.TensorFlowLite: void init()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void removeAll()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
io.flutter.plugin.editing.ListenableEditingState: ListenableEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View)
io.flutter.embedding.android.FlutterImageView: void closeImageReader()
kotlin.collections.EmptyMap: int size()
io.flutter.plugin.platform.PlatformViewsController$1: void setDirection(int,int)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
io.flutter.embedding.android.FlutterView: void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object singleOrNull(java.lang.Object[])
androidx.collection.MapCollections$MapIterator: int hashCode()
io.flutter.view.AccessibilityBridge: boolean isTouchExplorationEnabled()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
kotlin.reflect.KVisibility: KVisibility(java.lang.String,int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object pollInternal()
io.flutter.plugins.imagepicker.ImagePickerPlugin: void tearDown()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationComplete(android.content.Context,java.lang.String[])
io.flutter.embedding.engine.systemchannels.TextInputChannel: void performPrivateCommand(int,java.lang.String,android.os.Bundle)
kotlinx.coroutines.JobSupport: void onStart()
kotlin.collections.EmptyMap: int getSize()
kotlinx.coroutines.internal.LockFreeTaskQueue: LockFreeTaskQueue(boolean)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence asSequence(java.util.Iterator)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createDouble(double[],java.nio.ByteOrder)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()
androidx.exifinterface.media.ExifInterface: void getPngAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
kotlin.Result$Companion: Result$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$2: void onFrameAvailable(android.graphics.SurfaceTexture)
io.flutter.plugin.common.StandardMessageCodec: void writeAlignment(java.io.ByteArrayOutputStream,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture)
io.flutter.plugin.platform.PlatformViewsController: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
io.flutter.view.AccessibilityBridge: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState[] newArray(int)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key()
androidx.window.layout.HardwareFoldingFeature: int hashCode()
kotlin.collections.EmptySet: java.lang.Object[] toArray(java.lang.Object[])
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2202(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
io.flutter.view.AccessibilityBridge$1: AccessibilityBridge$1(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiChangeListener()
androidx.core.content.FileProvider$SimplePathStrategy: android.net.Uri getUriForFile(java.io.File)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void detachFromFlutterEngine()
kotlin.text.DelimitedRangesSequence: java.util.Iterator iterator()
io.flutter.embedding.android.DrawableSplashScreen: android.view.View createSplashView(android.content.Context,android.os.Bundle)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityDestroyed(android.app.Activity)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.flutter.embedding.android.FlutterActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)
kotlinx.coroutines.internal.SystemPropsKt: int getAVAILABLE_PROCESSORS()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitPairRule: int hashCode()
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)
io.flutter.embedding.engine.dart.DartMessenger$Reply: DartMessenger$Reply(io.flutter.embedding.engine.FlutterJNI,int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView)
androidx.collection.MapCollections$ValuesCollection: MapCollections$ValuesCollection(androidx.collection.MapCollections)
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetWindowFlag(int)
androidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.internal.ArrayQueue: void ensureCapacity()
kotlin.collections.EmptyList: boolean containsAll(java.util.Collection)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
kotlin.coroutines.CombinedContext: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setBrieflyShowPassword(boolean)
io.flutter.plugins.imagepicker.ImageResizer: void copyExif(java.lang.String,java.lang.String)
kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
sq.flutter.tflite.TflitePlugin: java.util.List GetTopN(int,float)
kotlinx.coroutines.JobSupport: boolean childCancelled(java.lang.Throwable)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler)
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher()
kotlinx.coroutines.EventLoop: boolean processUnconfinedEvent()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsPaused()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void beforeTask(int)
androidx.lifecycle.ClassesInfoCache: ClassesInfoCache()
kotlinx.coroutines.flow.AbstractFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListHead getQueue()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
io.flutter.plugin.platform.PlatformViewWrapper: boolean onTouchEvent(android.view.MotionEvent)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: SingleViewPresentation$WindowManagerHandler(android.view.WindowManager,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
kotlin.internal.PlatformImplementations: PlatformImplementations()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
kotlin.collections.IntIterator: void remove()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
kotlinx.coroutines.JobSupport: void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: TextInputChannel$TextEditState(java.lang.String,int,int,int,int)
kotlinx.coroutines.CoroutineStart: CoroutineStart(java.lang.String,int)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightNavigationBars(boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.text.SpannableString createSpannableString(java.lang.String,java.util.List)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIOverlays(java.util.List)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id()
kotlin.jvm.internal.FunctionReference: int getArity()
